(function() {var implementors = {};
implementors["aho_corasick"] = [{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/struct.AhoCorasick.html\" title=\"struct aho_corasick::AhoCorasick\">AhoCorasick</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["aho_corasick::ahocorasick::AhoCorasick"]},{"text":"impl&lt;'a, 'b, S&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/struct.FindIter.html\" title=\"struct aho_corasick::FindIter\">FindIter</a>&lt;'a, 'b, S&gt;","synthetic":true,"types":["aho_corasick::ahocorasick::FindIter"]},{"text":"impl&lt;'a, 'b, S&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/struct.FindOverlappingIter.html\" title=\"struct aho_corasick::FindOverlappingIter\">FindOverlappingIter</a>&lt;'a, 'b, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["aho_corasick::ahocorasick::FindOverlappingIter"]},{"text":"impl&lt;'a, R, S&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/struct.StreamFindIter.html\" title=\"struct aho_corasick::StreamFindIter\">StreamFindIter</a>&lt;'a, R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["aho_corasick::ahocorasick::StreamFindIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/struct.AhoCorasickBuilder.html\" title=\"struct aho_corasick::AhoCorasickBuilder\">AhoCorasickBuilder</a>","synthetic":true,"types":["aho_corasick::ahocorasick::AhoCorasickBuilder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aho_corasick/enum.MatchKind.html\" title=\"enum aho_corasick::MatchKind\">MatchKind</a>","synthetic":true,"types":["aho_corasick::ahocorasick::MatchKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/struct.Error.html\" title=\"struct aho_corasick::Error\">Error</a>","synthetic":true,"types":["aho_corasick::error::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aho_corasick/enum.ErrorKind.html\" title=\"enum aho_corasick::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["aho_corasick::error::ErrorKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aho_corasick/packed/enum.MatchKind.html\" title=\"enum aho_corasick::packed::MatchKind\">MatchKind</a>","synthetic":true,"types":["aho_corasick::packed::api::MatchKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/packed/struct.Config.html\" title=\"struct aho_corasick::packed::Config\">Config</a>","synthetic":true,"types":["aho_corasick::packed::api::Config"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/packed/struct.Builder.html\" title=\"struct aho_corasick::packed::Builder\">Builder</a>","synthetic":true,"types":["aho_corasick::packed::api::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/packed/struct.Searcher.html\" title=\"struct aho_corasick::packed::Searcher\">Searcher</a>","synthetic":true,"types":["aho_corasick::packed::api::Searcher"]},{"text":"impl&lt;'s, 'h&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/packed/struct.FindIter.html\" title=\"struct aho_corasick::packed::FindIter\">FindIter</a>&lt;'s, 'h&gt;","synthetic":true,"types":["aho_corasick::packed::api::FindIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/struct.Match.html\" title=\"struct aho_corasick::Match\">Match</a>","synthetic":true,"types":["aho_corasick::Match"]}];
implementors["atty"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"atty/enum.Stream.html\" title=\"enum atty::Stream\">Stream</a>","synthetic":true,"types":["atty::Stream"]}];
implementors["bumpalo"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"bumpalo/struct.AllocErr.html\" title=\"struct bumpalo::AllocErr\">AllocErr</a>","synthetic":true,"types":["bumpalo::alloc::AllocErr"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"enum\" href=\"bumpalo/enum.AllocOrInitError.html\" title=\"enum bumpalo::AllocOrInitError\">AllocOrInitError</a>&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":["bumpalo::AllocOrInitError"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"bumpalo/struct.Bump.html\" title=\"struct bumpalo::Bump\">Bump</a>","synthetic":true,"types":["bumpalo::Bump"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bumpalo/struct.ChunkIter.html\" title=\"struct bumpalo::ChunkIter\">ChunkIter</a>&lt;'a&gt;","synthetic":true,"types":["bumpalo::ChunkIter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bumpalo/struct.ChunkRawIter.html\" title=\"struct bumpalo::ChunkRawIter\">ChunkRawIter</a>&lt;'a&gt;","synthetic":true,"types":["bumpalo::ChunkRawIter"]}];
implementors["clap"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"clap/error/enum.ContextKind.html\" title=\"enum clap::error::ContextKind\">ContextKind</a>","synthetic":true,"types":["clap::error::context::ContextKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"clap/error/enum.ContextValue.html\" title=\"enum clap::error::ContextValue\">ContextValue</a>","synthetic":true,"types":["clap::error::context::ContextValue"]},{"text":"impl Freeze for <a class=\"enum\" href=\"clap/error/enum.ErrorKind.html\" title=\"enum clap::error::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["clap::error::kind::ErrorKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"clap/error/struct.Error.html\" title=\"struct clap::error::Error\">Error</a>","synthetic":true,"types":["clap::error::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"clap/enum.AppSettings.html\" title=\"enum clap::AppSettings\">AppSettings</a>","synthetic":true,"types":["clap::build::app_settings::AppSettings"]},{"text":"impl&lt;'help&gt; Freeze for <a class=\"struct\" href=\"clap/struct.Arg.html\" title=\"struct clap::Arg\">Arg</a>&lt;'help&gt;","synthetic":true,"types":["clap::build::arg::Arg"]},{"text":"impl&lt;'help&gt; Freeze for <a class=\"struct\" href=\"clap/struct.ArgGroup.html\" title=\"struct clap::ArgGroup\">ArgGroup</a>&lt;'help&gt;","synthetic":true,"types":["clap::build::arg_group::ArgGroup"]},{"text":"impl Freeze for <a class=\"enum\" href=\"clap/enum.ArgSettings.html\" title=\"enum clap::ArgSettings\">ArgSettings</a>","synthetic":true,"types":["clap::build::arg_settings::ArgSettings"]},{"text":"impl&lt;'help&gt; Freeze for <a class=\"struct\" href=\"clap/struct.App.html\" title=\"struct clap::App\">App</a>&lt;'help&gt;","synthetic":true,"types":["clap::build::command::App"]},{"text":"impl&lt;'help&gt; Freeze for <a class=\"struct\" href=\"clap/struct.PossibleValue.html\" title=\"struct clap::PossibleValue\">PossibleValue</a>&lt;'help&gt;","synthetic":true,"types":["clap::build::possible_value::PossibleValue"]},{"text":"impl Freeze for <a class=\"enum\" href=\"clap/enum.ValueHint.html\" title=\"enum clap::ValueHint\">ValueHint</a>","synthetic":true,"types":["clap::build::value_hint::ValueHint"]},{"text":"impl Freeze for <a class=\"struct\" href=\"clap/struct.ArgMatches.html\" title=\"struct clap::ArgMatches\">ArgMatches</a>","synthetic":true,"types":["clap::parse::matches::arg_matches::ArgMatches"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"clap/struct.Values.html\" title=\"struct clap::Values\">Values</a>&lt;'a&gt;","synthetic":true,"types":["clap::parse::matches::arg_matches::Values"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"clap/struct.OsValues.html\" title=\"struct clap::OsValues\">OsValues</a>&lt;'a&gt;","synthetic":true,"types":["clap::parse::matches::arg_matches::OsValues"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"clap/struct.Indices.html\" title=\"struct clap::Indices\">Indices</a>&lt;'a&gt;","synthetic":true,"types":["clap::parse::matches::arg_matches::Indices"]},{"text":"impl Freeze for <a class=\"enum\" href=\"clap/enum.ValueSource.html\" title=\"enum clap::ValueSource\">ValueSource</a>","synthetic":true,"types":["clap::parse::matches::value_source::ValueSource"]},{"text":"impl Freeze for <a class=\"enum\" href=\"clap/enum.ColorChoice.html\" title=\"enum clap::ColorChoice\">ColorChoice</a>","synthetic":true,"types":["clap::util::color::ColorChoice"]}];
implementors["clap_lex"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"clap_lex/struct.RawArgs.html\" title=\"struct clap_lex::RawArgs\">RawArgs</a>","synthetic":true,"types":["clap_lex::RawArgs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"clap_lex/struct.ArgCursor.html\" title=\"struct clap_lex::ArgCursor\">ArgCursor</a>","synthetic":true,"types":["clap_lex::ArgCursor"]},{"text":"impl&lt;'s&gt; Freeze for <a class=\"struct\" href=\"clap_lex/struct.ParsedArg.html\" title=\"struct clap_lex::ParsedArg\">ParsedArg</a>&lt;'s&gt;","synthetic":true,"types":["clap_lex::ParsedArg"]},{"text":"impl&lt;'s&gt; Freeze for <a class=\"struct\" href=\"clap_lex/struct.ShortFlags.html\" title=\"struct clap_lex::ShortFlags\">ShortFlags</a>&lt;'s&gt;","synthetic":true,"types":["clap_lex::ShortFlags"]}];
implementors["const_format"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"const_format/struct.SplicedStr.html\" title=\"struct const_format::SplicedStr\">SplicedStr</a>","synthetic":true,"types":["const_format::__str_methods::str_splice::SplicedStr"]}];
implementors["crossbeam_channel"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.Sender.html\" title=\"struct crossbeam_channel::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_channel::channel::Sender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.Receiver.html\" title=\"struct crossbeam_channel::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_channel::channel::Receiver"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.Iter.html\" title=\"struct crossbeam_channel::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["crossbeam_channel::channel::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.TryIter.html\" title=\"struct crossbeam_channel::TryIter\">TryIter</a>&lt;'a, T&gt;","synthetic":true,"types":["crossbeam_channel::channel::TryIter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.IntoIter.html\" title=\"struct crossbeam_channel::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_channel::channel::IntoIter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.SendError.html\" title=\"struct crossbeam_channel::SendError\">SendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["crossbeam_channel::err::SendError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"crossbeam_channel/enum.TrySendError.html\" title=\"enum crossbeam_channel::TrySendError\">TrySendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["crossbeam_channel::err::TrySendError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"crossbeam_channel/enum.SendTimeoutError.html\" title=\"enum crossbeam_channel::SendTimeoutError\">SendTimeoutError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["crossbeam_channel::err::SendTimeoutError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.RecvError.html\" title=\"struct crossbeam_channel::RecvError\">RecvError</a>","synthetic":true,"types":["crossbeam_channel::err::RecvError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"crossbeam_channel/enum.TryRecvError.html\" title=\"enum crossbeam_channel::TryRecvError\">TryRecvError</a>","synthetic":true,"types":["crossbeam_channel::err::TryRecvError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"crossbeam_channel/enum.RecvTimeoutError.html\" title=\"enum crossbeam_channel::RecvTimeoutError\">RecvTimeoutError</a>","synthetic":true,"types":["crossbeam_channel::err::RecvTimeoutError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.TrySelectError.html\" title=\"struct crossbeam_channel::TrySelectError\">TrySelectError</a>","synthetic":true,"types":["crossbeam_channel::err::TrySelectError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.SelectTimeoutError.html\" title=\"struct crossbeam_channel::SelectTimeoutError\">SelectTimeoutError</a>","synthetic":true,"types":["crossbeam_channel::err::SelectTimeoutError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.TryReadyError.html\" title=\"struct crossbeam_channel::TryReadyError\">TryReadyError</a>","synthetic":true,"types":["crossbeam_channel::err::TryReadyError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.ReadyTimeoutError.html\" title=\"struct crossbeam_channel::ReadyTimeoutError\">ReadyTimeoutError</a>","synthetic":true,"types":["crossbeam_channel::err::ReadyTimeoutError"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.Select.html\" title=\"struct crossbeam_channel::Select\">Select</a>&lt;'a&gt;","synthetic":true,"types":["crossbeam_channel::select::Select"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.SelectedOperation.html\" title=\"struct crossbeam_channel::SelectedOperation\">SelectedOperation</a>&lt;'a&gt;","synthetic":true,"types":["crossbeam_channel::select::SelectedOperation"]}];
implementors["crossbeam_deque"] = [{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_deque/struct.Worker.html\" title=\"struct crossbeam_deque::Worker\">Worker</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_deque::deque::Worker"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_deque/struct.Stealer.html\" title=\"struct crossbeam_deque::Stealer\">Stealer</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_deque::deque::Stealer"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_deque/struct.Injector.html\" title=\"struct crossbeam_deque::Injector\">Injector</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_deque::deque::Injector"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"crossbeam_deque/enum.Steal.html\" title=\"enum crossbeam_deque::Steal\">Steal</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["crossbeam_deque::deque::Steal"]}];
implementors["crossbeam_epoch"] = [{"text":"impl&lt;'g, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, P&gt; Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.CompareExchangeError.html\" title=\"struct crossbeam_epoch::CompareExchangeError\">CompareExchangeError</a>&lt;'g, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["crossbeam_epoch::atomic::CompareExchangeError"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.Atomic.html\" title=\"struct crossbeam_epoch::Atomic\">Atomic</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_epoch::atomic::Atomic"]},{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.Owned.html\" title=\"struct crossbeam_epoch::Owned\">Owned</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_epoch::atomic::Owned"]},{"text":"impl&lt;'g, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.Shared.html\" title=\"struct crossbeam_epoch::Shared\">Shared</a>&lt;'g, T&gt;","synthetic":true,"types":["crossbeam_epoch::atomic::Shared"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.Collector.html\" title=\"struct crossbeam_epoch::Collector\">Collector</a>","synthetic":true,"types":["crossbeam_epoch::collector::Collector"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.LocalHandle.html\" title=\"struct crossbeam_epoch::LocalHandle\">LocalHandle</a>","synthetic":true,"types":["crossbeam_epoch::collector::LocalHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.Guard.html\" title=\"struct crossbeam_epoch::Guard\">Guard</a>","synthetic":true,"types":["crossbeam_epoch::guard::Guard"]}];
implementors["crossbeam_utils"] = [{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_utils/atomic/struct.AtomicCell.html\" title=\"struct crossbeam_utils::atomic::AtomicCell\">AtomicCell</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_utils::atomic::atomic_cell::AtomicCell"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/struct.CachePadded.html\" title=\"struct crossbeam_utils::CachePadded\">CachePadded</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["crossbeam_utils::cache_padded::CachePadded"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"crossbeam_utils/struct.Backoff.html\" title=\"struct crossbeam_utils::Backoff\">Backoff</a>","synthetic":true,"types":["crossbeam_utils::backoff::Backoff"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.Parker.html\" title=\"struct crossbeam_utils::sync::Parker\">Parker</a>","synthetic":true,"types":["crossbeam_utils::sync::parker::Parker"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.Unparker.html\" title=\"struct crossbeam_utils::sync::Unparker\">Unparker</a>","synthetic":true,"types":["crossbeam_utils::sync::parker::Unparker"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.ShardedLock.html\" title=\"struct crossbeam_utils::sync::ShardedLock\">ShardedLock</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_utils::sync::sharded_lock::ShardedLock"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.ShardedLockReadGuard.html\" title=\"struct crossbeam_utils::sync::ShardedLockReadGuard\">ShardedLockReadGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["crossbeam_utils::sync::sharded_lock::ShardedLockReadGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.ShardedLockWriteGuard.html\" title=\"struct crossbeam_utils::sync::ShardedLockWriteGuard\">ShardedLockWriteGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["crossbeam_utils::sync::sharded_lock::ShardedLockWriteGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.WaitGroup.html\" title=\"struct crossbeam_utils::sync::WaitGroup\">WaitGroup</a>","synthetic":true,"types":["crossbeam_utils::sync::wait_group::WaitGroup"]},{"text":"impl&lt;'env&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/thread/struct.Scope.html\" title=\"struct crossbeam_utils::thread::Scope\">Scope</a>&lt;'env&gt;","synthetic":true,"types":["crossbeam_utils::thread::Scope"]},{"text":"impl&lt;'scope, 'env&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/thread/struct.ScopedThreadBuilder.html\" title=\"struct crossbeam_utils::thread::ScopedThreadBuilder\">ScopedThreadBuilder</a>&lt;'scope, 'env&gt;","synthetic":true,"types":["crossbeam_utils::thread::ScopedThreadBuilder"]},{"text":"impl&lt;'scope, T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/thread/struct.ScopedJoinHandle.html\" title=\"struct crossbeam_utils::thread::ScopedJoinHandle\">ScopedJoinHandle</a>&lt;'scope, T&gt;","synthetic":true,"types":["crossbeam_utils::thread::ScopedJoinHandle"]}];
implementors["crossterm"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/cursor/struct.MoveTo.html\" title=\"struct crossterm::cursor::MoveTo\">MoveTo</a>","synthetic":true,"types":["crossterm::cursor::MoveTo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/cursor/struct.MoveToNextLine.html\" title=\"struct crossterm::cursor::MoveToNextLine\">MoveToNextLine</a>","synthetic":true,"types":["crossterm::cursor::MoveToNextLine"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/cursor/struct.MoveToPreviousLine.html\" title=\"struct crossterm::cursor::MoveToPreviousLine\">MoveToPreviousLine</a>","synthetic":true,"types":["crossterm::cursor::MoveToPreviousLine"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/cursor/struct.MoveToColumn.html\" title=\"struct crossterm::cursor::MoveToColumn\">MoveToColumn</a>","synthetic":true,"types":["crossterm::cursor::MoveToColumn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/cursor/struct.MoveToRow.html\" title=\"struct crossterm::cursor::MoveToRow\">MoveToRow</a>","synthetic":true,"types":["crossterm::cursor::MoveToRow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/cursor/struct.MoveUp.html\" title=\"struct crossterm::cursor::MoveUp\">MoveUp</a>","synthetic":true,"types":["crossterm::cursor::MoveUp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/cursor/struct.MoveRight.html\" title=\"struct crossterm::cursor::MoveRight\">MoveRight</a>","synthetic":true,"types":["crossterm::cursor::MoveRight"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/cursor/struct.MoveDown.html\" title=\"struct crossterm::cursor::MoveDown\">MoveDown</a>","synthetic":true,"types":["crossterm::cursor::MoveDown"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/cursor/struct.MoveLeft.html\" title=\"struct crossterm::cursor::MoveLeft\">MoveLeft</a>","synthetic":true,"types":["crossterm::cursor::MoveLeft"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/cursor/struct.SavePosition.html\" title=\"struct crossterm::cursor::SavePosition\">SavePosition</a>","synthetic":true,"types":["crossterm::cursor::SavePosition"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/cursor/struct.RestorePosition.html\" title=\"struct crossterm::cursor::RestorePosition\">RestorePosition</a>","synthetic":true,"types":["crossterm::cursor::RestorePosition"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/cursor/struct.Hide.html\" title=\"struct crossterm::cursor::Hide\">Hide</a>","synthetic":true,"types":["crossterm::cursor::Hide"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/cursor/struct.Show.html\" title=\"struct crossterm::cursor::Show\">Show</a>","synthetic":true,"types":["crossterm::cursor::Show"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/cursor/struct.EnableBlinking.html\" title=\"struct crossterm::cursor::EnableBlinking\">EnableBlinking</a>","synthetic":true,"types":["crossterm::cursor::EnableBlinking"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/cursor/struct.DisableBlinking.html\" title=\"struct crossterm::cursor::DisableBlinking\">DisableBlinking</a>","synthetic":true,"types":["crossterm::cursor::DisableBlinking"]},{"text":"impl Freeze for <a class=\"enum\" href=\"crossterm/cursor/enum.CursorShape.html\" title=\"enum crossterm::cursor::CursorShape\">CursorShape</a>","synthetic":true,"types":["crossterm::cursor::CursorShape"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/cursor/struct.SetCursorShape.html\" title=\"struct crossterm::cursor::SetCursorShape\">SetCursorShape</a>","synthetic":true,"types":["crossterm::cursor::SetCursorShape"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/event/struct.EnableMouseCapture.html\" title=\"struct crossterm::event::EnableMouseCapture\">EnableMouseCapture</a>","synthetic":true,"types":["crossterm::event::EnableMouseCapture"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/event/struct.DisableMouseCapture.html\" title=\"struct crossterm::event::DisableMouseCapture\">DisableMouseCapture</a>","synthetic":true,"types":["crossterm::event::DisableMouseCapture"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/event/struct.KeyboardEnhancementFlags.html\" title=\"struct crossterm::event::KeyboardEnhancementFlags\">KeyboardEnhancementFlags</a>","synthetic":true,"types":["crossterm::event::KeyboardEnhancementFlags"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/event/struct.PushKeyboardEnhancementFlags.html\" title=\"struct crossterm::event::PushKeyboardEnhancementFlags\">PushKeyboardEnhancementFlags</a>","synthetic":true,"types":["crossterm::event::PushKeyboardEnhancementFlags"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/event/struct.PopKeyboardEnhancementFlags.html\" title=\"struct crossterm::event::PopKeyboardEnhancementFlags\">PopKeyboardEnhancementFlags</a>","synthetic":true,"types":["crossterm::event::PopKeyboardEnhancementFlags"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/event/struct.EnableFocusChange.html\" title=\"struct crossterm::event::EnableFocusChange\">EnableFocusChange</a>","synthetic":true,"types":["crossterm::event::EnableFocusChange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/event/struct.DisableFocusChange.html\" title=\"struct crossterm::event::DisableFocusChange\">DisableFocusChange</a>","synthetic":true,"types":["crossterm::event::DisableFocusChange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/event/struct.EnableBracketedPaste.html\" title=\"struct crossterm::event::EnableBracketedPaste\">EnableBracketedPaste</a>","synthetic":true,"types":["crossterm::event::EnableBracketedPaste"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/event/struct.DisableBracketedPaste.html\" title=\"struct crossterm::event::DisableBracketedPaste\">DisableBracketedPaste</a>","synthetic":true,"types":["crossterm::event::DisableBracketedPaste"]},{"text":"impl Freeze for <a class=\"enum\" href=\"crossterm/event/enum.Event.html\" title=\"enum crossterm::event::Event\">Event</a>","synthetic":true,"types":["crossterm::event::Event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/event/struct.MouseEvent.html\" title=\"struct crossterm::event::MouseEvent\">MouseEvent</a>","synthetic":true,"types":["crossterm::event::MouseEvent"]},{"text":"impl Freeze for <a class=\"enum\" href=\"crossterm/event/enum.MouseEventKind.html\" title=\"enum crossterm::event::MouseEventKind\">MouseEventKind</a>","synthetic":true,"types":["crossterm::event::MouseEventKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"crossterm/event/enum.MouseButton.html\" title=\"enum crossterm::event::MouseButton\">MouseButton</a>","synthetic":true,"types":["crossterm::event::MouseButton"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/event/struct.KeyModifiers.html\" title=\"struct crossterm::event::KeyModifiers\">KeyModifiers</a>","synthetic":true,"types":["crossterm::event::KeyModifiers"]},{"text":"impl Freeze for <a class=\"enum\" href=\"crossterm/event/enum.KeyEventKind.html\" title=\"enum crossterm::event::KeyEventKind\">KeyEventKind</a>","synthetic":true,"types":["crossterm::event::KeyEventKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/event/struct.KeyEventState.html\" title=\"struct crossterm::event::KeyEventState\">KeyEventState</a>","synthetic":true,"types":["crossterm::event::KeyEventState"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/event/struct.KeyEvent.html\" title=\"struct crossterm::event::KeyEvent\">KeyEvent</a>","synthetic":true,"types":["crossterm::event::KeyEvent"]},{"text":"impl Freeze for <a class=\"enum\" href=\"crossterm/event/enum.MediaKeyCode.html\" title=\"enum crossterm::event::MediaKeyCode\">MediaKeyCode</a>","synthetic":true,"types":["crossterm::event::MediaKeyCode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"crossterm/event/enum.ModifierKeyCode.html\" title=\"enum crossterm::event::ModifierKeyCode\">ModifierKeyCode</a>","synthetic":true,"types":["crossterm::event::ModifierKeyCode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"crossterm/event/enum.KeyCode.html\" title=\"enum crossterm::event::KeyCode\">KeyCode</a>","synthetic":true,"types":["crossterm::event::KeyCode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/style/struct.Attributes.html\" title=\"struct crossterm::style::Attributes\">Attributes</a>","synthetic":true,"types":["crossterm::style::attributes::Attributes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/style/struct.ContentStyle.html\" title=\"struct crossterm::style::ContentStyle\">ContentStyle</a>","synthetic":true,"types":["crossterm::style::content_style::ContentStyle"]},{"text":"impl&lt;D&gt; Freeze for <a class=\"struct\" href=\"crossterm/style/struct.StyledContent.html\" title=\"struct crossterm::style::StyledContent\">StyledContent</a>&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["crossterm::style::styled_content::StyledContent"]},{"text":"impl Freeze for <a class=\"enum\" href=\"crossterm/style/enum.Attribute.html\" title=\"enum crossterm::style::Attribute\">Attribute</a>","synthetic":true,"types":["crossterm::style::types::attribute::Attribute"]},{"text":"impl Freeze for <a class=\"enum\" href=\"crossterm/style/enum.Color.html\" title=\"enum crossterm::style::Color\">Color</a>","synthetic":true,"types":["crossterm::style::types::color::Color"]},{"text":"impl Freeze for <a class=\"enum\" href=\"crossterm/style/enum.Colored.html\" title=\"enum crossterm::style::Colored\">Colored</a>","synthetic":true,"types":["crossterm::style::types::colored::Colored"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/style/struct.Colors.html\" title=\"struct crossterm::style::Colors\">Colors</a>","synthetic":true,"types":["crossterm::style::types::colors::Colors"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/style/struct.SetForegroundColor.html\" title=\"struct crossterm::style::SetForegroundColor\">SetForegroundColor</a>","synthetic":true,"types":["crossterm::style::SetForegroundColor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/style/struct.SetBackgroundColor.html\" title=\"struct crossterm::style::SetBackgroundColor\">SetBackgroundColor</a>","synthetic":true,"types":["crossterm::style::SetBackgroundColor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/style/struct.SetUnderlineColor.html\" title=\"struct crossterm::style::SetUnderlineColor\">SetUnderlineColor</a>","synthetic":true,"types":["crossterm::style::SetUnderlineColor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/style/struct.SetColors.html\" title=\"struct crossterm::style::SetColors\">SetColors</a>","synthetic":true,"types":["crossterm::style::SetColors"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/style/struct.SetAttribute.html\" title=\"struct crossterm::style::SetAttribute\">SetAttribute</a>","synthetic":true,"types":["crossterm::style::SetAttribute"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/style/struct.SetAttributes.html\" title=\"struct crossterm::style::SetAttributes\">SetAttributes</a>","synthetic":true,"types":["crossterm::style::SetAttributes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/style/struct.SetStyle.html\" title=\"struct crossterm::style::SetStyle\">SetStyle</a>","synthetic":true,"types":["crossterm::style::SetStyle"]},{"text":"impl&lt;D&gt; Freeze for <a class=\"struct\" href=\"crossterm/style/struct.PrintStyledContent.html\" title=\"struct crossterm::style::PrintStyledContent\">PrintStyledContent</a>&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["crossterm::style::PrintStyledContent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/style/struct.ResetColor.html\" title=\"struct crossterm::style::ResetColor\">ResetColor</a>","synthetic":true,"types":["crossterm::style::ResetColor"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossterm/style/struct.Print.html\" title=\"struct crossterm::style::Print\">Print</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["crossterm::style::Print"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/terminal/struct.DisableLineWrap.html\" title=\"struct crossterm::terminal::DisableLineWrap\">DisableLineWrap</a>","synthetic":true,"types":["crossterm::terminal::DisableLineWrap"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/terminal/struct.EnableLineWrap.html\" title=\"struct crossterm::terminal::EnableLineWrap\">EnableLineWrap</a>","synthetic":true,"types":["crossterm::terminal::EnableLineWrap"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/terminal/struct.EnterAlternateScreen.html\" title=\"struct crossterm::terminal::EnterAlternateScreen\">EnterAlternateScreen</a>","synthetic":true,"types":["crossterm::terminal::EnterAlternateScreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/terminal/struct.LeaveAlternateScreen.html\" title=\"struct crossterm::terminal::LeaveAlternateScreen\">LeaveAlternateScreen</a>","synthetic":true,"types":["crossterm::terminal::LeaveAlternateScreen"]},{"text":"impl Freeze for <a class=\"enum\" href=\"crossterm/terminal/enum.ClearType.html\" title=\"enum crossterm::terminal::ClearType\">ClearType</a>","synthetic":true,"types":["crossterm::terminal::ClearType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/terminal/struct.ScrollUp.html\" title=\"struct crossterm::terminal::ScrollUp\">ScrollUp</a>","synthetic":true,"types":["crossterm::terminal::ScrollUp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/terminal/struct.ScrollDown.html\" title=\"struct crossterm::terminal::ScrollDown\">ScrollDown</a>","synthetic":true,"types":["crossterm::terminal::ScrollDown"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/terminal/struct.Clear.html\" title=\"struct crossterm::terminal::Clear\">Clear</a>","synthetic":true,"types":["crossterm::terminal::Clear"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossterm/terminal/struct.SetSize.html\" title=\"struct crossterm::terminal::SetSize\">SetSize</a>","synthetic":true,"types":["crossterm::terminal::SetSize"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossterm/terminal/struct.SetTitle.html\" title=\"struct crossterm::terminal::SetTitle\">SetTitle</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["crossterm::terminal::SetTitle"]}];
implementors["difft"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"difft/constants/enum.Side.html\" title=\"enum difft::constants::Side\">Side</a>","synthetic":true,"types":["difft::constants::Side"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"difft/diff/changes/enum.ChangeKind.html\" title=\"enum difft::diff::changes::ChangeKind\">ChangeKind</a>&lt;'a&gt;","synthetic":true,"types":["difft::diff::changes::ChangeKind"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"difft/diff/changes/struct.ChangeMap.html\" title=\"struct difft::diff::changes::ChangeMap\">ChangeMap</a>&lt;'a&gt;","synthetic":true,"types":["difft::diff::changes::ChangeMap"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"difft/diff/dijkstra/struct.ExceededGraphLimit.html\" title=\"struct difft::diff::dijkstra::ExceededGraphLimit\">ExceededGraphLimit</a>","synthetic":true,"types":["difft::diff::dijkstra::ExceededGraphLimit"]},{"text":"impl&lt;'s, 'b&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"difft/diff/graph/struct.Vertex.html\" title=\"struct difft::diff::graph::Vertex\">Vertex</a>&lt;'s, 'b&gt;","synthetic":true,"types":["difft::diff::graph::Vertex"]},{"text":"impl&lt;'s&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"difft/diff/graph/enum.EnteredDelimiter.html\" title=\"enum difft::diff::graph::EnteredDelimiter\">EnteredDelimiter</a>&lt;'s&gt;","synthetic":true,"types":["difft::diff::graph::EnteredDelimiter"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"difft/diff/graph/enum.Edge.html\" title=\"enum difft::diff::graph::Edge\">Edge</a>","synthetic":true,"types":["difft::diff::graph::Edge"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"difft/diff/myers_diff/enum.DiffResult.html\" title=\"enum difft::diff::myers_diff::DiffResult\">DiffResult</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a>,&nbsp;</span>","synthetic":true,"types":["difft::diff::myers_diff::DiffResult"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"difft/diff/stack/struct.Node.html\" title=\"struct difft::diff::stack::Node\">Node</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a>,&nbsp;</span>","synthetic":true,"types":["difft::diff::stack::Node"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"difft/diff/stack/struct.Stack.html\" title=\"struct difft::diff::stack::Stack\">Stack</a>&lt;T&gt;","synthetic":true,"types":["difft::diff::stack::Stack"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"difft/diff/unchanged/enum.ChangeState.html\" title=\"enum difft::diff::unchanged::ChangeState\">ChangeState</a>","synthetic":true,"types":["difft::diff::unchanged::ChangeState"]},{"text":"impl&lt;X, Y&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"difft/diff/unchanged/struct.EqOnFirstItem.html\" title=\"struct difft::diff::unchanged::EqOnFirstItem\">EqOnFirstItem</a>&lt;X, Y&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;Y: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a>,&nbsp;</span>","synthetic":true,"types":["difft::diff::unchanged::EqOnFirstItem"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"difft/display/hunks/struct.Hunk.html\" title=\"struct difft::display::hunks::Hunk\">Hunk</a>","synthetic":true,"types":["difft::display::hunks::Hunk"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"difft/display/side_by_side/struct.SourceDimensions.html\" title=\"struct difft::display::side_by_side::SourceDimensions\">SourceDimensions</a>","synthetic":true,"types":["difft::display::side_by_side::SourceDimensions"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"difft/display/style/enum.BackgroundColor.html\" title=\"enum difft::display::style::BackgroundColor\">BackgroundColor</a>","synthetic":true,"types":["difft::display::style::BackgroundColor"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"difft/files/enum.ProbableFileKind.html\" title=\"enum difft::files::ProbableFileKind\">ProbableFileKind</a>","synthetic":true,"types":["difft::files::ProbableFileKind"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"difft/line_parser/enum.TextChangeKind.html\" title=\"enum difft::line_parser::TextChangeKind\">TextChangeKind</a>","synthetic":true,"types":["difft::line_parser::TextChangeKind"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"difft/lines/struct.LineNumber.html\" title=\"struct difft::lines::LineNumber\">LineNumber</a>","synthetic":true,"types":["difft::lines::LineNumber"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"difft/lines/struct.LinePosition.html\" title=\"struct difft::lines::LinePosition\">LinePosition</a>","synthetic":true,"types":["difft::lines::LinePosition"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"difft/lines/struct.NewlinePositions.html\" title=\"struct difft::lines::NewlinePositions\">NewlinePositions</a>","synthetic":true,"types":["difft::lines::NewlinePositions"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"difft/options/enum.ColorOutput.html\" title=\"enum difft::options::ColorOutput\">ColorOutput</a>","synthetic":true,"types":["difft::options::ColorOutput"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"difft/options/struct.DisplayOptions.html\" title=\"struct difft::options::DisplayOptions\">DisplayOptions</a>","synthetic":true,"types":["difft::options::DisplayOptions"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"difft/options/struct.DiffOptions.html\" title=\"struct difft::options::DiffOptions\">DiffOptions</a>","synthetic":true,"types":["difft::options::DiffOptions"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"difft/options/enum.DisplayMode.html\" title=\"enum difft::options::DisplayMode\">DisplayMode</a>","synthetic":true,"types":["difft::options::DisplayMode"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"difft/options/enum.FileArgument.html\" title=\"enum difft::options::FileArgument\">FileArgument</a>","synthetic":true,"types":["difft::options::FileArgument"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"difft/options/enum.Mode.html\" title=\"enum difft::options::Mode\">Mode</a>","synthetic":true,"types":["difft::options::Mode"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"difft/parse/guess_language/enum.Language.html\" title=\"enum difft::parse::guess_language::Language\">Language</a>","synthetic":true,"types":["difft::parse::guess_language::Language"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"difft/parse/guess_language/struct.LanguageIter.html\" title=\"struct difft::parse::guess_language::LanguageIter\">LanguageIter</a>","synthetic":true,"types":["difft::parse::guess_language::LanguageIter"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"difft/parse/guess_language/enum.LanguageOverride.html\" title=\"enum difft::parse::guess_language::LanguageOverride\">LanguageOverride</a>","synthetic":true,"types":["difft::parse::guess_language::LanguageOverride"]},{"text":"impl&lt;'a&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"difft/parse/syntax/struct.SyntaxInfo.html\" title=\"struct difft::parse::syntax::SyntaxInfo\">SyntaxInfo</a>&lt;'a&gt;","synthetic":true,"types":["difft::parse::syntax::SyntaxInfo"]},{"text":"impl&lt;'a&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"difft/parse/syntax/enum.Syntax.html\" title=\"enum difft::parse::syntax::Syntax\">Syntax</a>&lt;'a&gt;","synthetic":true,"types":["difft::parse::syntax::Syntax"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"difft/parse/syntax/enum.AtomKind.html\" title=\"enum difft::parse::syntax::AtomKind\">AtomKind</a>","synthetic":true,"types":["difft::parse::syntax::AtomKind"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"difft/parse/syntax/enum.TokenKind.html\" title=\"enum difft::parse::syntax::TokenKind\">TokenKind</a>","synthetic":true,"types":["difft::parse::syntax::TokenKind"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"difft/parse/syntax/enum.MatchKind.html\" title=\"enum difft::parse::syntax::MatchKind\">MatchKind</a>","synthetic":true,"types":["difft::parse::syntax::MatchKind"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"difft/parse/syntax/struct.MatchedPos.html\" title=\"struct difft::parse::syntax::MatchedPos\">MatchedPos</a>","synthetic":true,"types":["difft::parse::syntax::MatchedPos"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"difft/parse/tree_sitter_parser/struct.TreeSitterSubLanguage.html\" title=\"struct difft::parse::tree_sitter_parser::TreeSitterSubLanguage\">TreeSitterSubLanguage</a>","synthetic":true,"types":["difft::parse::tree_sitter_parser::TreeSitterSubLanguage"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"difft/parse/tree_sitter_parser/struct.TreeSitterConfig.html\" title=\"struct difft::parse::tree_sitter_parser::TreeSitterConfig\">TreeSitterConfig</a>","synthetic":true,"types":["difft::parse::tree_sitter_parser::TreeSitterConfig"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"difft/parse/tree_sitter_parser/struct.ExceededByteLimit.html\" title=\"struct difft::parse::tree_sitter_parser::ExceededByteLimit\">ExceededByteLimit</a>","synthetic":true,"types":["difft::parse::tree_sitter_parser::ExceededByteLimit"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"difft/parse/tree_sitter_parser/struct.ExceededParseErrorLimit.html\" title=\"struct difft::parse::tree_sitter_parser::ExceededParseErrorLimit\">ExceededParseErrorLimit</a>","synthetic":true,"types":["difft::parse::tree_sitter_parser::ExceededParseErrorLimit"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"difft/parse/tree_sitter_parser/struct.HighlightedNodeIds.html\" title=\"struct difft::parse::tree_sitter_parser::HighlightedNodeIds\">HighlightedNodeIds</a>","synthetic":true,"types":["difft::parse::tree_sitter_parser::HighlightedNodeIds"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"difft/positions/struct.SingleLineSpan.html\" title=\"struct difft::positions::SingleLineSpan\">SingleLineSpan</a>","synthetic":true,"types":["difft::positions::SingleLineSpan"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"difft/summary/enum.FileContent.html\" title=\"enum difft::summary::FileContent\">FileContent</a>","synthetic":true,"types":["difft::summary::FileContent"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"difft/summary/enum.FileFormat.html\" title=\"enum difft::summary::FileFormat\">FileFormat</a>","synthetic":true,"types":["difft::summary::FileFormat"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"difft/summary/struct.DiffResult.html\" title=\"struct difft::summary::DiffResult\">DiffResult</a>","synthetic":true,"types":["difft::summary::DiffResult"]}];
implementors["either"] = [{"text":"impl&lt;L, R&gt; Freeze for <a class=\"enum\" href=\"either/enum.Either.html\" title=\"enum either::Either\">Either</a>&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["either::Either"]}];
implementors["env_logger"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"env_logger/filter/struct.Filter.html\" title=\"struct env_logger::filter::Filter\">Filter</a>","synthetic":true,"types":["env_logger::filter::Filter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"env_logger/filter/struct.Builder.html\" title=\"struct env_logger::filter::Builder\">Builder</a>","synthetic":true,"types":["env_logger::filter::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"env_logger/fmt/struct.Timestamp.html\" title=\"struct env_logger::fmt::Timestamp\">Timestamp</a>","synthetic":true,"types":["env_logger::fmt::humantime::imp::Timestamp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"env_logger/fmt/struct.Style.html\" title=\"struct env_logger::fmt::Style\">Style</a>","synthetic":true,"types":["env_logger::fmt::writer::termcolor::imp::Style"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"env_logger/fmt/struct.StyledValue.html\" title=\"struct env_logger::fmt::StyledValue\">StyledValue</a>&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["env_logger::fmt::writer::termcolor::imp::StyledValue"]},{"text":"impl Freeze for <a class=\"enum\" href=\"env_logger/fmt/enum.Color.html\" title=\"enum env_logger::fmt::Color\">Color</a>","synthetic":true,"types":["env_logger::fmt::writer::termcolor::imp::Color"]},{"text":"impl Freeze for <a class=\"enum\" href=\"env_logger/fmt/enum.Target.html\" title=\"enum env_logger::fmt::Target\">Target</a>","synthetic":true,"types":["env_logger::fmt::writer::Target"]},{"text":"impl Freeze for <a class=\"enum\" href=\"env_logger/fmt/enum.WriteStyle.html\" title=\"enum env_logger::fmt::WriteStyle\">WriteStyle</a>","synthetic":true,"types":["env_logger::fmt::writer::WriteStyle"]},{"text":"impl Freeze for <a class=\"enum\" href=\"env_logger/fmt/enum.TimestampPrecision.html\" title=\"enum env_logger::fmt::TimestampPrecision\">TimestampPrecision</a>","synthetic":true,"types":["env_logger::fmt::TimestampPrecision"]},{"text":"impl Freeze for <a class=\"struct\" href=\"env_logger/fmt/struct.Formatter.html\" title=\"struct env_logger::fmt::Formatter\">Formatter</a>","synthetic":true,"types":["env_logger::fmt::Formatter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"env_logger/struct.Env.html\" title=\"struct env_logger::Env\">Env</a>&lt;'a&gt;","synthetic":true,"types":["env_logger::Env"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"env_logger/struct.Logger.html\" title=\"struct env_logger::Logger\">Logger</a>","synthetic":true,"types":["env_logger::Logger"]},{"text":"impl Freeze for <a class=\"struct\" href=\"env_logger/struct.Builder.html\" title=\"struct env_logger::Builder\">Builder</a>","synthetic":true,"types":["env_logger::Builder"]}];
implementors["fixedbitset"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"fixedbitset/struct.FixedBitSet.html\" title=\"struct fixedbitset::FixedBitSet\">FixedBitSet</a>","synthetic":true,"types":["fixedbitset::FixedBitSet"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"fixedbitset/struct.Difference.html\" title=\"struct fixedbitset::Difference\">Difference</a>&lt;'a&gt;","synthetic":true,"types":["fixedbitset::Difference"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"fixedbitset/struct.SymmetricDifference.html\" title=\"struct fixedbitset::SymmetricDifference\">SymmetricDifference</a>&lt;'a&gt;","synthetic":true,"types":["fixedbitset::SymmetricDifference"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"fixedbitset/struct.Intersection.html\" title=\"struct fixedbitset::Intersection\">Intersection</a>&lt;'a&gt;","synthetic":true,"types":["fixedbitset::Intersection"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"fixedbitset/struct.Union.html\" title=\"struct fixedbitset::Union\">Union</a>&lt;'a&gt;","synthetic":true,"types":["fixedbitset::Union"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"fixedbitset/struct.Ones.html\" title=\"struct fixedbitset::Ones\">Ones</a>&lt;'a&gt;","synthetic":true,"types":["fixedbitset::Ones"]}];
implementors["fnv"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"fnv/struct.FnvHasher.html\" title=\"struct fnv::FnvHasher\">FnvHasher</a>","synthetic":true,"types":["fnv::FnvHasher"]}];
implementors["glob"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"glob/struct.Paths.html\" title=\"struct glob::Paths\">Paths</a>","synthetic":true,"types":["glob::Paths"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glob/struct.GlobError.html\" title=\"struct glob::GlobError\">GlobError</a>","synthetic":true,"types":["glob::GlobError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glob/struct.PatternError.html\" title=\"struct glob::PatternError\">PatternError</a>","synthetic":true,"types":["glob::PatternError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glob/struct.Pattern.html\" title=\"struct glob::Pattern\">Pattern</a>","synthetic":true,"types":["glob::Pattern"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glob/struct.MatchOptions.html\" title=\"struct glob::MatchOptions\">MatchOptions</a>","synthetic":true,"types":["glob::MatchOptions"]}];
implementors["hashbrown"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"hashbrown/raw/struct.Bucket.html\" title=\"struct hashbrown::raw::Bucket\">Bucket</a>&lt;T&gt;","synthetic":true,"types":["hashbrown::raw::inner::Bucket"]},{"text":"impl&lt;T, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/raw/struct.RawTable.html\" title=\"struct hashbrown::raw::RawTable\">RawTable</a>&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::raw::inner::RawTable"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"hashbrown/raw/struct.RawIter.html\" title=\"struct hashbrown::raw::RawIter\">RawIter</a>&lt;T&gt;","synthetic":true,"types":["hashbrown::raw::inner::RawIter"]},{"text":"impl&lt;T, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/raw/struct.RawIntoIter.html\" title=\"struct hashbrown::raw::RawIntoIter\">RawIntoIter</a>&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::raw::inner::RawIntoIter"]},{"text":"impl&lt;'a, T, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/raw/struct.RawDrain.html\" title=\"struct hashbrown::raw::RawDrain\">RawDrain</a>&lt;'a, T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::raw::inner::RawDrain"]},{"text":"impl&lt;'a, T, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/raw/struct.RawIterHash.html\" title=\"struct hashbrown::raw::RawIterHash\">RawIterHash</a>&lt;'a, T, A&gt;","synthetic":true,"types":["hashbrown::raw::inner::RawIterHash"]},{"text":"impl Freeze for <a class=\"enum\" href=\"hashbrown/hash_map/enum.DefaultHashBuilder.html\" title=\"enum hashbrown::hash_map::DefaultHashBuilder\">DefaultHashBuilder</a>","synthetic":true,"types":["hashbrown::map::DefaultHashBuilder"]},{"text":"impl&lt;K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.HashMap.html\" title=\"struct hashbrown::hash_map::HashMap\">HashMap</a>&lt;K, V, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::HashMap"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.Iter.html\" title=\"struct hashbrown::hash_map::Iter\">Iter</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown::map::Iter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.IterMut.html\" title=\"struct hashbrown::hash_map::IterMut\">IterMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown::map::IterMut"]},{"text":"impl&lt;K, V, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.IntoIter.html\" title=\"struct hashbrown::hash_map::IntoIter\">IntoIter</a>&lt;K, V, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::IntoIter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.Keys.html\" title=\"struct hashbrown::hash_map::Keys\">Keys</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown::map::Keys"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.Values.html\" title=\"struct hashbrown::hash_map::Values\">Values</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown::map::Values"]},{"text":"impl&lt;'a, K, V, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.Drain.html\" title=\"struct hashbrown::hash_map::Drain\">Drain</a>&lt;'a, K, V, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::Drain"]},{"text":"impl&lt;'a, K, V, F, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.DrainFilter.html\" title=\"struct hashbrown::hash_map::DrainFilter\">DrainFilter</a>&lt;'a, K, V, F, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::DrainFilter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.ValuesMut.html\" title=\"struct hashbrown::hash_map::ValuesMut\">ValuesMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown::map::ValuesMut"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.RawEntryBuilderMut.html\" title=\"struct hashbrown::hash_map::RawEntryBuilderMut\">RawEntryBuilderMut</a>&lt;'a, K, V, S, A&gt;","synthetic":true,"types":["hashbrown::map::RawEntryBuilderMut"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"enum\" href=\"hashbrown/hash_map/enum.RawEntryMut.html\" title=\"enum hashbrown::hash_map::RawEntryMut\">RawEntryMut</a>&lt;'a, K, V, S, A&gt;","synthetic":true,"types":["hashbrown::map::RawEntryMut"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.RawOccupiedEntryMut.html\" title=\"struct hashbrown::hash_map::RawOccupiedEntryMut\">RawOccupiedEntryMut</a>&lt;'a, K, V, S, A&gt;","synthetic":true,"types":["hashbrown::map::RawOccupiedEntryMut"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.RawVacantEntryMut.html\" title=\"struct hashbrown::hash_map::RawVacantEntryMut\">RawVacantEntryMut</a>&lt;'a, K, V, S, A&gt;","synthetic":true,"types":["hashbrown::map::RawVacantEntryMut"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.RawEntryBuilder.html\" title=\"struct hashbrown::hash_map::RawEntryBuilder\">RawEntryBuilder</a>&lt;'a, K, V, S, A&gt;","synthetic":true,"types":["hashbrown::map::RawEntryBuilder"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"enum\" href=\"hashbrown/hash_map/enum.Entry.html\" title=\"enum hashbrown::hash_map::Entry\">Entry</a>&lt;'a, K, V, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::Entry"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.OccupiedEntry.html\" title=\"struct hashbrown::hash_map::OccupiedEntry\">OccupiedEntry</a>&lt;'a, K, V, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::OccupiedEntry"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.VacantEntry.html\" title=\"struct hashbrown::hash_map::VacantEntry\">VacantEntry</a>&lt;'a, K, V, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::VacantEntry"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.OccupiedError.html\" title=\"struct hashbrown::hash_map::OccupiedError\">OccupiedError</a>&lt;'a, K, V, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::OccupiedError"]},{"text":"impl&lt;T, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.HashSet.html\" title=\"struct hashbrown::hash_set::HashSet\">HashSet</a>&lt;T, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::set::HashSet"]},{"text":"impl&lt;'a, K&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Iter.html\" title=\"struct hashbrown::hash_set::Iter\">Iter</a>&lt;'a, K&gt;","synthetic":true,"types":["hashbrown::set::Iter"]},{"text":"impl&lt;K, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.IntoIter.html\" title=\"struct hashbrown::hash_set::IntoIter\">IntoIter</a>&lt;K, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::set::IntoIter"]},{"text":"impl&lt;'a, K, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Drain.html\" title=\"struct hashbrown::hash_set::Drain\">Drain</a>&lt;'a, K, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::set::Drain"]},{"text":"impl&lt;'a, K, F, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.DrainFilter.html\" title=\"struct hashbrown::hash_set::DrainFilter\">DrainFilter</a>&lt;'a, K, F, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::set::DrainFilter"]},{"text":"impl&lt;'a, T, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Intersection.html\" title=\"struct hashbrown::hash_set::Intersection\">Intersection</a>&lt;'a, T, S, A&gt;","synthetic":true,"types":["hashbrown::set::Intersection"]},{"text":"impl&lt;'a, T, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Difference.html\" title=\"struct hashbrown::hash_set::Difference\">Difference</a>&lt;'a, T, S, A&gt;","synthetic":true,"types":["hashbrown::set::Difference"]},{"text":"impl&lt;'a, T, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.SymmetricDifference.html\" title=\"struct hashbrown::hash_set::SymmetricDifference\">SymmetricDifference</a>&lt;'a, T, S, A&gt;","synthetic":true,"types":["hashbrown::set::SymmetricDifference"]},{"text":"impl&lt;'a, T, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Union.html\" title=\"struct hashbrown::hash_set::Union\">Union</a>&lt;'a, T, S, A&gt;","synthetic":true,"types":["hashbrown::set::Union"]},{"text":"impl Freeze for <a class=\"enum\" href=\"hashbrown/enum.TryReserveError.html\" title=\"enum hashbrown::TryReserveError\">TryReserveError</a>","synthetic":true,"types":["hashbrown::TryReserveError"]}];
implementors["heck"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"heck/struct.AsKebabCase.html\" title=\"struct heck::AsKebabCase\">AsKebabCase</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["heck::kebab::AsKebabCase"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"heck/struct.AsLowerCamelCase.html\" title=\"struct heck::AsLowerCamelCase\">AsLowerCamelCase</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["heck::lower_camel::AsLowerCamelCase"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"heck/struct.AsShoutyKebabCase.html\" title=\"struct heck::AsShoutyKebabCase\">AsShoutyKebabCase</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["heck::shouty_kebab::AsShoutyKebabCase"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"heck/struct.AsShoutySnakeCase.html\" title=\"struct heck::AsShoutySnakeCase\">AsShoutySnakeCase</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["heck::shouty_snake::AsShoutySnakeCase"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"heck/struct.AsSnakeCase.html\" title=\"struct heck::AsSnakeCase\">AsSnakeCase</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["heck::snake::AsSnakeCase"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"heck/struct.AsTitleCase.html\" title=\"struct heck::AsTitleCase\">AsTitleCase</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["heck::title::AsTitleCase"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"heck/struct.AsTrainCase.html\" title=\"struct heck::AsTrainCase\">AsTrainCase</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["heck::train::AsTrainCase"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"heck/struct.AsUpperCamelCase.html\" title=\"struct heck::AsUpperCamelCase\">AsUpperCamelCase</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["heck::upper_camel::AsUpperCamelCase"]}];
implementors["humantime"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"humantime/enum.DurationError.html\" title=\"enum humantime::DurationError\">Error</a>","synthetic":true,"types":["humantime::duration::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"humantime/struct.FormattedDuration.html\" title=\"struct humantime::FormattedDuration\">FormattedDuration</a>","synthetic":true,"types":["humantime::duration::FormattedDuration"]},{"text":"impl Freeze for <a class=\"struct\" href=\"humantime/struct.Duration.html\" title=\"struct humantime::Duration\">Duration</a>","synthetic":true,"types":["humantime::wrapper::Duration"]},{"text":"impl Freeze for <a class=\"struct\" href=\"humantime/struct.Timestamp.html\" title=\"struct humantime::Timestamp\">Timestamp</a>","synthetic":true,"types":["humantime::wrapper::Timestamp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"humantime/enum.TimestampError.html\" title=\"enum humantime::TimestampError\">Error</a>","synthetic":true,"types":["humantime::date::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"humantime/struct.Rfc3339Timestamp.html\" title=\"struct humantime::Rfc3339Timestamp\">Rfc3339Timestamp</a>","synthetic":true,"types":["humantime::date::Rfc3339Timestamp"]}];
implementors["indexmap"] = [{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.OccupiedEntry.html\" title=\"struct indexmap::map::OccupiedEntry\">OccupiedEntry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["indexmap::map::core::raw::OccupiedEntry"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"enum\" href=\"indexmap/map/enum.Entry.html\" title=\"enum indexmap::map::Entry\">Entry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["indexmap::map::core::Entry"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.VacantEntry.html\" title=\"struct indexmap::map::VacantEntry\">VacantEntry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["indexmap::map::core::VacantEntry"]},{"text":"impl&lt;K, V, S&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.IndexMap.html\" title=\"struct indexmap::map::IndexMap\">IndexMap</a>&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["indexmap::map::IndexMap"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.Keys.html\" title=\"struct indexmap::map::Keys\">Keys</a>&lt;'a, K, V&gt;","synthetic":true,"types":["indexmap::map::Keys"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.Values.html\" title=\"struct indexmap::map::Values\">Values</a>&lt;'a, K, V&gt;","synthetic":true,"types":["indexmap::map::Values"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.ValuesMut.html\" title=\"struct indexmap::map::ValuesMut\">ValuesMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["indexmap::map::ValuesMut"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.Iter.html\" title=\"struct indexmap::map::Iter\">Iter</a>&lt;'a, K, V&gt;","synthetic":true,"types":["indexmap::map::Iter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.IterMut.html\" title=\"struct indexmap::map::IterMut\">IterMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["indexmap::map::IterMut"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.IntoIter.html\" title=\"struct indexmap::map::IntoIter\">IntoIter</a>&lt;K, V&gt;","synthetic":true,"types":["indexmap::map::IntoIter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.Drain.html\" title=\"struct indexmap::map::Drain\">Drain</a>&lt;'a, K, V&gt;","synthetic":true,"types":["indexmap::map::Drain"]},{"text":"impl&lt;T, S&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["indexmap::set::IndexSet"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.IntoIter.html\" title=\"struct indexmap::set::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["indexmap::set::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.Iter.html\" title=\"struct indexmap::set::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["indexmap::set::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.Drain.html\" title=\"struct indexmap::set::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":true,"types":["indexmap::set::Drain"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.Difference.html\" title=\"struct indexmap::set::Difference\">Difference</a>&lt;'a, T, S&gt;","synthetic":true,"types":["indexmap::set::Difference"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.Intersection.html\" title=\"struct indexmap::set::Intersection\">Intersection</a>&lt;'a, T, S&gt;","synthetic":true,"types":["indexmap::set::Intersection"]},{"text":"impl&lt;'a, T, S1, S2&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.SymmetricDifference.html\" title=\"struct indexmap::set::SymmetricDifference\">SymmetricDifference</a>&lt;'a, T, S1, S2&gt;","synthetic":true,"types":["indexmap::set::SymmetricDifference"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.Union.html\" title=\"struct indexmap::set::Union\">Union</a>&lt;'a, T, S&gt;","synthetic":true,"types":["indexmap::set::Union"]}];
implementors["itertools"] = [{"text":"impl&lt;I, J&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Interleave.html\" title=\"struct itertools::structs::Interleave\">Interleave</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::Interleave"]},{"text":"impl&lt;I, J&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.InterleaveShortest.html\" title=\"struct itertools::structs::InterleaveShortest\">InterleaveShortest</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::InterleaveShortest"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.FilterMapOk.html\" title=\"struct itertools::structs::FilterMapOk\">FilterMapOk</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::FilterMapOk"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.FilterOk.html\" title=\"struct itertools::structs::FilterOk\">FilterOk</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::FilterOk"]},{"text":"impl&lt;I, J&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Product.html\" title=\"struct itertools::structs::Product\">Product</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/1.57.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::Product"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.PutBack.html\" title=\"struct itertools::structs::PutBack\">PutBack</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/1.57.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::PutBack"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Batching.html\" title=\"struct itertools::structs::Batching\">Batching</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::Batching"]},{"text":"impl&lt;I, J, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.MergeBy.html\" title=\"struct itertools::structs::MergeBy\">MergeBy</a>&lt;I, J, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/1.57.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::MergeBy"]},{"text":"impl&lt;'a, I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.TakeWhileRef.html\" title=\"struct itertools::structs::TakeWhileRef\">TakeWhileRef</a>&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::TakeWhileRef"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.WhileSome.html\" title=\"struct itertools::structs::WhileSome\">WhileSome</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::WhileSome"]},{"text":"impl&lt;I, T&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.TupleCombinations.html\" title=\"struct itertools::structs::TupleCombinations\">TupleCombinations</a>&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as HasCombination&lt;I&gt;&gt;::Combination: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::TupleCombinations"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Positions.html\" title=\"struct itertools::structs::Positions\">Positions</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::Positions"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Update.html\" title=\"struct itertools::structs::Update\">Update</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::Update"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Step.html\" title=\"struct itertools::structs::Step\">Step</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::Step"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.MultiProduct.html\" title=\"struct itertools::structs::MultiProduct\">MultiProduct</a>&lt;I&gt;","synthetic":true,"types":["itertools::adaptors::multi_product::MultiProduct"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Combinations.html\" title=\"struct itertools::structs::Combinations\">Combinations</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::combinations::Combinations"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.CombinationsWithReplacement.html\" title=\"struct itertools::structs::CombinationsWithReplacement\">CombinationsWithReplacement</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::combinations_with_replacement::CombinationsWithReplacement"]},{"text":"impl&lt;I, J&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.ConsTuples.html\" title=\"struct itertools::structs::ConsTuples\">ConsTuples</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::cons_tuples_impl::ConsTuples"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.ExactlyOneError.html\" title=\"struct itertools::structs::ExactlyOneError\">ExactlyOneError</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/1.57.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::exactly_one_err::ExactlyOneError"]},{"text":"impl&lt;'a, I&gt; !Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Format.html\" title=\"struct itertools::structs::Format\">Format</a>&lt;'a, I&gt;","synthetic":true,"types":["itertools::format::Format"]},{"text":"impl&lt;'a, I, F&gt; !Freeze for <a class=\"struct\" href=\"itertools/structs/struct.FormatWith.html\" title=\"struct itertools::structs::FormatWith\">FormatWith</a>&lt;'a, I, F&gt;","synthetic":true,"types":["itertools::format::FormatWith"]},{"text":"impl&lt;I, T, E&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.FlattenOk.html\" title=\"struct itertools::structs::FlattenOk\">FlattenOk</a>&lt;I, T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/1.57.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::flatten_ok::FlattenOk"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.GroupingMap.html\" title=\"struct itertools::structs::GroupingMap\">GroupingMap</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::grouping_map::GroupingMap"]},{"text":"impl&lt;I&gt; !Freeze for <a class=\"struct\" href=\"itertools/structs/struct.IntoChunks.html\" title=\"struct itertools::structs::IntoChunks\">IntoChunks</a>&lt;I&gt;","synthetic":true,"types":["itertools::groupbylazy::IntoChunks"]},{"text":"impl&lt;'a, I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Chunk.html\" title=\"struct itertools::structs::Chunk\">Chunk</a>&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/1.57.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::groupbylazy::Chunk"]},{"text":"impl&lt;'a, I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Chunks.html\" title=\"struct itertools::structs::Chunks\">Chunks</a>&lt;'a, I&gt;","synthetic":true,"types":["itertools::groupbylazy::Chunks"]},{"text":"impl&lt;K, I, F&gt; !Freeze for <a class=\"struct\" href=\"itertools/structs/struct.GroupBy.html\" title=\"struct itertools::structs::GroupBy\">GroupBy</a>&lt;K, I, F&gt;","synthetic":true,"types":["itertools::groupbylazy::GroupBy"]},{"text":"impl&lt;'a, K, I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Group.html\" title=\"struct itertools::structs::Group\">Group</a>&lt;'a, K, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/1.57.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::groupbylazy::Group"]},{"text":"impl&lt;'a, K, I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Groups.html\" title=\"struct itertools::structs::Groups\">Groups</a>&lt;'a, K, I, F&gt;","synthetic":true,"types":["itertools::groupbylazy::Groups"]},{"text":"impl&lt;I, ElemF&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.IntersperseWith.html\" title=\"struct itertools::structs::IntersperseWith\">IntersperseWith</a>&lt;I, ElemF&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ElemF: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/1.57.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::intersperse::IntersperseWith"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.KMergeBy.html\" title=\"struct itertools::structs::KMergeBy\">KMergeBy</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::kmerge_impl::KMergeBy"]},{"text":"impl&lt;I, J, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.MergeJoinBy.html\" title=\"struct itertools::structs::MergeJoinBy\">MergeJoinBy</a>&lt;I, J, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/1.57.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;J as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/1.57.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::merge_join::MergeJoinBy"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.MultiPeek.html\" title=\"struct itertools::structs::MultiPeek\">MultiPeek</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::multipeek_impl::MultiPeek"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.PeekNth.html\" title=\"struct itertools::structs::PeekNth\">PeekNth</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::peek_nth::PeekNth"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.PadUsing.html\" title=\"struct itertools::structs::PadUsing\">PadUsing</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::pad_tail::PadUsing"]},{"text":"impl&lt;'a, I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.PeekingTakeWhile.html\" title=\"struct itertools::structs::PeekingTakeWhile\">PeekingTakeWhile</a>&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::peeking_take_while::PeekingTakeWhile"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Permutations.html\" title=\"struct itertools::structs::Permutations\">Permutations</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::permutations::Permutations"]},{"text":"impl&lt;'a, I, E&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.ProcessResults.html\" title=\"struct itertools::structs::ProcessResults\">ProcessResults</a>&lt;'a, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::process_results_impl::ProcessResults"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Powerset.html\" title=\"struct itertools::structs::Powerset\">Powerset</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::powerset::Powerset"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.PutBackN.html\" title=\"struct itertools::structs::PutBackN\">PutBackN</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::put_back_n_impl::PutBackN"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.RcIter.html\" title=\"struct itertools::structs::RcIter\">RcIter</a>&lt;I&gt;","synthetic":true,"types":["itertools::rciter_impl::RcIter"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.RepeatN.html\" title=\"struct itertools::structs::RepeatN\">RepeatN</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::repeatn::RepeatN"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.RepeatCall.html\" title=\"struct itertools::structs::RepeatCall\">RepeatCall</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::sources::RepeatCall"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Unfold.html\" title=\"struct itertools::structs::Unfold\">Unfold</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::sources::Unfold"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Iterate.html\" title=\"struct itertools::structs::Iterate\">Iterate</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::sources::Iterate"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Tee.html\" title=\"struct itertools::structs::Tee\">Tee</a>&lt;I&gt;","synthetic":true,"types":["itertools::tee::Tee"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.TupleBuffer.html\" title=\"struct itertools::structs::TupleBuffer\">TupleBuffer</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as TupleCollect&gt;::Buffer: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::tuple_impl::TupleBuffer"]},{"text":"impl&lt;I, T&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.TupleWindows.html\" title=\"struct itertools::structs::TupleWindows\">TupleWindows</a>&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::tuple_impl::TupleWindows"]},{"text":"impl&lt;I, T&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.CircularTupleWindows.html\" title=\"struct itertools::structs::CircularTupleWindows\">CircularTupleWindows</a>&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::tuple_impl::CircularTupleWindows"]},{"text":"impl&lt;I, T&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Tuples.html\" title=\"struct itertools::structs::Tuples\">Tuples</a>&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as TupleCollect&gt;::Buffer: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::tuple_impl::Tuples"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Unique.html\" title=\"struct itertools::structs::Unique\">Unique</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::unique_impl::Unique"]},{"text":"impl&lt;I, V, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.UniqueBy.html\" title=\"struct itertools::structs::UniqueBy\">UniqueBy</a>&lt;I, V, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::unique_impl::UniqueBy"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.WithPosition.html\" title=\"struct itertools::structs::WithPosition\">WithPosition</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/1.57.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::with_position::WithPosition"]},{"text":"impl&lt;I, J&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.ZipEq.html\" title=\"struct itertools::structs::ZipEq\">ZipEq</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::zip_eq_impl::ZipEq"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.ZipLongest.html\" title=\"struct itertools::structs::ZipLongest\">ZipLongest</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::zip_longest::ZipLongest"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Zip.html\" title=\"struct itertools::structs::Zip\">Zip</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::ziptuple::Zip"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"enum\" href=\"itertools/enum.EitherOrBoth.html\" title=\"enum itertools::EitherOrBoth\">EitherOrBoth</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::either_or_both::EitherOrBoth"]},{"text":"impl&lt;I, J&gt; Freeze for <a class=\"enum\" href=\"itertools/enum.Diff.html\" title=\"enum itertools::Diff\">Diff</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/1.57.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;J as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/1.57.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::diff::Diff"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"itertools/enum.MinMaxResult.html\" title=\"enum itertools::MinMaxResult\">MinMaxResult</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::minmax::MinMaxResult"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"itertools/enum.Position.html\" title=\"enum itertools::Position\">Position</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::with_position::Position"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"itertools/enum.FoldWhile.html\" title=\"enum itertools::FoldWhile\">FoldWhile</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::FoldWhile"]}];
implementors["libc"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statvfs.html\" title=\"struct libc::statvfs\">statvfs</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::not_x32::statvfs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.max_align_t.html\" title=\"struct libc::max_align_t\">max_align_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::align::max_align_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.clone_args.html\" title=\"struct libc::clone_args\">clone_args</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::align::clone_args"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigaction.html\" title=\"struct libc::sigaction\">sigaction</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::sigaction"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statfs.html\" title=\"struct libc::statfs\">statfs</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::statfs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.flock.html\" title=\"struct libc::flock\">flock</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::flock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.flock64.html\" title=\"struct libc::flock64\">flock64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::flock64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.siginfo_t.html\" title=\"struct libc::siginfo_t\">siginfo_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::siginfo_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.stack_t.html\" title=\"struct libc::stack_t\">stack_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::stack_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.stat.html\" title=\"struct libc::stat\">stat</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::stat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.stat64.html\" title=\"struct libc::stat64\">stat64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::stat64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statfs64.html\" title=\"struct libc::statfs64\">statfs64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::statfs64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statvfs64.html\" title=\"struct libc::statvfs64\">statvfs64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::statvfs64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_attr_t.html\" title=\"struct libc::pthread_attr_t\">pthread_attr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::pthread_attr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct._libc_fpxreg.html\" title=\"struct libc::_libc_fpxreg\">_libc_fpxreg</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::_libc_fpxreg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct._libc_xmmreg.html\" title=\"struct libc::_libc_xmmreg\">_libc_xmmreg</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::_libc_xmmreg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct._libc_fpstate.html\" title=\"struct libc::_libc_fpstate\">_libc_fpstate</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::_libc_fpstate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.user_regs_struct.html\" title=\"struct libc::user_regs_struct\">user_regs_struct</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::user_regs_struct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.user.html\" title=\"struct libc::user\">user</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::user"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mcontext_t.html\" title=\"struct libc::mcontext_t\">mcontext_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::mcontext_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ipc_perm.html\" title=\"struct libc::ipc_perm\">ipc_perm</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::ipc_perm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.shmid_ds.html\" title=\"struct libc::shmid_ds\">shmid_ds</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::shmid_ds"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.seccomp_notif_sizes.html\" title=\"struct libc::seccomp_notif_sizes\">seccomp_notif_sizes</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::seccomp_notif_sizes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ptrace_rseq_configuration.html\" title=\"struct libc::ptrace_rseq_configuration\">ptrace_rseq_configuration</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::ptrace_rseq_configuration"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.user_fpregs_struct.html\" title=\"struct libc::user_fpregs_struct\">user_fpregs_struct</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::user_fpregs_struct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ucontext_t.html\" title=\"struct libc::ucontext_t\">ucontext_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::ucontext_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigset_t.html\" title=\"struct libc::sigset_t\">sigset_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::sigset_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sysinfo.html\" title=\"struct libc::sysinfo\">sysinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::sysinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.msqid_ds.html\" title=\"struct libc::msqid_ds\">msqid_ds</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::msqid_ds"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.semid_ds.html\" title=\"struct libc::semid_ds\">semid_ds</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::semid_ds"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sem_t.html\" title=\"struct libc::sem_t\">sem_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::align::sem_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statx.html\" title=\"struct libc::statx\">statx</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::statx"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statx_timestamp.html\" title=\"struct libc::statx_timestamp\">statx_timestamp</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::statx_timestamp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.aiocb.html\" title=\"struct libc::aiocb\">aiocb</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::aiocb"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__exit_status.html\" title=\"struct libc::__exit_status\">__exit_status</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::__exit_status"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__timeval.html\" title=\"struct libc::__timeval\">__timeval</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::__timeval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.glob64_t.html\" title=\"struct libc::glob64_t\">glob64_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::glob64_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.msghdr.html\" title=\"struct libc::msghdr\">msghdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::msghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.cmsghdr.html\" title=\"struct libc::cmsghdr\">cmsghdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::cmsghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.termios.html\" title=\"struct libc::termios\">termios</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::termios"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mallinfo.html\" title=\"struct libc::mallinfo\">mallinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::mallinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mallinfo2.html\" title=\"struct libc::mallinfo2\">mallinfo2</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::mallinfo2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nl_pktinfo.html\" title=\"struct libc::nl_pktinfo\">nl_pktinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::nl_pktinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nl_mmap_req.html\" title=\"struct libc::nl_mmap_req\">nl_mmap_req</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::nl_mmap_req"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nl_mmap_hdr.html\" title=\"struct libc::nl_mmap_hdr\">nl_mmap_hdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::nl_mmap_hdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rtentry.html\" title=\"struct libc::rtentry\">rtentry</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::rtentry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.timex.html\" title=\"struct libc::timex\">timex</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::timex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ntptimeval.html\" title=\"struct libc::ntptimeval\">ntptimeval</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::ntptimeval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.regex_t.html\" title=\"struct libc::regex_t\">regex_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::regex_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Chdr.html\" title=\"struct libc::Elf64_Chdr\">Elf64_Chdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::Elf64_Chdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Chdr.html\" title=\"struct libc::Elf32_Chdr\">Elf32_Chdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::Elf32_Chdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.seminfo.html\" title=\"struct libc::seminfo\">seminfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::seminfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ptrace_peeksiginfo_args.html\" title=\"struct libc::ptrace_peeksiginfo_args\">ptrace_peeksiginfo_args</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::ptrace_peeksiginfo_args"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__c_anonymous_ptrace_syscall_info_entry.html\" title=\"struct libc::__c_anonymous_ptrace_syscall_info_entry\">__c_anonymous_ptrace_syscall_info_entry</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_entry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__c_anonymous_ptrace_syscall_info_exit.html\" title=\"struct libc::__c_anonymous_ptrace_syscall_info_exit\">__c_anonymous_ptrace_syscall_info_exit</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_exit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__c_anonymous_ptrace_syscall_info_seccomp.html\" title=\"struct libc::__c_anonymous_ptrace_syscall_info_seccomp\">__c_anonymous_ptrace_syscall_info_seccomp</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_seccomp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ptrace_syscall_info.html\" title=\"struct libc::ptrace_syscall_info\">ptrace_syscall_info</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::ptrace_syscall_info"]},{"text":"impl Freeze for <a class=\"union\" href=\"libc/union.__c_anonymous_ptrace_syscall_info_data.html\" title=\"union libc::__c_anonymous_ptrace_syscall_info_data\">__c_anonymous_ptrace_syscall_info_data</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_data"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.utmpx.html\" title=\"struct libc::utmpx\">utmpx</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::utmpx"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.termios2.html\" title=\"struct libc::termios2\">termios2</a>","synthetic":true,"types":["libc::unix::linux_like::linux::arch::generic::termios2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.open_how.html\" title=\"struct libc::open_how\">open_how</a>","synthetic":true,"types":["libc::unix::linux_like::linux::non_exhaustive::open_how"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.fpos64_t.html\" title=\"enum libc::fpos64_t\">fpos64_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::fpos64_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rlimit64.html\" title=\"struct libc::rlimit64\">rlimit64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::rlimit64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.glob_t.html\" title=\"struct libc::glob_t\">glob_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::glob_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.passwd.html\" title=\"struct libc::passwd\">passwd</a>","synthetic":true,"types":["libc::unix::linux_like::linux::passwd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.spwd.html\" title=\"struct libc::spwd\">spwd</a>","synthetic":true,"types":["libc::unix::linux_like::linux::spwd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.dqblk.html\" title=\"struct libc::dqblk\">dqblk</a>","synthetic":true,"types":["libc::unix::linux_like::linux::dqblk"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.signalfd_siginfo.html\" title=\"struct libc::signalfd_siginfo\">signalfd_siginfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::signalfd_siginfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.itimerspec.html\" title=\"struct libc::itimerspec\">itimerspec</a>","synthetic":true,"types":["libc::unix::linux_like::linux::itimerspec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.fsid_t.html\" title=\"struct libc::fsid_t\">fsid_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::fsid_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.packet_mreq.html\" title=\"struct libc::packet_mreq\">packet_mreq</a>","synthetic":true,"types":["libc::unix::linux_like::linux::packet_mreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.cpu_set_t.html\" title=\"struct libc::cpu_set_t\">cpu_set_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::cpu_set_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.if_nameindex.html\" title=\"struct libc::if_nameindex\">if_nameindex</a>","synthetic":true,"types":["libc::unix::linux_like::linux::if_nameindex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.msginfo.html\" title=\"struct libc::msginfo\">msginfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::msginfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sembuf.html\" title=\"struct libc::sembuf\">sembuf</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sembuf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_event.html\" title=\"struct libc::input_event\">input_event</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_id.html\" title=\"struct libc::input_id\">input_id</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_id"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_absinfo.html\" title=\"struct libc::input_absinfo\">input_absinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_absinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_keymap_entry.html\" title=\"struct libc::input_keymap_entry\">input_keymap_entry</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_keymap_entry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_mask.html\" title=\"struct libc::input_mask\">input_mask</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_mask"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_replay.html\" title=\"struct libc::ff_replay\">ff_replay</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_replay"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_trigger.html\" title=\"struct libc::ff_trigger\">ff_trigger</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_trigger"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_envelope.html\" title=\"struct libc::ff_envelope\">ff_envelope</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_envelope"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_constant_effect.html\" title=\"struct libc::ff_constant_effect\">ff_constant_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_constant_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_ramp_effect.html\" title=\"struct libc::ff_ramp_effect\">ff_ramp_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_ramp_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_condition_effect.html\" title=\"struct libc::ff_condition_effect\">ff_condition_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_condition_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_periodic_effect.html\" title=\"struct libc::ff_periodic_effect\">ff_periodic_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_periodic_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_rumble_effect.html\" title=\"struct libc::ff_rumble_effect\">ff_rumble_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_rumble_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_effect.html\" title=\"struct libc::ff_effect\">ff_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.uinput_ff_upload.html\" title=\"struct libc::uinput_ff_upload\">uinput_ff_upload</a>","synthetic":true,"types":["libc::unix::linux_like::linux::uinput_ff_upload"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.uinput_ff_erase.html\" title=\"struct libc::uinput_ff_erase\">uinput_ff_erase</a>","synthetic":true,"types":["libc::unix::linux_like::linux::uinput_ff_erase"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.uinput_abs_setup.html\" title=\"struct libc::uinput_abs_setup\">uinput_abs_setup</a>","synthetic":true,"types":["libc::unix::linux_like::linux::uinput_abs_setup"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.dl_phdr_info.html\" title=\"struct libc::dl_phdr_info\">dl_phdr_info</a>","synthetic":true,"types":["libc::unix::linux_like::linux::dl_phdr_info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Ehdr.html\" title=\"struct libc::Elf32_Ehdr\">Elf32_Ehdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf32_Ehdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Ehdr.html\" title=\"struct libc::Elf64_Ehdr\">Elf64_Ehdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf64_Ehdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Sym.html\" title=\"struct libc::Elf32_Sym\">Elf32_Sym</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf32_Sym"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Sym.html\" title=\"struct libc::Elf64_Sym\">Elf64_Sym</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf64_Sym"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Phdr.html\" title=\"struct libc::Elf32_Phdr\">Elf32_Phdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf32_Phdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Phdr.html\" title=\"struct libc::Elf64_Phdr\">Elf64_Phdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf64_Phdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Shdr.html\" title=\"struct libc::Elf32_Shdr\">Elf32_Shdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf32_Shdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Shdr.html\" title=\"struct libc::Elf64_Shdr\">Elf64_Shdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf64_Shdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ucred.html\" title=\"struct libc::ucred\">ucred</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ucred"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mntent.html\" title=\"struct libc::mntent\">mntent</a>","synthetic":true,"types":["libc::unix::linux_like::linux::mntent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.posix_spawn_file_actions_t.html\" title=\"struct libc::posix_spawn_file_actions_t\">posix_spawn_file_actions_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::posix_spawn_file_actions_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.posix_spawnattr_t.html\" title=\"struct libc::posix_spawnattr_t\">posix_spawnattr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::posix_spawnattr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.genlmsghdr.html\" title=\"struct libc::genlmsghdr\">genlmsghdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::genlmsghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in6_pktinfo.html\" title=\"struct libc::in6_pktinfo\">in6_pktinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::in6_pktinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.arpd_request.html\" title=\"struct libc::arpd_request\">arpd_request</a>","synthetic":true,"types":["libc::unix::linux_like::linux::arpd_request"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.inotify_event.html\" title=\"struct libc::inotify_event\">inotify_event</a>","synthetic":true,"types":["libc::unix::linux_like::linux::inotify_event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.fanotify_response.html\" title=\"struct libc::fanotify_response\">fanotify_response</a>","synthetic":true,"types":["libc::unix::linux_like::linux::fanotify_response"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_vm.html\" title=\"struct libc::sockaddr_vm\">sockaddr_vm</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sockaddr_vm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.regmatch_t.html\" title=\"struct libc::regmatch_t\">regmatch_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::regmatch_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sock_extended_err.html\" title=\"struct libc::sock_extended_err\">sock_extended_err</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sock_extended_err"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__c_anonymous_sockaddr_can_tp.html\" title=\"struct libc::__c_anonymous_sockaddr_can_tp\">__c_anonymous_sockaddr_can_tp</a>","synthetic":true,"types":["libc::unix::linux_like::linux::__c_anonymous_sockaddr_can_tp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__c_anonymous_sockaddr_can_j1939.html\" title=\"struct libc::__c_anonymous_sockaddr_can_j1939\">__c_anonymous_sockaddr_can_j1939</a>","synthetic":true,"types":["libc::unix::linux_like::linux::__c_anonymous_sockaddr_can_j1939"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.can_filter.html\" title=\"struct libc::can_filter\">can_filter</a>","synthetic":true,"types":["libc::unix::linux_like::linux::can_filter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.j1939_filter.html\" title=\"struct libc::j1939_filter\">j1939_filter</a>","synthetic":true,"types":["libc::unix::linux_like::linux::j1939_filter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sock_filter.html\" title=\"struct libc::sock_filter\">sock_filter</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sock_filter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sock_fprog.html\" title=\"struct libc::sock_fprog\">sock_fprog</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sock_fprog"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.seccomp_data.html\" title=\"struct libc::seccomp_data\">seccomp_data</a>","synthetic":true,"types":["libc::unix::linux_like::linux::seccomp_data"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nlmsghdr.html\" title=\"struct libc::nlmsghdr\">nlmsghdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::nlmsghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nlmsgerr.html\" title=\"struct libc::nlmsgerr\">nlmsgerr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::nlmsgerr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nlattr.html\" title=\"struct libc::nlattr\">nlattr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::nlattr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.file_clone_range.html\" title=\"struct libc::file_clone_range\">file_clone_range</a>","synthetic":true,"types":["libc::unix::linux_like::linux::file_clone_range"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__c_anonymous_ifru_map.html\" title=\"struct libc::__c_anonymous_ifru_map\">__c_anonymous_ifru_map</a>","synthetic":true,"types":["libc::unix::linux_like::linux::__c_anonymous_ifru_map"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in6_ifreq.html\" title=\"struct libc::in6_ifreq\">in6_ifreq</a>","synthetic":true,"types":["libc::unix::linux_like::linux::in6_ifreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.option.html\" title=\"struct libc::option\">option</a>","synthetic":true,"types":["libc::unix::linux_like::linux::option"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_nl.html\" title=\"struct libc::sockaddr_nl\">sockaddr_nl</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sockaddr_nl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.dirent.html\" title=\"struct libc::dirent\">dirent</a>","synthetic":true,"types":["libc::unix::linux_like::linux::dirent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.dirent64.html\" title=\"struct libc::dirent64\">dirent64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::dirent64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_alg.html\" title=\"struct libc::sockaddr_alg\">sockaddr_alg</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sockaddr_alg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.uinput_setup.html\" title=\"struct libc::uinput_setup\">uinput_setup</a>","synthetic":true,"types":["libc::unix::linux_like::linux::uinput_setup"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.uinput_user_dev.html\" title=\"struct libc::uinput_user_dev\">uinput_user_dev</a>","synthetic":true,"types":["libc::unix::linux_like::linux::uinput_user_dev"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.af_alg_iv.html\" title=\"struct libc::af_alg_iv\">af_alg_iv</a>","synthetic":true,"types":["libc::unix::linux_like::linux::af_alg_iv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mq_attr.html\" title=\"struct libc::mq_attr\">mq_attr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::mq_attr"]},{"text":"impl Freeze for <a class=\"union\" href=\"libc/union.__c_anonymous_ifr_ifru.html\" title=\"union libc::__c_anonymous_ifr_ifru\">__c_anonymous_ifr_ifru</a>","synthetic":true,"types":["libc::unix::linux_like::linux::__c_anonymous_ifr_ifru"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ifreq.html\" title=\"struct libc::ifreq\">ifreq</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ifreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sock_txtime.html\" title=\"struct libc::sock_txtime\">sock_txtime</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sock_txtime"]},{"text":"impl Freeze for <a class=\"union\" href=\"libc/union.__c_anonymous_sockaddr_can_can_addr.html\" title=\"union libc::__c_anonymous_sockaddr_can_can_addr\">__c_anonymous_sockaddr_can_can_addr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::__c_anonymous_sockaddr_can_can_addr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_can.html\" title=\"struct libc::sockaddr_can\">sockaddr_can</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sockaddr_can"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_mutexattr_t.html\" title=\"struct libc::pthread_mutexattr_t\">pthread_mutexattr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_mutexattr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_rwlockattr_t.html\" title=\"struct libc::pthread_rwlockattr_t\">pthread_rwlockattr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_rwlockattr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_condattr_t.html\" title=\"struct libc::pthread_condattr_t\">pthread_condattr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_condattr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.fanotify_event_metadata.html\" title=\"struct libc::fanotify_event_metadata\">fanotify_event_metadata</a>","synthetic":true,"types":["libc::unix::linux_like::linux::fanotify_event_metadata"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_cond_t.html\" title=\"struct libc::pthread_cond_t\">pthread_cond_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_cond_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_mutex_t.html\" title=\"struct libc::pthread_mutex_t\">pthread_mutex_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_mutex_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_rwlock_t.html\" title=\"struct libc::pthread_rwlock_t\">pthread_rwlock_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_rwlock_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.can_frame.html\" title=\"struct libc::can_frame\">can_frame</a>","synthetic":true,"types":["libc::unix::linux_like::linux::can_frame"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.canfd_frame.html\" title=\"struct libc::canfd_frame\">canfd_frame</a>","synthetic":true,"types":["libc::unix::linux_like::linux::canfd_frame"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.timezone.html\" title=\"enum libc::timezone\">timezone</a>","synthetic":true,"types":["libc::unix::linux_like::timezone"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in_addr.html\" title=\"struct libc::in_addr\">in_addr</a>","synthetic":true,"types":["libc::unix::linux_like::in_addr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ip_mreq.html\" title=\"struct libc::ip_mreq\">ip_mreq</a>","synthetic":true,"types":["libc::unix::linux_like::ip_mreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ip_mreqn.html\" title=\"struct libc::ip_mreqn\">ip_mreqn</a>","synthetic":true,"types":["libc::unix::linux_like::ip_mreqn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ip_mreq_source.html\" title=\"struct libc::ip_mreq_source\">ip_mreq_source</a>","synthetic":true,"types":["libc::unix::linux_like::ip_mreq_source"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr.html\" title=\"struct libc::sockaddr\">sockaddr</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_in.html\" title=\"struct libc::sockaddr_in\">sockaddr_in</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_in"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_in6.html\" title=\"struct libc::sockaddr_in6\">sockaddr_in6</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_in6"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.addrinfo.html\" title=\"struct libc::addrinfo\">addrinfo</a>","synthetic":true,"types":["libc::unix::linux_like::addrinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_ll.html\" title=\"struct libc::sockaddr_ll\">sockaddr_ll</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_ll"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.fd_set.html\" title=\"struct libc::fd_set\">fd_set</a>","synthetic":true,"types":["libc::unix::linux_like::fd_set"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.tm.html\" title=\"struct libc::tm\">tm</a>","synthetic":true,"types":["libc::unix::linux_like::tm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sched_param.html\" title=\"struct libc::sched_param\">sched_param</a>","synthetic":true,"types":["libc::unix::linux_like::sched_param"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Dl_info.html\" title=\"struct libc::Dl_info\">Dl_info</a>","synthetic":true,"types":["libc::unix::linux_like::Dl_info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.lconv.html\" title=\"struct libc::lconv\">lconv</a>","synthetic":true,"types":["libc::unix::linux_like::lconv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in_pktinfo.html\" title=\"struct libc::in_pktinfo\">in_pktinfo</a>","synthetic":true,"types":["libc::unix::linux_like::in_pktinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ifaddrs.html\" title=\"struct libc::ifaddrs\">ifaddrs</a>","synthetic":true,"types":["libc::unix::linux_like::ifaddrs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in6_rtmsg.html\" title=\"struct libc::in6_rtmsg\">in6_rtmsg</a>","synthetic":true,"types":["libc::unix::linux_like::in6_rtmsg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.arpreq.html\" title=\"struct libc::arpreq\">arpreq</a>","synthetic":true,"types":["libc::unix::linux_like::arpreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.arpreq_old.html\" title=\"struct libc::arpreq_old\">arpreq_old</a>","synthetic":true,"types":["libc::unix::linux_like::arpreq_old"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.arphdr.html\" title=\"struct libc::arphdr\">arphdr</a>","synthetic":true,"types":["libc::unix::linux_like::arphdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mmsghdr.html\" title=\"struct libc::mmsghdr\">mmsghdr</a>","synthetic":true,"types":["libc::unix::linux_like::mmsghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.epoll_event.html\" title=\"struct libc::epoll_event\">epoll_event</a>","synthetic":true,"types":["libc::unix::linux_like::epoll_event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_un.html\" title=\"struct libc::sockaddr_un\">sockaddr_un</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_un"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_storage.html\" title=\"struct libc::sockaddr_storage\">sockaddr_storage</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_storage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.utsname.html\" title=\"struct libc::utsname\">utsname</a>","synthetic":true,"types":["libc::unix::linux_like::utsname"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigevent.html\" title=\"struct libc::sigevent\">sigevent</a>","synthetic":true,"types":["libc::unix::linux_like::sigevent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in6_addr.html\" title=\"struct libc::in6_addr\">in6_addr</a>","synthetic":true,"types":["libc::unix::align::in6_addr"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.DIR.html\" title=\"enum libc::DIR\">DIR</a>","synthetic":true,"types":["libc::unix::DIR"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.group.html\" title=\"struct libc::group\">group</a>","synthetic":true,"types":["libc::unix::group"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.utimbuf.html\" title=\"struct libc::utimbuf\">utimbuf</a>","synthetic":true,"types":["libc::unix::utimbuf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.timeval.html\" title=\"struct libc::timeval\">timeval</a>","synthetic":true,"types":["libc::unix::timeval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.timespec.html\" title=\"struct libc::timespec\">timespec</a>","synthetic":true,"types":["libc::unix::timespec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rlimit.html\" title=\"struct libc::rlimit\">rlimit</a>","synthetic":true,"types":["libc::unix::rlimit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rusage.html\" title=\"struct libc::rusage\">rusage</a>","synthetic":true,"types":["libc::unix::rusage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ipv6_mreq.html\" title=\"struct libc::ipv6_mreq\">ipv6_mreq</a>","synthetic":true,"types":["libc::unix::ipv6_mreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.hostent.html\" title=\"struct libc::hostent\">hostent</a>","synthetic":true,"types":["libc::unix::hostent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.iovec.html\" title=\"struct libc::iovec\">iovec</a>","synthetic":true,"types":["libc::unix::iovec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pollfd.html\" title=\"struct libc::pollfd\">pollfd</a>","synthetic":true,"types":["libc::unix::pollfd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.winsize.html\" title=\"struct libc::winsize\">winsize</a>","synthetic":true,"types":["libc::unix::winsize"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.linger.html\" title=\"struct libc::linger\">linger</a>","synthetic":true,"types":["libc::unix::linger"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigval.html\" title=\"struct libc::sigval\">sigval</a>","synthetic":true,"types":["libc::unix::sigval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.itimerval.html\" title=\"struct libc::itimerval\">itimerval</a>","synthetic":true,"types":["libc::unix::itimerval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.tms.html\" title=\"struct libc::tms\">tms</a>","synthetic":true,"types":["libc::unix::tms"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.servent.html\" title=\"struct libc::servent\">servent</a>","synthetic":true,"types":["libc::unix::servent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.protoent.html\" title=\"struct libc::protoent\">protoent</a>","synthetic":true,"types":["libc::unix::protoent"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.FILE.html\" title=\"enum libc::FILE\">FILE</a>","synthetic":true,"types":["libc::unix::FILE"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.fpos_t.html\" title=\"enum libc::fpos_t\">fpos_t</a>","synthetic":true,"types":["libc::unix::fpos_t"]}];
implementors["lock_api"] = [{"text":"impl&lt;R, T&gt; !Freeze for <a class=\"struct\" href=\"lock_api/struct.Mutex.html\" title=\"struct lock_api::Mutex\">Mutex</a>&lt;R, T&gt;","synthetic":true,"types":["lock_api::mutex::Mutex"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MutexGuard.html\" title=\"struct lock_api::MutexGuard\">MutexGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::mutex::MutexGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MappedMutexGuard.html\" title=\"struct lock_api::MappedMutexGuard\">MappedMutexGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::mutex::MappedMutexGuard"]},{"text":"impl&lt;R, G&gt; !Freeze for <a class=\"struct\" href=\"lock_api/struct.RawReentrantMutex.html\" title=\"struct lock_api::RawReentrantMutex\">RawReentrantMutex</a>&lt;R, G&gt;","synthetic":true,"types":["lock_api::remutex::RawReentrantMutex"]},{"text":"impl&lt;R, G, T&gt; !Freeze for <a class=\"struct\" href=\"lock_api/struct.ReentrantMutex.html\" title=\"struct lock_api::ReentrantMutex\">ReentrantMutex</a>&lt;R, G, T&gt;","synthetic":true,"types":["lock_api::remutex::ReentrantMutex"]},{"text":"impl&lt;'a, R, G, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.ReentrantMutexGuard.html\" title=\"struct lock_api::ReentrantMutexGuard\">ReentrantMutexGuard</a>&lt;'a, R, G, T&gt;","synthetic":true,"types":["lock_api::remutex::ReentrantMutexGuard"]},{"text":"impl&lt;'a, R, G, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MappedReentrantMutexGuard.html\" title=\"struct lock_api::MappedReentrantMutexGuard\">MappedReentrantMutexGuard</a>&lt;'a, R, G, T&gt;","synthetic":true,"types":["lock_api::remutex::MappedReentrantMutexGuard"]},{"text":"impl&lt;R, T&gt; !Freeze for <a class=\"struct\" href=\"lock_api/struct.RwLock.html\" title=\"struct lock_api::RwLock\">RwLock</a>&lt;R, T&gt;","synthetic":true,"types":["lock_api::rwlock::RwLock"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.RwLockReadGuard.html\" title=\"struct lock_api::RwLockReadGuard\">RwLockReadGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::RwLockReadGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.RwLockWriteGuard.html\" title=\"struct lock_api::RwLockWriteGuard\">RwLockWriteGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::RwLockWriteGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.RwLockUpgradableReadGuard.html\" title=\"struct lock_api::RwLockUpgradableReadGuard\">RwLockUpgradableReadGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::RwLockUpgradableReadGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MappedRwLockReadGuard.html\" title=\"struct lock_api::MappedRwLockReadGuard\">MappedRwLockReadGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::MappedRwLockReadGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MappedRwLockWriteGuard.html\" title=\"struct lock_api::MappedRwLockWriteGuard\">MappedRwLockWriteGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::MappedRwLockWriteGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"lock_api/struct.GuardSend.html\" title=\"struct lock_api::GuardSend\">GuardSend</a>","synthetic":true,"types":["lock_api::GuardSend"]},{"text":"impl Freeze for <a class=\"struct\" href=\"lock_api/struct.GuardNoSend.html\" title=\"struct lock_api::GuardNoSend\">GuardNoSend</a>","synthetic":true,"types":["lock_api::GuardNoSend"]}];
implementors["log"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"log/enum.Level.html\" title=\"enum log::Level\">Level</a>","synthetic":true,"types":["log::Level"]},{"text":"impl Freeze for <a class=\"enum\" href=\"log/enum.LevelFilter.html\" title=\"enum log::LevelFilter\">LevelFilter</a>","synthetic":true,"types":["log::LevelFilter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.Record.html\" title=\"struct log::Record\">Record</a>&lt;'a&gt;","synthetic":true,"types":["log::Record"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.RecordBuilder.html\" title=\"struct log::RecordBuilder\">RecordBuilder</a>&lt;'a&gt;","synthetic":true,"types":["log::RecordBuilder"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.Metadata.html\" title=\"struct log::Metadata\">Metadata</a>&lt;'a&gt;","synthetic":true,"types":["log::Metadata"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.MetadataBuilder.html\" title=\"struct log::MetadataBuilder\">MetadataBuilder</a>&lt;'a&gt;","synthetic":true,"types":["log::MetadataBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"log/struct.SetLoggerError.html\" title=\"struct log::SetLoggerError\">SetLoggerError</a>","synthetic":true,"types":["log::SetLoggerError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"log/struct.ParseLevelError.html\" title=\"struct log::ParseLevelError\">ParseLevelError</a>","synthetic":true,"types":["log::ParseLevelError"]}];
implementors["memchr"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"memchr/struct.Memchr.html\" title=\"struct memchr::Memchr\">Memchr</a>&lt;'a&gt;","synthetic":true,"types":["memchr::memchr::iter::Memchr"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"memchr/struct.Memchr2.html\" title=\"struct memchr::Memchr2\">Memchr2</a>&lt;'a&gt;","synthetic":true,"types":["memchr::memchr::iter::Memchr2"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"memchr/struct.Memchr3.html\" title=\"struct memchr::Memchr3\">Memchr3</a>&lt;'a&gt;","synthetic":true,"types":["memchr::memchr::iter::Memchr3"]},{"text":"impl Freeze for <a class=\"enum\" href=\"memchr/memmem/enum.Prefilter.html\" title=\"enum memchr::memmem::Prefilter\">Prefilter</a>","synthetic":true,"types":["memchr::memmem::prefilter::Prefilter"]},{"text":"impl&lt;'h, 'n&gt; Freeze for <a class=\"struct\" href=\"memchr/memmem/struct.FindIter.html\" title=\"struct memchr::memmem::FindIter\">FindIter</a>&lt;'h, 'n&gt;","synthetic":true,"types":["memchr::memmem::FindIter"]},{"text":"impl&lt;'h, 'n&gt; Freeze for <a class=\"struct\" href=\"memchr/memmem/struct.FindRevIter.html\" title=\"struct memchr::memmem::FindRevIter\">FindRevIter</a>&lt;'h, 'n&gt;","synthetic":true,"types":["memchr::memmem::FindRevIter"]},{"text":"impl&lt;'n&gt; Freeze for <a class=\"struct\" href=\"memchr/memmem/struct.Finder.html\" title=\"struct memchr::memmem::Finder\">Finder</a>&lt;'n&gt;","synthetic":true,"types":["memchr::memmem::Finder"]},{"text":"impl&lt;'n&gt; Freeze for <a class=\"struct\" href=\"memchr/memmem/struct.FinderRev.html\" title=\"struct memchr::memmem::FinderRev\">FinderRev</a>&lt;'n&gt;","synthetic":true,"types":["memchr::memmem::FinderRev"]},{"text":"impl Freeze for <a class=\"struct\" href=\"memchr/memmem/struct.FinderBuilder.html\" title=\"struct memchr::memmem::FinderBuilder\">FinderBuilder</a>","synthetic":true,"types":["memchr::memmem::FinderBuilder"]}];
implementors["mimalloc"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"mimalloc/struct.MiMalloc.html\" title=\"struct mimalloc::MiMalloc\">MiMalloc</a>","synthetic":true,"types":["mimalloc::MiMalloc"]}];
implementors["mio"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"mio/struct.Interest.html\" title=\"struct mio::Interest\">Interest</a>","synthetic":true,"types":["mio::interest::Interest"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/struct.Poll.html\" title=\"struct mio::Poll\">Poll</a>","synthetic":true,"types":["mio::poll::Poll"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/struct.Registry.html\" title=\"struct mio::Registry\">Registry</a>","synthetic":true,"types":["mio::poll::Registry"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"mio/unix/struct.SourceFd.html\" title=\"struct mio::unix::SourceFd\">SourceFd</a>&lt;'a&gt;","synthetic":true,"types":["mio::sys::unix::sourcefd::SourceFd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/net/struct.SocketAddr.html\" title=\"struct mio::net::SocketAddr\">SocketAddr</a>","synthetic":true,"types":["mio::sys::unix::uds::socketaddr::SocketAddr"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/unix/pipe/struct.Sender.html\" title=\"struct mio::unix::pipe::Sender\">Sender</a>","synthetic":true,"types":["mio::sys::unix::pipe::Sender"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/unix/pipe/struct.Receiver.html\" title=\"struct mio::unix::pipe::Receiver\">Receiver</a>","synthetic":true,"types":["mio::sys::unix::pipe::Receiver"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/struct.Token.html\" title=\"struct mio::Token\">Token</a>","synthetic":true,"types":["mio::token::Token"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/struct.Waker.html\" title=\"struct mio::Waker\">Waker</a>","synthetic":true,"types":["mio::waker::Waker"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/event/struct.Event.html\" title=\"struct mio::event::Event\">Event</a>","synthetic":true,"types":["mio::event::event::Event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/event/struct.Events.html\" title=\"struct mio::event::Events\">Events</a>","synthetic":true,"types":["mio::event::events::Events"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"mio/event/struct.Iter.html\" title=\"struct mio::event::Iter\">Iter</a>&lt;'a&gt;","synthetic":true,"types":["mio::event::events::Iter"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/net/struct.TcpListener.html\" title=\"struct mio::net::TcpListener\">TcpListener</a>","synthetic":true,"types":["mio::net::tcp::listener::TcpListener"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/net/struct.TcpStream.html\" title=\"struct mio::net::TcpStream\">TcpStream</a>","synthetic":true,"types":["mio::net::tcp::stream::TcpStream"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/net/struct.UdpSocket.html\" title=\"struct mio::net::UdpSocket\">UdpSocket</a>","synthetic":true,"types":["mio::net::udp::UdpSocket"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/net/struct.UnixDatagram.html\" title=\"struct mio::net::UnixDatagram\">UnixDatagram</a>","synthetic":true,"types":["mio::net::uds::datagram::UnixDatagram"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/net/struct.UnixListener.html\" title=\"struct mio::net::UnixListener\">UnixListener</a>","synthetic":true,"types":["mio::net::uds::listener::UnixListener"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/net/struct.UnixStream.html\" title=\"struct mio::net::UnixStream\">UnixStream</a>","synthetic":true,"types":["mio::net::uds::stream::UnixStream"]}];
implementors["nom"] = [{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"nom/error/struct.Error.html\" title=\"struct nom::error::Error\">Error</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["nom::error::Error"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"nom/error/struct.VerboseError.html\" title=\"struct nom::error::VerboseError\">VerboseError</a>&lt;I&gt;","synthetic":true,"types":["nom::error::VerboseError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"nom/error/enum.VerboseErrorKind.html\" title=\"enum nom::error::VerboseErrorKind\">VerboseErrorKind</a>","synthetic":true,"types":["nom::error::VerboseErrorKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"nom/error/enum.ErrorKind.html\" title=\"enum nom::error::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["nom::error::ErrorKind"]},{"text":"impl&lt;I, E, F&gt; Freeze for <a class=\"struct\" href=\"nom/combinator/struct.ParserIterator.html\" title=\"struct nom::combinator::ParserIterator\">ParserIterator</a>&lt;I, E, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["nom::combinator::ParserIterator"]},{"text":"impl Freeze for <a class=\"enum\" href=\"nom/enum.Needed.html\" title=\"enum nom::Needed\">Needed</a>","synthetic":true,"types":["nom::internal::Needed"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"enum\" href=\"nom/enum.Err.html\" title=\"enum nom::Err\">Err</a>&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":["nom::internal::Err"]},{"text":"impl&lt;F, G, O1&gt; Freeze for <a class=\"struct\" href=\"nom/struct.Map.html\" title=\"struct nom::Map\">Map</a>&lt;F, G, O1&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":["nom::internal::Map"]},{"text":"impl&lt;F, G, O1&gt; Freeze for <a class=\"struct\" href=\"nom/struct.FlatMap.html\" title=\"struct nom::FlatMap\">FlatMap</a>&lt;F, G, O1&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":["nom::internal::FlatMap"]},{"text":"impl&lt;F, G, O1&gt; Freeze for <a class=\"struct\" href=\"nom/struct.AndThen.html\" title=\"struct nom::AndThen\">AndThen</a>&lt;F, G, O1&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":["nom::internal::AndThen"]},{"text":"impl&lt;F, G&gt; Freeze for <a class=\"struct\" href=\"nom/struct.And.html\" title=\"struct nom::And\">And</a>&lt;F, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":["nom::internal::And"]},{"text":"impl&lt;F, G&gt; Freeze for <a class=\"struct\" href=\"nom/struct.Or.html\" title=\"struct nom::Or\">Or</a>&lt;F, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":["nom::internal::Or"]},{"text":"impl&lt;F, O1, O2, E1, E2&gt; Freeze for <a class=\"struct\" href=\"nom/struct.Into.html\" title=\"struct nom::Into\">Into</a>&lt;F, O1, O2, E1, E2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["nom::internal::Into"]},{"text":"impl Freeze for <a class=\"enum\" href=\"nom/enum.CompareResult.html\" title=\"enum nom::CompareResult\">CompareResult</a>","synthetic":true,"types":["nom::traits::CompareResult"]},{"text":"impl Freeze for <a class=\"enum\" href=\"nom/number/enum.Endianness.html\" title=\"enum nom::number::Endianness\">Endianness</a>","synthetic":true,"types":["nom::number::Endianness"]}];
implementors["once_cell"] = [{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"once_cell/unsync/struct.OnceCell.html\" title=\"struct once_cell::unsync::OnceCell\">OnceCell</a>&lt;T&gt;","synthetic":true,"types":["once_cell::unsync::OnceCell"]},{"text":"impl&lt;T, F&nbsp;=&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.57.0/std/primitive.fn.html\">fn</a>() -&gt; T&gt; !Freeze for <a class=\"struct\" href=\"once_cell/unsync/struct.Lazy.html\" title=\"struct once_cell::unsync::Lazy\">Lazy</a>&lt;T, F&gt;","synthetic":true,"types":["once_cell::unsync::Lazy"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"once_cell/sync/struct.OnceCell.html\" title=\"struct once_cell::sync::OnceCell\">OnceCell</a>&lt;T&gt;","synthetic":true,"types":["once_cell::sync::OnceCell"]},{"text":"impl&lt;T, F&nbsp;=&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.57.0/std/primitive.fn.html\">fn</a>() -&gt; T&gt; !Freeze for <a class=\"struct\" href=\"once_cell/sync/struct.Lazy.html\" title=\"struct once_cell::sync::Lazy\">Lazy</a>&lt;T, F&gt;","synthetic":true,"types":["once_cell::sync::Lazy"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"once_cell/race/struct.OnceBox.html\" title=\"struct once_cell::race::OnceBox\">OnceBox</a>&lt;T&gt;","synthetic":true,"types":["once_cell::race::once_box::OnceBox"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"once_cell/race/struct.OnceNonZeroUsize.html\" title=\"struct once_cell::race::OnceNonZeroUsize\">OnceNonZeroUsize</a>","synthetic":true,"types":["once_cell::race::OnceNonZeroUsize"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"once_cell/race/struct.OnceBool.html\" title=\"struct once_cell::race::OnceBool\">OnceBool</a>","synthetic":true,"types":["once_cell::race::OnceBool"]},{"text":"impl&lt;'a, T&gt; !Freeze for <a class=\"struct\" href=\"once_cell/race/struct.OnceRef.html\" title=\"struct once_cell::race::OnceRef\">OnceRef</a>&lt;'a, T&gt;","synthetic":true,"types":["once_cell::race::OnceRef"]}];
implementors["os_str_bytes"] = [{"text":"impl&lt;'a, P&gt; Freeze for <a class=\"struct\" href=\"os_str_bytes/iter/struct.Split.html\" title=\"struct os_str_bytes::iter::Split\">Split</a>&lt;'a, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as <a class=\"trait\" href=\"os_str_bytes/trait.Pattern.html\" title=\"trait os_str_bytes::Pattern\">Pattern</a>&gt;::<a class=\"type\" href=\"os_str_bytes/trait.Pattern.html#associatedtype.__Encoded\" title=\"type os_str_bytes::Pattern::__Encoded\">__Encoded</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["os_str_bytes::iter::Split"]},{"text":"impl Freeze for <a class=\"struct\" href=\"os_str_bytes/struct.RawOsStr.html\" title=\"struct os_str_bytes::RawOsStr\">RawOsStr</a>","synthetic":true,"types":["os_str_bytes::raw_str::RawOsStr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"os_str_bytes/struct.RawOsString.html\" title=\"struct os_str_bytes::RawOsString\">RawOsString</a>","synthetic":true,"types":["os_str_bytes::raw_str::RawOsString"]},{"text":"impl Freeze for <a class=\"struct\" href=\"os_str_bytes/struct.EncodingError.html\" title=\"struct os_str_bytes::EncodingError\">EncodingError</a>","synthetic":true,"types":["os_str_bytes::EncodingError"]}];
implementors["owo_colors"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"owo_colors/colored/enum.Color.html\" title=\"enum owo_colors::colored::Color\">AnsiColors</a>","synthetic":true,"types":["owo_colors::colors::ansi_colors::AnsiColors"]},{"text":"impl Freeze for <a class=\"enum\" href=\"owo_colors/enum.CssColors.html\" title=\"enum owo_colors::CssColors\">CssColors</a>","synthetic":true,"types":["owo_colors::colors::css::dynamic::CssColors"]},{"text":"impl Freeze for <a class=\"enum\" href=\"owo_colors/enum.XtermColors.html\" title=\"enum owo_colors::XtermColors\">XtermColors</a>","synthetic":true,"types":["owo_colors::colors::xterm::dynamic::XtermColors"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.UserBlack.html\" title=\"struct owo_colors::colors::xterm::UserBlack\">UserBlack</a>","synthetic":true,"types":["owo_colors::colors::xterm::UserBlack"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.UserRed.html\" title=\"struct owo_colors::colors::xterm::UserRed\">UserRed</a>","synthetic":true,"types":["owo_colors::colors::xterm::UserRed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.UserGreen.html\" title=\"struct owo_colors::colors::xterm::UserGreen\">UserGreen</a>","synthetic":true,"types":["owo_colors::colors::xterm::UserGreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.UserYellow.html\" title=\"struct owo_colors::colors::xterm::UserYellow\">UserYellow</a>","synthetic":true,"types":["owo_colors::colors::xterm::UserYellow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.UserBlue.html\" title=\"struct owo_colors::colors::xterm::UserBlue\">UserBlue</a>","synthetic":true,"types":["owo_colors::colors::xterm::UserBlue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.UserMagenta.html\" title=\"struct owo_colors::colors::xterm::UserMagenta\">UserMagenta</a>","synthetic":true,"types":["owo_colors::colors::xterm::UserMagenta"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.UserCyan.html\" title=\"struct owo_colors::colors::xterm::UserCyan\">UserCyan</a>","synthetic":true,"types":["owo_colors::colors::xterm::UserCyan"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.UserWhite.html\" title=\"struct owo_colors::colors::xterm::UserWhite\">UserWhite</a>","synthetic":true,"types":["owo_colors::colors::xterm::UserWhite"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.UserBrightBlack.html\" title=\"struct owo_colors::colors::xterm::UserBrightBlack\">UserBrightBlack</a>","synthetic":true,"types":["owo_colors::colors::xterm::UserBrightBlack"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.UserBrightRed.html\" title=\"struct owo_colors::colors::xterm::UserBrightRed\">UserBrightRed</a>","synthetic":true,"types":["owo_colors::colors::xterm::UserBrightRed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.UserBrightGreen.html\" title=\"struct owo_colors::colors::xterm::UserBrightGreen\">UserBrightGreen</a>","synthetic":true,"types":["owo_colors::colors::xterm::UserBrightGreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.UserBrightYellow.html\" title=\"struct owo_colors::colors::xterm::UserBrightYellow\">UserBrightYellow</a>","synthetic":true,"types":["owo_colors::colors::xterm::UserBrightYellow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.UserBrightBlue.html\" title=\"struct owo_colors::colors::xterm::UserBrightBlue\">UserBrightBlue</a>","synthetic":true,"types":["owo_colors::colors::xterm::UserBrightBlue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.UserBrightMagenta.html\" title=\"struct owo_colors::colors::xterm::UserBrightMagenta\">UserBrightMagenta</a>","synthetic":true,"types":["owo_colors::colors::xterm::UserBrightMagenta"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.UserBrightCyan.html\" title=\"struct owo_colors::colors::xterm::UserBrightCyan\">UserBrightCyan</a>","synthetic":true,"types":["owo_colors::colors::xterm::UserBrightCyan"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.UserBrightWhite.html\" title=\"struct owo_colors::colors::xterm::UserBrightWhite\">UserBrightWhite</a>","synthetic":true,"types":["owo_colors::colors::xterm::UserBrightWhite"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Black.html\" title=\"struct owo_colors::colors::xterm::Black\">Black</a>","synthetic":true,"types":["owo_colors::colors::xterm::Black"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.StratosBlue.html\" title=\"struct owo_colors::colors::xterm::StratosBlue\">StratosBlue</a>","synthetic":true,"types":["owo_colors::colors::xterm::StratosBlue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.NavyBlue.html\" title=\"struct owo_colors::colors::xterm::NavyBlue\">NavyBlue</a>","synthetic":true,"types":["owo_colors::colors::xterm::NavyBlue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.MidnightBlue.html\" title=\"struct owo_colors::colors::xterm::MidnightBlue\">MidnightBlue</a>","synthetic":true,"types":["owo_colors::colors::xterm::MidnightBlue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DarkBlue.html\" title=\"struct owo_colors::colors::xterm::DarkBlue\">DarkBlue</a>","synthetic":true,"types":["owo_colors::colors::xterm::DarkBlue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Blue.html\" title=\"struct owo_colors::colors::xterm::Blue\">Blue</a>","synthetic":true,"types":["owo_colors::colors::xterm::Blue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.CamaroneGreen.html\" title=\"struct owo_colors::colors::xterm::CamaroneGreen\">CamaroneGreen</a>","synthetic":true,"types":["owo_colors::colors::xterm::CamaroneGreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.BlueStone.html\" title=\"struct owo_colors::colors::xterm::BlueStone\">BlueStone</a>","synthetic":true,"types":["owo_colors::colors::xterm::BlueStone"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.OrientBlue.html\" title=\"struct owo_colors::colors::xterm::OrientBlue\">OrientBlue</a>","synthetic":true,"types":["owo_colors::colors::xterm::OrientBlue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.EndeavourBlue.html\" title=\"struct owo_colors::colors::xterm::EndeavourBlue\">EndeavourBlue</a>","synthetic":true,"types":["owo_colors::colors::xterm::EndeavourBlue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.ScienceBlue.html\" title=\"struct owo_colors::colors::xterm::ScienceBlue\">ScienceBlue</a>","synthetic":true,"types":["owo_colors::colors::xterm::ScienceBlue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.BlueRibbon.html\" title=\"struct owo_colors::colors::xterm::BlueRibbon\">BlueRibbon</a>","synthetic":true,"types":["owo_colors::colors::xterm::BlueRibbon"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.JapaneseLaurel.html\" title=\"struct owo_colors::colors::xterm::JapaneseLaurel\">JapaneseLaurel</a>","synthetic":true,"types":["owo_colors::colors::xterm::JapaneseLaurel"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DeepSeaGreen.html\" title=\"struct owo_colors::colors::xterm::DeepSeaGreen\">DeepSeaGreen</a>","synthetic":true,"types":["owo_colors::colors::xterm::DeepSeaGreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Teal.html\" title=\"struct owo_colors::colors::xterm::Teal\">Teal</a>","synthetic":true,"types":["owo_colors::colors::xterm::Teal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DeepCerulean.html\" title=\"struct owo_colors::colors::xterm::DeepCerulean\">DeepCerulean</a>","synthetic":true,"types":["owo_colors::colors::xterm::DeepCerulean"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.LochmaraBlue.html\" title=\"struct owo_colors::colors::xterm::LochmaraBlue\">LochmaraBlue</a>","synthetic":true,"types":["owo_colors::colors::xterm::LochmaraBlue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.AzureRadiance.html\" title=\"struct owo_colors::colors::xterm::AzureRadiance\">AzureRadiance</a>","synthetic":true,"types":["owo_colors::colors::xterm::AzureRadiance"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.LightJapaneseLaurel.html\" title=\"struct owo_colors::colors::xterm::LightJapaneseLaurel\">LightJapaneseLaurel</a>","synthetic":true,"types":["owo_colors::colors::xterm::LightJapaneseLaurel"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Jade.html\" title=\"struct owo_colors::colors::xterm::Jade\">Jade</a>","synthetic":true,"types":["owo_colors::colors::xterm::Jade"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.PersianGreen.html\" title=\"struct owo_colors::colors::xterm::PersianGreen\">PersianGreen</a>","synthetic":true,"types":["owo_colors::colors::xterm::PersianGreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.BondiBlue.html\" title=\"struct owo_colors::colors::xterm::BondiBlue\">BondiBlue</a>","synthetic":true,"types":["owo_colors::colors::xterm::BondiBlue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Cerulean.html\" title=\"struct owo_colors::colors::xterm::Cerulean\">Cerulean</a>","synthetic":true,"types":["owo_colors::colors::xterm::Cerulean"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.LightAzureRadiance.html\" title=\"struct owo_colors::colors::xterm::LightAzureRadiance\">LightAzureRadiance</a>","synthetic":true,"types":["owo_colors::colors::xterm::LightAzureRadiance"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DarkGreen.html\" title=\"struct owo_colors::colors::xterm::DarkGreen\">DarkGreen</a>","synthetic":true,"types":["owo_colors::colors::xterm::DarkGreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Malachite.html\" title=\"struct owo_colors::colors::xterm::Malachite\">Malachite</a>","synthetic":true,"types":["owo_colors::colors::xterm::Malachite"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.CaribbeanGreen.html\" title=\"struct owo_colors::colors::xterm::CaribbeanGreen\">CaribbeanGreen</a>","synthetic":true,"types":["owo_colors::colors::xterm::CaribbeanGreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.LightCaribbeanGreen.html\" title=\"struct owo_colors::colors::xterm::LightCaribbeanGreen\">LightCaribbeanGreen</a>","synthetic":true,"types":["owo_colors::colors::xterm::LightCaribbeanGreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.RobinEggBlue.html\" title=\"struct owo_colors::colors::xterm::RobinEggBlue\">RobinEggBlue</a>","synthetic":true,"types":["owo_colors::colors::xterm::RobinEggBlue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Aqua.html\" title=\"struct owo_colors::colors::xterm::Aqua\">Aqua</a>","synthetic":true,"types":["owo_colors::colors::xterm::Aqua"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Green.html\" title=\"struct owo_colors::colors::xterm::Green\">Green</a>","synthetic":true,"types":["owo_colors::colors::xterm::Green"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DarkSpringGreen.html\" title=\"struct owo_colors::colors::xterm::DarkSpringGreen\">DarkSpringGreen</a>","synthetic":true,"types":["owo_colors::colors::xterm::DarkSpringGreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.SpringGreen.html\" title=\"struct owo_colors::colors::xterm::SpringGreen\">SpringGreen</a>","synthetic":true,"types":["owo_colors::colors::xterm::SpringGreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.LightSpringGreen.html\" title=\"struct owo_colors::colors::xterm::LightSpringGreen\">LightSpringGreen</a>","synthetic":true,"types":["owo_colors::colors::xterm::LightSpringGreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.BrightTurquoise.html\" title=\"struct owo_colors::colors::xterm::BrightTurquoise\">BrightTurquoise</a>","synthetic":true,"types":["owo_colors::colors::xterm::BrightTurquoise"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Cyan.html\" title=\"struct owo_colors::colors::xterm::Cyan\">Cyan</a>","synthetic":true,"types":["owo_colors::colors::xterm::Cyan"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Rosewood.html\" title=\"struct owo_colors::colors::xterm::Rosewood\">Rosewood</a>","synthetic":true,"types":["owo_colors::colors::xterm::Rosewood"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.PompadourMagenta.html\" title=\"struct owo_colors::colors::xterm::PompadourMagenta\">PompadourMagenta</a>","synthetic":true,"types":["owo_colors::colors::xterm::PompadourMagenta"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.PigmentIndigo.html\" title=\"struct owo_colors::colors::xterm::PigmentIndigo\">PigmentIndigo</a>","synthetic":true,"types":["owo_colors::colors::xterm::PigmentIndigo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DarkPurple.html\" title=\"struct owo_colors::colors::xterm::DarkPurple\">DarkPurple</a>","synthetic":true,"types":["owo_colors::colors::xterm::DarkPurple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.ElectricIndigo.html\" title=\"struct owo_colors::colors::xterm::ElectricIndigo\">ElectricIndigo</a>","synthetic":true,"types":["owo_colors::colors::xterm::ElectricIndigo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.ElectricPurple.html\" title=\"struct owo_colors::colors::xterm::ElectricPurple\">ElectricPurple</a>","synthetic":true,"types":["owo_colors::colors::xterm::ElectricPurple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.VerdunGreen.html\" title=\"struct owo_colors::colors::xterm::VerdunGreen\">VerdunGreen</a>","synthetic":true,"types":["owo_colors::colors::xterm::VerdunGreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.ScorpionOlive.html\" title=\"struct owo_colors::colors::xterm::ScorpionOlive\">ScorpionOlive</a>","synthetic":true,"types":["owo_colors::colors::xterm::ScorpionOlive"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Lilac.html\" title=\"struct owo_colors::colors::xterm::Lilac\">Lilac</a>","synthetic":true,"types":["owo_colors::colors::xterm::Lilac"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.ScampiIndigo.html\" title=\"struct owo_colors::colors::xterm::ScampiIndigo\">ScampiIndigo</a>","synthetic":true,"types":["owo_colors::colors::xterm::ScampiIndigo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Indigo.html\" title=\"struct owo_colors::colors::xterm::Indigo\">Indigo</a>","synthetic":true,"types":["owo_colors::colors::xterm::Indigo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DarkCornflowerBlue.html\" title=\"struct owo_colors::colors::xterm::DarkCornflowerBlue\">DarkCornflowerBlue</a>","synthetic":true,"types":["owo_colors::colors::xterm::DarkCornflowerBlue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DarkLimeade.html\" title=\"struct owo_colors::colors::xterm::DarkLimeade\">DarkLimeade</a>","synthetic":true,"types":["owo_colors::colors::xterm::DarkLimeade"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.GladeGreen.html\" title=\"struct owo_colors::colors::xterm::GladeGreen\">GladeGreen</a>","synthetic":true,"types":["owo_colors::colors::xterm::GladeGreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.JuniperGreen.html\" title=\"struct owo_colors::colors::xterm::JuniperGreen\">JuniperGreen</a>","synthetic":true,"types":["owo_colors::colors::xterm::JuniperGreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.HippieBlue.html\" title=\"struct owo_colors::colors::xterm::HippieBlue\">HippieBlue</a>","synthetic":true,"types":["owo_colors::colors::xterm::HippieBlue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.HavelockBlue.html\" title=\"struct owo_colors::colors::xterm::HavelockBlue\">HavelockBlue</a>","synthetic":true,"types":["owo_colors::colors::xterm::HavelockBlue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.CornflowerBlue.html\" title=\"struct owo_colors::colors::xterm::CornflowerBlue\">CornflowerBlue</a>","synthetic":true,"types":["owo_colors::colors::xterm::CornflowerBlue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Limeade.html\" title=\"struct owo_colors::colors::xterm::Limeade\">Limeade</a>","synthetic":true,"types":["owo_colors::colors::xterm::Limeade"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.FernGreen.html\" title=\"struct owo_colors::colors::xterm::FernGreen\">FernGreen</a>","synthetic":true,"types":["owo_colors::colors::xterm::FernGreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.SilverTree.html\" title=\"struct owo_colors::colors::xterm::SilverTree\">SilverTree</a>","synthetic":true,"types":["owo_colors::colors::xterm::SilverTree"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Tradewind.html\" title=\"struct owo_colors::colors::xterm::Tradewind\">Tradewind</a>","synthetic":true,"types":["owo_colors::colors::xterm::Tradewind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.ShakespeareBlue.html\" title=\"struct owo_colors::colors::xterm::ShakespeareBlue\">ShakespeareBlue</a>","synthetic":true,"types":["owo_colors::colors::xterm::ShakespeareBlue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DarkMalibuBlue.html\" title=\"struct owo_colors::colors::xterm::DarkMalibuBlue\">DarkMalibuBlue</a>","synthetic":true,"types":["owo_colors::colors::xterm::DarkMalibuBlue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DarkBrightGreen.html\" title=\"struct owo_colors::colors::xterm::DarkBrightGreen\">DarkBrightGreen</a>","synthetic":true,"types":["owo_colors::colors::xterm::DarkBrightGreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DarkPastelGreen.html\" title=\"struct owo_colors::colors::xterm::DarkPastelGreen\">DarkPastelGreen</a>","synthetic":true,"types":["owo_colors::colors::xterm::DarkPastelGreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.PastelGreen.html\" title=\"struct owo_colors::colors::xterm::PastelGreen\">PastelGreen</a>","synthetic":true,"types":["owo_colors::colors::xterm::PastelGreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DownyTeal.html\" title=\"struct owo_colors::colors::xterm::DownyTeal\">DownyTeal</a>","synthetic":true,"types":["owo_colors::colors::xterm::DownyTeal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Viking.html\" title=\"struct owo_colors::colors::xterm::Viking\">Viking</a>","synthetic":true,"types":["owo_colors::colors::xterm::Viking"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.MalibuBlue.html\" title=\"struct owo_colors::colors::xterm::MalibuBlue\">MalibuBlue</a>","synthetic":true,"types":["owo_colors::colors::xterm::MalibuBlue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.BrightGreen.html\" title=\"struct owo_colors::colors::xterm::BrightGreen\">BrightGreen</a>","synthetic":true,"types":["owo_colors::colors::xterm::BrightGreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DarkScreaminGreen.html\" title=\"struct owo_colors::colors::xterm::DarkScreaminGreen\">DarkScreaminGreen</a>","synthetic":true,"types":["owo_colors::colors::xterm::DarkScreaminGreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.ScreaminGreen.html\" title=\"struct owo_colors::colors::xterm::ScreaminGreen\">ScreaminGreen</a>","synthetic":true,"types":["owo_colors::colors::xterm::ScreaminGreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DarkAquamarine.html\" title=\"struct owo_colors::colors::xterm::DarkAquamarine\">DarkAquamarine</a>","synthetic":true,"types":["owo_colors::colors::xterm::DarkAquamarine"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Aquamarine.html\" title=\"struct owo_colors::colors::xterm::Aquamarine\">Aquamarine</a>","synthetic":true,"types":["owo_colors::colors::xterm::Aquamarine"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.LightAquamarine.html\" title=\"struct owo_colors::colors::xterm::LightAquamarine\">LightAquamarine</a>","synthetic":true,"types":["owo_colors::colors::xterm::LightAquamarine"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Maroon.html\" title=\"struct owo_colors::colors::xterm::Maroon\">Maroon</a>","synthetic":true,"types":["owo_colors::colors::xterm::Maroon"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DarkFreshEggplant.html\" title=\"struct owo_colors::colors::xterm::DarkFreshEggplant\">DarkFreshEggplant</a>","synthetic":true,"types":["owo_colors::colors::xterm::DarkFreshEggplant"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.LightFreshEggplant.html\" title=\"struct owo_colors::colors::xterm::LightFreshEggplant\">LightFreshEggplant</a>","synthetic":true,"types":["owo_colors::colors::xterm::LightFreshEggplant"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Purple.html\" title=\"struct owo_colors::colors::xterm::Purple\">Purple</a>","synthetic":true,"types":["owo_colors::colors::xterm::Purple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.ElectricViolet.html\" title=\"struct owo_colors::colors::xterm::ElectricViolet\">ElectricViolet</a>","synthetic":true,"types":["owo_colors::colors::xterm::ElectricViolet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.LightElectricViolet.html\" title=\"struct owo_colors::colors::xterm::LightElectricViolet\">LightElectricViolet</a>","synthetic":true,"types":["owo_colors::colors::xterm::LightElectricViolet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Brown.html\" title=\"struct owo_colors::colors::xterm::Brown\">Brown</a>","synthetic":true,"types":["owo_colors::colors::xterm::Brown"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.CopperRose.html\" title=\"struct owo_colors::colors::xterm::CopperRose\">CopperRose</a>","synthetic":true,"types":["owo_colors::colors::xterm::CopperRose"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.StrikemasterPurple.html\" title=\"struct owo_colors::colors::xterm::StrikemasterPurple\">StrikemasterPurple</a>","synthetic":true,"types":["owo_colors::colors::xterm::StrikemasterPurple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DelugePurple.html\" title=\"struct owo_colors::colors::xterm::DelugePurple\">DelugePurple</a>","synthetic":true,"types":["owo_colors::colors::xterm::DelugePurple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DarkMediumPurple.html\" title=\"struct owo_colors::colors::xterm::DarkMediumPurple\">DarkMediumPurple</a>","synthetic":true,"types":["owo_colors::colors::xterm::DarkMediumPurple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DarkHeliotropePurple.html\" title=\"struct owo_colors::colors::xterm::DarkHeliotropePurple\">DarkHeliotropePurple</a>","synthetic":true,"types":["owo_colors::colors::xterm::DarkHeliotropePurple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Olive.html\" title=\"struct owo_colors::colors::xterm::Olive\">Olive</a>","synthetic":true,"types":["owo_colors::colors::xterm::Olive"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.ClayCreekOlive.html\" title=\"struct owo_colors::colors::xterm::ClayCreekOlive\">ClayCreekOlive</a>","synthetic":true,"types":["owo_colors::colors::xterm::ClayCreekOlive"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DarkGray.html\" title=\"struct owo_colors::colors::xterm::DarkGray\">DarkGray</a>","synthetic":true,"types":["owo_colors::colors::xterm::DarkGray"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.WildBlueYonder.html\" title=\"struct owo_colors::colors::xterm::WildBlueYonder\">WildBlueYonder</a>","synthetic":true,"types":["owo_colors::colors::xterm::WildBlueYonder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.ChetwodeBlue.html\" title=\"struct owo_colors::colors::xterm::ChetwodeBlue\">ChetwodeBlue</a>","synthetic":true,"types":["owo_colors::colors::xterm::ChetwodeBlue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.SlateBlue.html\" title=\"struct owo_colors::colors::xterm::SlateBlue\">SlateBlue</a>","synthetic":true,"types":["owo_colors::colors::xterm::SlateBlue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.LightLimeade.html\" title=\"struct owo_colors::colors::xterm::LightLimeade\">LightLimeade</a>","synthetic":true,"types":["owo_colors::colors::xterm::LightLimeade"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.ChelseaCucumber.html\" title=\"struct owo_colors::colors::xterm::ChelseaCucumber\">ChelseaCucumber</a>","synthetic":true,"types":["owo_colors::colors::xterm::ChelseaCucumber"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.BayLeaf.html\" title=\"struct owo_colors::colors::xterm::BayLeaf\">BayLeaf</a>","synthetic":true,"types":["owo_colors::colors::xterm::BayLeaf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.GulfStream.html\" title=\"struct owo_colors::colors::xterm::GulfStream\">GulfStream</a>","synthetic":true,"types":["owo_colors::colors::xterm::GulfStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.PoloBlue.html\" title=\"struct owo_colors::colors::xterm::PoloBlue\">PoloBlue</a>","synthetic":true,"types":["owo_colors::colors::xterm::PoloBlue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.LightMalibuBlue.html\" title=\"struct owo_colors::colors::xterm::LightMalibuBlue\">LightMalibuBlue</a>","synthetic":true,"types":["owo_colors::colors::xterm::LightMalibuBlue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Pistachio.html\" title=\"struct owo_colors::colors::xterm::Pistachio\">Pistachio</a>","synthetic":true,"types":["owo_colors::colors::xterm::Pistachio"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.LightPastelGreen.html\" title=\"struct owo_colors::colors::xterm::LightPastelGreen\">LightPastelGreen</a>","synthetic":true,"types":["owo_colors::colors::xterm::LightPastelGreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DarkFeijoaGreen.html\" title=\"struct owo_colors::colors::xterm::DarkFeijoaGreen\">DarkFeijoaGreen</a>","synthetic":true,"types":["owo_colors::colors::xterm::DarkFeijoaGreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.VistaBlue.html\" title=\"struct owo_colors::colors::xterm::VistaBlue\">VistaBlue</a>","synthetic":true,"types":["owo_colors::colors::xterm::VistaBlue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Bermuda.html\" title=\"struct owo_colors::colors::xterm::Bermuda\">Bermuda</a>","synthetic":true,"types":["owo_colors::colors::xterm::Bermuda"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DarkAnakiwaBlue.html\" title=\"struct owo_colors::colors::xterm::DarkAnakiwaBlue\">DarkAnakiwaBlue</a>","synthetic":true,"types":["owo_colors::colors::xterm::DarkAnakiwaBlue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.ChartreuseGreen.html\" title=\"struct owo_colors::colors::xterm::ChartreuseGreen\">ChartreuseGreen</a>","synthetic":true,"types":["owo_colors::colors::xterm::ChartreuseGreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.LightScreaminGreen.html\" title=\"struct owo_colors::colors::xterm::LightScreaminGreen\">LightScreaminGreen</a>","synthetic":true,"types":["owo_colors::colors::xterm::LightScreaminGreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DarkMintGreen.html\" title=\"struct owo_colors::colors::xterm::DarkMintGreen\">DarkMintGreen</a>","synthetic":true,"types":["owo_colors::colors::xterm::DarkMintGreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.MintGreen.html\" title=\"struct owo_colors::colors::xterm::MintGreen\">MintGreen</a>","synthetic":true,"types":["owo_colors::colors::xterm::MintGreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.LighterAquamarine.html\" title=\"struct owo_colors::colors::xterm::LighterAquamarine\">LighterAquamarine</a>","synthetic":true,"types":["owo_colors::colors::xterm::LighterAquamarine"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.AnakiwaBlue.html\" title=\"struct owo_colors::colors::xterm::AnakiwaBlue\">AnakiwaBlue</a>","synthetic":true,"types":["owo_colors::colors::xterm::AnakiwaBlue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.BrightRed.html\" title=\"struct owo_colors::colors::xterm::BrightRed\">BrightRed</a>","synthetic":true,"types":["owo_colors::colors::xterm::BrightRed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DarkFlirt.html\" title=\"struct owo_colors::colors::xterm::DarkFlirt\">DarkFlirt</a>","synthetic":true,"types":["owo_colors::colors::xterm::DarkFlirt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Flirt.html\" title=\"struct owo_colors::colors::xterm::Flirt\">Flirt</a>","synthetic":true,"types":["owo_colors::colors::xterm::Flirt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.LightFlirt.html\" title=\"struct owo_colors::colors::xterm::LightFlirt\">LightFlirt</a>","synthetic":true,"types":["owo_colors::colors::xterm::LightFlirt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DarkViolet.html\" title=\"struct owo_colors::colors::xterm::DarkViolet\">DarkViolet</a>","synthetic":true,"types":["owo_colors::colors::xterm::DarkViolet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.BrightElectricViolet.html\" title=\"struct owo_colors::colors::xterm::BrightElectricViolet\">BrightElectricViolet</a>","synthetic":true,"types":["owo_colors::colors::xterm::BrightElectricViolet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.RoseofSharonOrange.html\" title=\"struct owo_colors::colors::xterm::RoseofSharonOrange\">RoseofSharonOrange</a>","synthetic":true,"types":["owo_colors::colors::xterm::RoseofSharonOrange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.MatrixPink.html\" title=\"struct owo_colors::colors::xterm::MatrixPink\">MatrixPink</a>","synthetic":true,"types":["owo_colors::colors::xterm::MatrixPink"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.TapestryPink.html\" title=\"struct owo_colors::colors::xterm::TapestryPink\">TapestryPink</a>","synthetic":true,"types":["owo_colors::colors::xterm::TapestryPink"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.FuchsiaPink.html\" title=\"struct owo_colors::colors::xterm::FuchsiaPink\">FuchsiaPink</a>","synthetic":true,"types":["owo_colors::colors::xterm::FuchsiaPink"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.MediumPurple.html\" title=\"struct owo_colors::colors::xterm::MediumPurple\">MediumPurple</a>","synthetic":true,"types":["owo_colors::colors::xterm::MediumPurple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Heliotrope.html\" title=\"struct owo_colors::colors::xterm::Heliotrope\">Heliotrope</a>","synthetic":true,"types":["owo_colors::colors::xterm::Heliotrope"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.PirateGold.html\" title=\"struct owo_colors::colors::xterm::PirateGold\">PirateGold</a>","synthetic":true,"types":["owo_colors::colors::xterm::PirateGold"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.MuesliOrange.html\" title=\"struct owo_colors::colors::xterm::MuesliOrange\">MuesliOrange</a>","synthetic":true,"types":["owo_colors::colors::xterm::MuesliOrange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.PharlapPink.html\" title=\"struct owo_colors::colors::xterm::PharlapPink\">PharlapPink</a>","synthetic":true,"types":["owo_colors::colors::xterm::PharlapPink"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Bouquet.html\" title=\"struct owo_colors::colors::xterm::Bouquet\">Bouquet</a>","synthetic":true,"types":["owo_colors::colors::xterm::Bouquet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Lavender.html\" title=\"struct owo_colors::colors::xterm::Lavender\">Lavender</a>","synthetic":true,"types":["owo_colors::colors::xterm::Lavender"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.LightHeliotrope.html\" title=\"struct owo_colors::colors::xterm::LightHeliotrope\">LightHeliotrope</a>","synthetic":true,"types":["owo_colors::colors::xterm::LightHeliotrope"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.BuddhaGold.html\" title=\"struct owo_colors::colors::xterm::BuddhaGold\">BuddhaGold</a>","synthetic":true,"types":["owo_colors::colors::xterm::BuddhaGold"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.OliveGreen.html\" title=\"struct owo_colors::colors::xterm::OliveGreen\">OliveGreen</a>","synthetic":true,"types":["owo_colors::colors::xterm::OliveGreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.HillaryOlive.html\" title=\"struct owo_colors::colors::xterm::HillaryOlive\">HillaryOlive</a>","synthetic":true,"types":["owo_colors::colors::xterm::HillaryOlive"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.SilverChalice.html\" title=\"struct owo_colors::colors::xterm::SilverChalice\">SilverChalice</a>","synthetic":true,"types":["owo_colors::colors::xterm::SilverChalice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.WistfulLilac.html\" title=\"struct owo_colors::colors::xterm::WistfulLilac\">WistfulLilac</a>","synthetic":true,"types":["owo_colors::colors::xterm::WistfulLilac"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.MelroseLilac.html\" title=\"struct owo_colors::colors::xterm::MelroseLilac\">MelroseLilac</a>","synthetic":true,"types":["owo_colors::colors::xterm::MelroseLilac"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.RioGrandeGreen.html\" title=\"struct owo_colors::colors::xterm::RioGrandeGreen\">RioGrandeGreen</a>","synthetic":true,"types":["owo_colors::colors::xterm::RioGrandeGreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.ConiferGreen.html\" title=\"struct owo_colors::colors::xterm::ConiferGreen\">ConiferGreen</a>","synthetic":true,"types":["owo_colors::colors::xterm::ConiferGreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Feijoa.html\" title=\"struct owo_colors::colors::xterm::Feijoa\">Feijoa</a>","synthetic":true,"types":["owo_colors::colors::xterm::Feijoa"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.PixieGreen.html\" title=\"struct owo_colors::colors::xterm::PixieGreen\">PixieGreen</a>","synthetic":true,"types":["owo_colors::colors::xterm::PixieGreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.JungleMist.html\" title=\"struct owo_colors::colors::xterm::JungleMist\">JungleMist</a>","synthetic":true,"types":["owo_colors::colors::xterm::JungleMist"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.LightAnakiwaBlue.html\" title=\"struct owo_colors::colors::xterm::LightAnakiwaBlue\">LightAnakiwaBlue</a>","synthetic":true,"types":["owo_colors::colors::xterm::LightAnakiwaBlue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Lime.html\" title=\"struct owo_colors::colors::xterm::Lime\">Lime</a>","synthetic":true,"types":["owo_colors::colors::xterm::Lime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.GreenYellow.html\" title=\"struct owo_colors::colors::xterm::GreenYellow\">GreenYellow</a>","synthetic":true,"types":["owo_colors::colors::xterm::GreenYellow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.LightMintGreen.html\" title=\"struct owo_colors::colors::xterm::LightMintGreen\">LightMintGreen</a>","synthetic":true,"types":["owo_colors::colors::xterm::LightMintGreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Celadon.html\" title=\"struct owo_colors::colors::xterm::Celadon\">Celadon</a>","synthetic":true,"types":["owo_colors::colors::xterm::Celadon"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.AeroBlue.html\" title=\"struct owo_colors::colors::xterm::AeroBlue\">AeroBlue</a>","synthetic":true,"types":["owo_colors::colors::xterm::AeroBlue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.FrenchPassLightBlue.html\" title=\"struct owo_colors::colors::xterm::FrenchPassLightBlue\">FrenchPassLightBlue</a>","synthetic":true,"types":["owo_colors::colors::xterm::FrenchPassLightBlue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.GuardsmanRed.html\" title=\"struct owo_colors::colors::xterm::GuardsmanRed\">GuardsmanRed</a>","synthetic":true,"types":["owo_colors::colors::xterm::GuardsmanRed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.RazzmatazzCerise.html\" title=\"struct owo_colors::colors::xterm::RazzmatazzCerise\">RazzmatazzCerise</a>","synthetic":true,"types":["owo_colors::colors::xterm::RazzmatazzCerise"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.MediumVioletRed.html\" title=\"struct owo_colors::colors::xterm::MediumVioletRed\">MediumVioletRed</a>","synthetic":true,"types":["owo_colors::colors::xterm::MediumVioletRed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.HollywoodCerise.html\" title=\"struct owo_colors::colors::xterm::HollywoodCerise\">HollywoodCerise</a>","synthetic":true,"types":["owo_colors::colors::xterm::HollywoodCerise"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DarkPurplePizzazz.html\" title=\"struct owo_colors::colors::xterm::DarkPurplePizzazz\">DarkPurplePizzazz</a>","synthetic":true,"types":["owo_colors::colors::xterm::DarkPurplePizzazz"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.BrighterElectricViolet.html\" title=\"struct owo_colors::colors::xterm::BrighterElectricViolet\">BrighterElectricViolet</a>","synthetic":true,"types":["owo_colors::colors::xterm::BrighterElectricViolet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.TennOrange.html\" title=\"struct owo_colors::colors::xterm::TennOrange\">TennOrange</a>","synthetic":true,"types":["owo_colors::colors::xterm::TennOrange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.RomanOrange.html\" title=\"struct owo_colors::colors::xterm::RomanOrange\">RomanOrange</a>","synthetic":true,"types":["owo_colors::colors::xterm::RomanOrange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.CranberryPink.html\" title=\"struct owo_colors::colors::xterm::CranberryPink\">CranberryPink</a>","synthetic":true,"types":["owo_colors::colors::xterm::CranberryPink"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.HopbushPink.html\" title=\"struct owo_colors::colors::xterm::HopbushPink\">HopbushPink</a>","synthetic":true,"types":["owo_colors::colors::xterm::HopbushPink"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Orchid.html\" title=\"struct owo_colors::colors::xterm::Orchid\">Orchid</a>","synthetic":true,"types":["owo_colors::colors::xterm::Orchid"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.LighterHeliotrope.html\" title=\"struct owo_colors::colors::xterm::LighterHeliotrope\">LighterHeliotrope</a>","synthetic":true,"types":["owo_colors::colors::xterm::LighterHeliotrope"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.MangoTango.html\" title=\"struct owo_colors::colors::xterm::MangoTango\">MangoTango</a>","synthetic":true,"types":["owo_colors::colors::xterm::MangoTango"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Copperfield.html\" title=\"struct owo_colors::colors::xterm::Copperfield\">Copperfield</a>","synthetic":true,"types":["owo_colors::colors::xterm::Copperfield"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.SeaPink.html\" title=\"struct owo_colors::colors::xterm::SeaPink\">SeaPink</a>","synthetic":true,"types":["owo_colors::colors::xterm::SeaPink"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.CanCanPink.html\" title=\"struct owo_colors::colors::xterm::CanCanPink\">CanCanPink</a>","synthetic":true,"types":["owo_colors::colors::xterm::CanCanPink"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.LightOrchid.html\" title=\"struct owo_colors::colors::xterm::LightOrchid\">LightOrchid</a>","synthetic":true,"types":["owo_colors::colors::xterm::LightOrchid"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.BrightHeliotrope.html\" title=\"struct owo_colors::colors::xterm::BrightHeliotrope\">BrightHeliotrope</a>","synthetic":true,"types":["owo_colors::colors::xterm::BrightHeliotrope"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DarkCorn.html\" title=\"struct owo_colors::colors::xterm::DarkCorn\">DarkCorn</a>","synthetic":true,"types":["owo_colors::colors::xterm::DarkCorn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DarkTachaOrange.html\" title=\"struct owo_colors::colors::xterm::DarkTachaOrange\">DarkTachaOrange</a>","synthetic":true,"types":["owo_colors::colors::xterm::DarkTachaOrange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.TanBeige.html\" title=\"struct owo_colors::colors::xterm::TanBeige\">TanBeige</a>","synthetic":true,"types":["owo_colors::colors::xterm::TanBeige"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.ClamShell.html\" title=\"struct owo_colors::colors::xterm::ClamShell\">ClamShell</a>","synthetic":true,"types":["owo_colors::colors::xterm::ClamShell"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.ThistlePink.html\" title=\"struct owo_colors::colors::xterm::ThistlePink\">ThistlePink</a>","synthetic":true,"types":["owo_colors::colors::xterm::ThistlePink"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Mauve.html\" title=\"struct owo_colors::colors::xterm::Mauve\">Mauve</a>","synthetic":true,"types":["owo_colors::colors::xterm::Mauve"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Corn.html\" title=\"struct owo_colors::colors::xterm::Corn\">Corn</a>","synthetic":true,"types":["owo_colors::colors::xterm::Corn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.TachaOrange.html\" title=\"struct owo_colors::colors::xterm::TachaOrange\">TachaOrange</a>","synthetic":true,"types":["owo_colors::colors::xterm::TachaOrange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DecoOrange.html\" title=\"struct owo_colors::colors::xterm::DecoOrange\">DecoOrange</a>","synthetic":true,"types":["owo_colors::colors::xterm::DecoOrange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.PaleGoldenrod.html\" title=\"struct owo_colors::colors::xterm::PaleGoldenrod\">PaleGoldenrod</a>","synthetic":true,"types":["owo_colors::colors::xterm::PaleGoldenrod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.AltoBeige.html\" title=\"struct owo_colors::colors::xterm::AltoBeige\">AltoBeige</a>","synthetic":true,"types":["owo_colors::colors::xterm::AltoBeige"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.FogPink.html\" title=\"struct owo_colors::colors::xterm::FogPink\">FogPink</a>","synthetic":true,"types":["owo_colors::colors::xterm::FogPink"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.ChartreuseYellow.html\" title=\"struct owo_colors::colors::xterm::ChartreuseYellow\">ChartreuseYellow</a>","synthetic":true,"types":["owo_colors::colors::xterm::ChartreuseYellow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Canary.html\" title=\"struct owo_colors::colors::xterm::Canary\">Canary</a>","synthetic":true,"types":["owo_colors::colors::xterm::Canary"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Honeysuckle.html\" title=\"struct owo_colors::colors::xterm::Honeysuckle\">Honeysuckle</a>","synthetic":true,"types":["owo_colors::colors::xterm::Honeysuckle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.ReefPaleYellow.html\" title=\"struct owo_colors::colors::xterm::ReefPaleYellow\">ReefPaleYellow</a>","synthetic":true,"types":["owo_colors::colors::xterm::ReefPaleYellow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.SnowyMint.html\" title=\"struct owo_colors::colors::xterm::SnowyMint\">SnowyMint</a>","synthetic":true,"types":["owo_colors::colors::xterm::SnowyMint"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.OysterBay.html\" title=\"struct owo_colors::colors::xterm::OysterBay\">OysterBay</a>","synthetic":true,"types":["owo_colors::colors::xterm::OysterBay"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Red.html\" title=\"struct owo_colors::colors::xterm::Red\">Red</a>","synthetic":true,"types":["owo_colors::colors::xterm::Red"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DarkRose.html\" title=\"struct owo_colors::colors::xterm::DarkRose\">DarkRose</a>","synthetic":true,"types":["owo_colors::colors::xterm::DarkRose"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Rose.html\" title=\"struct owo_colors::colors::xterm::Rose\">Rose</a>","synthetic":true,"types":["owo_colors::colors::xterm::Rose"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.LightHollywoodCerise.html\" title=\"struct owo_colors::colors::xterm::LightHollywoodCerise\">LightHollywoodCerise</a>","synthetic":true,"types":["owo_colors::colors::xterm::LightHollywoodCerise"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.PurplePizzazz.html\" title=\"struct owo_colors::colors::xterm::PurplePizzazz\">PurplePizzazz</a>","synthetic":true,"types":["owo_colors::colors::xterm::PurplePizzazz"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Fuchsia.html\" title=\"struct owo_colors::colors::xterm::Fuchsia\">Fuchsia</a>","synthetic":true,"types":["owo_colors::colors::xterm::Fuchsia"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.BlazeOrange.html\" title=\"struct owo_colors::colors::xterm::BlazeOrange\">BlazeOrange</a>","synthetic":true,"types":["owo_colors::colors::xterm::BlazeOrange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.BittersweetOrange.html\" title=\"struct owo_colors::colors::xterm::BittersweetOrange\">BittersweetOrange</a>","synthetic":true,"types":["owo_colors::colors::xterm::BittersweetOrange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.WildWatermelon.html\" title=\"struct owo_colors::colors::xterm::WildWatermelon\">WildWatermelon</a>","synthetic":true,"types":["owo_colors::colors::xterm::WildWatermelon"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DarkHotPink.html\" title=\"struct owo_colors::colors::xterm::DarkHotPink\">DarkHotPink</a>","synthetic":true,"types":["owo_colors::colors::xterm::DarkHotPink"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.HotPink.html\" title=\"struct owo_colors::colors::xterm::HotPink\">HotPink</a>","synthetic":true,"types":["owo_colors::colors::xterm::HotPink"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.PinkFlamingo.html\" title=\"struct owo_colors::colors::xterm::PinkFlamingo\">PinkFlamingo</a>","synthetic":true,"types":["owo_colors::colors::xterm::PinkFlamingo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.FlushOrange.html\" title=\"struct owo_colors::colors::xterm::FlushOrange\">FlushOrange</a>","synthetic":true,"types":["owo_colors::colors::xterm::FlushOrange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Salmon.html\" title=\"struct owo_colors::colors::xterm::Salmon\">Salmon</a>","synthetic":true,"types":["owo_colors::colors::xterm::Salmon"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.VividTangerine.html\" title=\"struct owo_colors::colors::xterm::VividTangerine\">VividTangerine</a>","synthetic":true,"types":["owo_colors::colors::xterm::VividTangerine"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.PinkSalmon.html\" title=\"struct owo_colors::colors::xterm::PinkSalmon\">PinkSalmon</a>","synthetic":true,"types":["owo_colors::colors::xterm::PinkSalmon"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DarkLavenderRose.html\" title=\"struct owo_colors::colors::xterm::DarkLavenderRose\">DarkLavenderRose</a>","synthetic":true,"types":["owo_colors::colors::xterm::DarkLavenderRose"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.BlushPink.html\" title=\"struct owo_colors::colors::xterm::BlushPink\">BlushPink</a>","synthetic":true,"types":["owo_colors::colors::xterm::BlushPink"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.YellowSea.html\" title=\"struct owo_colors::colors::xterm::YellowSea\">YellowSea</a>","synthetic":true,"types":["owo_colors::colors::xterm::YellowSea"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.TexasRose.html\" title=\"struct owo_colors::colors::xterm::TexasRose\">TexasRose</a>","synthetic":true,"types":["owo_colors::colors::xterm::TexasRose"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Tacao.html\" title=\"struct owo_colors::colors::xterm::Tacao\">Tacao</a>","synthetic":true,"types":["owo_colors::colors::xterm::Tacao"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Sundown.html\" title=\"struct owo_colors::colors::xterm::Sundown\">Sundown</a>","synthetic":true,"types":["owo_colors::colors::xterm::Sundown"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.CottonCandy.html\" title=\"struct owo_colors::colors::xterm::CottonCandy\">CottonCandy</a>","synthetic":true,"types":["owo_colors::colors::xterm::CottonCandy"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.LavenderRose.html\" title=\"struct owo_colors::colors::xterm::LavenderRose\">LavenderRose</a>","synthetic":true,"types":["owo_colors::colors::xterm::LavenderRose"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Gold.html\" title=\"struct owo_colors::colors::xterm::Gold\">Gold</a>","synthetic":true,"types":["owo_colors::colors::xterm::Gold"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Dandelion.html\" title=\"struct owo_colors::colors::xterm::Dandelion\">Dandelion</a>","synthetic":true,"types":["owo_colors::colors::xterm::Dandelion"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.GrandisCaramel.html\" title=\"struct owo_colors::colors::xterm::GrandisCaramel\">GrandisCaramel</a>","synthetic":true,"types":["owo_colors::colors::xterm::GrandisCaramel"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Caramel.html\" title=\"struct owo_colors::colors::xterm::Caramel\">Caramel</a>","synthetic":true,"types":["owo_colors::colors::xterm::Caramel"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.CosmosSalmon.html\" title=\"struct owo_colors::colors::xterm::CosmosSalmon\">CosmosSalmon</a>","synthetic":true,"types":["owo_colors::colors::xterm::CosmosSalmon"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.PinkLace.html\" title=\"struct owo_colors::colors::xterm::PinkLace\">PinkLace</a>","synthetic":true,"types":["owo_colors::colors::xterm::PinkLace"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Yellow.html\" title=\"struct owo_colors::colors::xterm::Yellow\">Yellow</a>","synthetic":true,"types":["owo_colors::colors::xterm::Yellow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.LaserLemon.html\" title=\"struct owo_colors::colors::xterm::LaserLemon\">LaserLemon</a>","synthetic":true,"types":["owo_colors::colors::xterm::LaserLemon"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DollyYellow.html\" title=\"struct owo_colors::colors::xterm::DollyYellow\">DollyYellow</a>","synthetic":true,"types":["owo_colors::colors::xterm::DollyYellow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.PortafinoYellow.html\" title=\"struct owo_colors::colors::xterm::PortafinoYellow\">PortafinoYellow</a>","synthetic":true,"types":["owo_colors::colors::xterm::PortafinoYellow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Cumulus.html\" title=\"struct owo_colors::colors::xterm::Cumulus\">Cumulus</a>","synthetic":true,"types":["owo_colors::colors::xterm::Cumulus"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.White.html\" title=\"struct owo_colors::colors::xterm::White\">White</a>","synthetic":true,"types":["owo_colors::colors::xterm::White"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DarkCodGray.html\" title=\"struct owo_colors::colors::xterm::DarkCodGray\">DarkCodGray</a>","synthetic":true,"types":["owo_colors::colors::xterm::DarkCodGray"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.CodGray.html\" title=\"struct owo_colors::colors::xterm::CodGray\">CodGray</a>","synthetic":true,"types":["owo_colors::colors::xterm::CodGray"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.LightCodGray.html\" title=\"struct owo_colors::colors::xterm::LightCodGray\">LightCodGray</a>","synthetic":true,"types":["owo_colors::colors::xterm::LightCodGray"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DarkMineShaft.html\" title=\"struct owo_colors::colors::xterm::DarkMineShaft\">DarkMineShaft</a>","synthetic":true,"types":["owo_colors::colors::xterm::DarkMineShaft"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.MineShaft.html\" title=\"struct owo_colors::colors::xterm::MineShaft\">MineShaft</a>","synthetic":true,"types":["owo_colors::colors::xterm::MineShaft"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.LightMineShaft.html\" title=\"struct owo_colors::colors::xterm::LightMineShaft\">LightMineShaft</a>","synthetic":true,"types":["owo_colors::colors::xterm::LightMineShaft"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DarkTundora.html\" title=\"struct owo_colors::colors::xterm::DarkTundora\">DarkTundora</a>","synthetic":true,"types":["owo_colors::colors::xterm::DarkTundora"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Tundora.html\" title=\"struct owo_colors::colors::xterm::Tundora\">Tundora</a>","synthetic":true,"types":["owo_colors::colors::xterm::Tundora"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.ScorpionGray.html\" title=\"struct owo_colors::colors::xterm::ScorpionGray\">ScorpionGray</a>","synthetic":true,"types":["owo_colors::colors::xterm::ScorpionGray"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DarkDoveGray.html\" title=\"struct owo_colors::colors::xterm::DarkDoveGray\">DarkDoveGray</a>","synthetic":true,"types":["owo_colors::colors::xterm::DarkDoveGray"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DoveGray.html\" title=\"struct owo_colors::colors::xterm::DoveGray\">DoveGray</a>","synthetic":true,"types":["owo_colors::colors::xterm::DoveGray"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Boulder.html\" title=\"struct owo_colors::colors::xterm::Boulder\">Boulder</a>","synthetic":true,"types":["owo_colors::colors::xterm::Boulder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Gray.html\" title=\"struct owo_colors::colors::xterm::Gray\">Gray</a>","synthetic":true,"types":["owo_colors::colors::xterm::Gray"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.LightGray.html\" title=\"struct owo_colors::colors::xterm::LightGray\">LightGray</a>","synthetic":true,"types":["owo_colors::colors::xterm::LightGray"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DustyGray.html\" title=\"struct owo_colors::colors::xterm::DustyGray\">DustyGray</a>","synthetic":true,"types":["owo_colors::colors::xterm::DustyGray"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.NobelGray.html\" title=\"struct owo_colors::colors::xterm::NobelGray\">NobelGray</a>","synthetic":true,"types":["owo_colors::colors::xterm::NobelGray"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DarkSilverChalice.html\" title=\"struct owo_colors::colors::xterm::DarkSilverChalice\">DarkSilverChalice</a>","synthetic":true,"types":["owo_colors::colors::xterm::DarkSilverChalice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.LightSilverChalice.html\" title=\"struct owo_colors::colors::xterm::LightSilverChalice\">LightSilverChalice</a>","synthetic":true,"types":["owo_colors::colors::xterm::LightSilverChalice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DarkSilver.html\" title=\"struct owo_colors::colors::xterm::DarkSilver\">DarkSilver</a>","synthetic":true,"types":["owo_colors::colors::xterm::DarkSilver"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Silver.html\" title=\"struct owo_colors::colors::xterm::Silver\">Silver</a>","synthetic":true,"types":["owo_colors::colors::xterm::Silver"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.DarkAlto.html\" title=\"struct owo_colors::colors::xterm::DarkAlto\">DarkAlto</a>","synthetic":true,"types":["owo_colors::colors::xterm::DarkAlto"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Alto.html\" title=\"struct owo_colors::colors::xterm::Alto\">Alto</a>","synthetic":true,"types":["owo_colors::colors::xterm::Alto"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.Mercury.html\" title=\"struct owo_colors::colors::xterm::Mercury\">Mercury</a>","synthetic":true,"types":["owo_colors::colors::xterm::Mercury"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/xterm/struct.GalleryGray.html\" title=\"struct owo_colors::colors::xterm::GalleryGray\">GalleryGray</a>","synthetic":true,"types":["owo_colors::colors::xterm::GalleryGray"]},{"text":"impl&lt;const R:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.57.0/core/primitive.u8.html\">u8</a>, const G:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.57.0/core/primitive.u8.html\">u8</a>, const B:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.57.0/core/primitive.u8.html\">u8</a>&gt; Freeze for <a class=\"struct\" href=\"owo_colors/colors/struct.CustomColor.html\" title=\"struct owo_colors::colors::CustomColor\">CustomColor</a>&lt;R, G, B&gt;","synthetic":true,"types":["owo_colors::colors::custom::CustomColor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/struct.Rgb.html\" title=\"struct owo_colors::Rgb\">Rgb</a>","synthetic":true,"types":["owo_colors::colors::dynamic::Rgb"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/struct.Black.html\" title=\"struct owo_colors::colors::Black\">Black</a>","synthetic":true,"types":["owo_colors::colors::Black"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/struct.Red.html\" title=\"struct owo_colors::colors::Red\">Red</a>","synthetic":true,"types":["owo_colors::colors::Red"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/struct.Green.html\" title=\"struct owo_colors::colors::Green\">Green</a>","synthetic":true,"types":["owo_colors::colors::Green"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/struct.Yellow.html\" title=\"struct owo_colors::colors::Yellow\">Yellow</a>","synthetic":true,"types":["owo_colors::colors::Yellow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/struct.Blue.html\" title=\"struct owo_colors::colors::Blue\">Blue</a>","synthetic":true,"types":["owo_colors::colors::Blue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/struct.Magenta.html\" title=\"struct owo_colors::colors::Magenta\">Magenta</a>","synthetic":true,"types":["owo_colors::colors::Magenta"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/struct.Cyan.html\" title=\"struct owo_colors::colors::Cyan\">Cyan</a>","synthetic":true,"types":["owo_colors::colors::Cyan"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/struct.White.html\" title=\"struct owo_colors::colors::White\">White</a>","synthetic":true,"types":["owo_colors::colors::White"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/struct.Default.html\" title=\"struct owo_colors::colors::Default\">Default</a>","synthetic":true,"types":["owo_colors::colors::Default"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/struct.BrightBlack.html\" title=\"struct owo_colors::colors::BrightBlack\">BrightBlack</a>","synthetic":true,"types":["owo_colors::colors::BrightBlack"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/struct.BrightRed.html\" title=\"struct owo_colors::colors::BrightRed\">BrightRed</a>","synthetic":true,"types":["owo_colors::colors::BrightRed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/struct.BrightGreen.html\" title=\"struct owo_colors::colors::BrightGreen\">BrightGreen</a>","synthetic":true,"types":["owo_colors::colors::BrightGreen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/struct.BrightYellow.html\" title=\"struct owo_colors::colors::BrightYellow\">BrightYellow</a>","synthetic":true,"types":["owo_colors::colors::BrightYellow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/struct.BrightBlue.html\" title=\"struct owo_colors::colors::BrightBlue\">BrightBlue</a>","synthetic":true,"types":["owo_colors::colors::BrightBlue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/struct.BrightMagenta.html\" title=\"struct owo_colors::colors::BrightMagenta\">BrightMagenta</a>","synthetic":true,"types":["owo_colors::colors::BrightMagenta"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/struct.BrightCyan.html\" title=\"struct owo_colors::colors::BrightCyan\">BrightCyan</a>","synthetic":true,"types":["owo_colors::colors::BrightCyan"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/colors/struct.BrightWhite.html\" title=\"struct owo_colors::colors::BrightWhite\">BrightWhite</a>","synthetic":true,"types":["owo_colors::colors::BrightWhite"]},{"text":"impl&lt;'a, Fg, Bg, T&gt; Freeze for <a class=\"struct\" href=\"owo_colors/struct.ComboColorDisplay.html\" title=\"struct owo_colors::ComboColorDisplay\">ComboColorDisplay</a>&lt;'a, Fg, Bg, T&gt;","synthetic":true,"types":["owo_colors::combo::ComboColorDisplay"]},{"text":"impl Freeze for <a class=\"enum\" href=\"owo_colors/enum.DynColors.html\" title=\"enum owo_colors::DynColors\">DynColors</a>","synthetic":true,"types":["owo_colors::dyn_colors::DynColors"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/struct.ParseColorError.html\" title=\"struct owo_colors::ParseColorError\">ParseColorError</a>","synthetic":true,"types":["owo_colors::dyn_colors::ParseColorError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"owo_colors/enum.Effect.html\" title=\"enum owo_colors::Effect\">Effect</a>","synthetic":true,"types":["owo_colors::dyn_styles::Effect"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"owo_colors/struct.Styled.html\" title=\"struct owo_colors::Styled\">Styled</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["owo_colors::dyn_styles::Styled"]},{"text":"impl Freeze for <a class=\"struct\" href=\"owo_colors/struct.Style.html\" title=\"struct owo_colors::Style\">Style</a>","synthetic":true,"types":["owo_colors::dyn_styles::Style"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"owo_colors/struct.StyledList.html\" title=\"struct owo_colors::StyledList\">StyledList</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["owo_colors::styled_list::StyledList"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"owo_colors/styles/struct.BoldDisplay.html\" title=\"struct owo_colors::styles::BoldDisplay\">BoldDisplay</a>&lt;'a, T&gt;","synthetic":true,"types":["owo_colors::styles::BoldDisplay"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"owo_colors/styles/struct.DimDisplay.html\" title=\"struct owo_colors::styles::DimDisplay\">DimDisplay</a>&lt;'a, T&gt;","synthetic":true,"types":["owo_colors::styles::DimDisplay"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"owo_colors/styles/struct.ItalicDisplay.html\" title=\"struct owo_colors::styles::ItalicDisplay\">ItalicDisplay</a>&lt;'a, T&gt;","synthetic":true,"types":["owo_colors::styles::ItalicDisplay"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"owo_colors/styles/struct.UnderlineDisplay.html\" title=\"struct owo_colors::styles::UnderlineDisplay\">UnderlineDisplay</a>&lt;'a, T&gt;","synthetic":true,"types":["owo_colors::styles::UnderlineDisplay"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"owo_colors/styles/struct.BlinkDisplay.html\" title=\"struct owo_colors::styles::BlinkDisplay\">BlinkDisplay</a>&lt;'a, T&gt;","synthetic":true,"types":["owo_colors::styles::BlinkDisplay"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"owo_colors/styles/struct.BlinkFastDisplay.html\" title=\"struct owo_colors::styles::BlinkFastDisplay\">BlinkFastDisplay</a>&lt;'a, T&gt;","synthetic":true,"types":["owo_colors::styles::BlinkFastDisplay"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"owo_colors/styles/struct.ReversedDisplay.html\" title=\"struct owo_colors::styles::ReversedDisplay\">ReversedDisplay</a>&lt;'a, T&gt;","synthetic":true,"types":["owo_colors::styles::ReversedDisplay"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"owo_colors/styles/struct.HiddenDisplay.html\" title=\"struct owo_colors::styles::HiddenDisplay\">HiddenDisplay</a>&lt;'a, T&gt;","synthetic":true,"types":["owo_colors::styles::HiddenDisplay"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"owo_colors/styles/struct.StrikeThroughDisplay.html\" title=\"struct owo_colors::styles::StrikeThroughDisplay\">StrikeThroughDisplay</a>&lt;'a, T&gt;","synthetic":true,"types":["owo_colors::styles::StrikeThroughDisplay"]},{"text":"impl&lt;'a, C, T&gt; Freeze for <a class=\"struct\" href=\"owo_colors/struct.FgColorDisplay.html\" title=\"struct owo_colors::FgColorDisplay\">FgColorDisplay</a>&lt;'a, C, T&gt;","synthetic":true,"types":["owo_colors::FgColorDisplay"]},{"text":"impl&lt;'a, C, T&gt; Freeze for <a class=\"struct\" href=\"owo_colors/struct.BgColorDisplay.html\" title=\"struct owo_colors::BgColorDisplay\">BgColorDisplay</a>&lt;'a, C, T&gt;","synthetic":true,"types":["owo_colors::BgColorDisplay"]},{"text":"impl&lt;'a, Color, T&gt; Freeze for <a class=\"struct\" href=\"owo_colors/struct.FgDynColorDisplay.html\" title=\"struct owo_colors::FgDynColorDisplay\">FgDynColorDisplay</a>&lt;'a, Color, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Color: Freeze,&nbsp;</span>","synthetic":true,"types":["owo_colors::FgDynColorDisplay"]},{"text":"impl&lt;'a, Color, T&gt; Freeze for <a class=\"struct\" href=\"owo_colors/struct.BgDynColorDisplay.html\" title=\"struct owo_colors::BgDynColorDisplay\">BgDynColorDisplay</a>&lt;'a, Color, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Color: Freeze,&nbsp;</span>","synthetic":true,"types":["owo_colors::BgDynColorDisplay"]}];
implementors["parking_lot"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"parking_lot/struct.WaitTimeoutResult.html\" title=\"struct parking_lot::WaitTimeoutResult\">WaitTimeoutResult</a>","synthetic":true,"types":["parking_lot::condvar::WaitTimeoutResult"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"parking_lot/struct.Condvar.html\" title=\"struct parking_lot::Condvar\">Condvar</a>","synthetic":true,"types":["parking_lot::condvar::Condvar"]},{"text":"impl Freeze for <a class=\"enum\" href=\"parking_lot/enum.OnceState.html\" title=\"enum parking_lot::OnceState\">OnceState</a>","synthetic":true,"types":["parking_lot::once::OnceState"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"parking_lot/struct.Once.html\" title=\"struct parking_lot::Once\">Once</a>","synthetic":true,"types":["parking_lot::once::Once"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"parking_lot/struct.RawFairMutex.html\" title=\"struct parking_lot::RawFairMutex\">RawFairMutex</a>","synthetic":true,"types":["parking_lot::raw_fair_mutex::RawFairMutex"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"parking_lot/struct.RawMutex.html\" title=\"struct parking_lot::RawMutex\">RawMutex</a>","synthetic":true,"types":["parking_lot::raw_mutex::RawMutex"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"parking_lot/struct.RawRwLock.html\" title=\"struct parking_lot::RawRwLock\">RawRwLock</a>","synthetic":true,"types":["parking_lot::raw_rwlock::RawRwLock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"parking_lot/struct.RawThreadId.html\" title=\"struct parking_lot::RawThreadId\">RawThreadId</a>","synthetic":true,"types":["parking_lot::remutex::RawThreadId"]}];
implementors["parking_lot_core"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"parking_lot_core/enum.ParkResult.html\" title=\"enum parking_lot_core::ParkResult\">ParkResult</a>","synthetic":true,"types":["parking_lot_core::parking_lot::ParkResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"parking_lot_core/struct.UnparkResult.html\" title=\"struct parking_lot_core::UnparkResult\">UnparkResult</a>","synthetic":true,"types":["parking_lot_core::parking_lot::UnparkResult"]},{"text":"impl Freeze for <a class=\"enum\" href=\"parking_lot_core/enum.RequeueOp.html\" title=\"enum parking_lot_core::RequeueOp\">RequeueOp</a>","synthetic":true,"types":["parking_lot_core::parking_lot::RequeueOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"parking_lot_core/enum.FilterOp.html\" title=\"enum parking_lot_core::FilterOp\">FilterOp</a>","synthetic":true,"types":["parking_lot_core::parking_lot::FilterOp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"parking_lot_core/struct.UnparkToken.html\" title=\"struct parking_lot_core::UnparkToken\">UnparkToken</a>","synthetic":true,"types":["parking_lot_core::parking_lot::UnparkToken"]},{"text":"impl Freeze for <a class=\"struct\" href=\"parking_lot_core/struct.ParkToken.html\" title=\"struct parking_lot_core::ParkToken\">ParkToken</a>","synthetic":true,"types":["parking_lot_core::parking_lot::ParkToken"]},{"text":"impl Freeze for <a class=\"struct\" href=\"parking_lot_core/struct.SpinWait.html\" title=\"struct parking_lot_core::SpinWait\">SpinWait</a>","synthetic":true,"types":["parking_lot_core::spinwait::SpinWait"]}];
implementors["petgraph"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.Time.html\" title=\"struct petgraph::visit::Time\">Time</a>","synthetic":true,"types":["petgraph::visit::dfsvisit::Time"]},{"text":"impl&lt;N&gt; Freeze for <a class=\"enum\" href=\"petgraph/visit/enum.DfsEvent.html\" title=\"enum petgraph::visit::DfsEvent\">DfsEvent</a>&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::dfsvisit::DfsEvent"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"enum\" href=\"petgraph/visit/enum.Control.html\" title=\"enum petgraph::visit::Control\">Control</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::dfsvisit::Control"]},{"text":"impl&lt;N, VM&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.Dfs.html\" title=\"struct petgraph::visit::Dfs\">Dfs</a>&lt;N, VM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;VM: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::traversal::Dfs"]},{"text":"impl&lt;N, VM&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.DfsPostOrder.html\" title=\"struct petgraph::visit::DfsPostOrder\">DfsPostOrder</a>&lt;N, VM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;VM: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::traversal::DfsPostOrder"]},{"text":"impl&lt;N, VM&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.Bfs.html\" title=\"struct petgraph::visit::Bfs\">Bfs</a>&lt;N, VM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;VM: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::traversal::Bfs"]},{"text":"impl&lt;N, VM&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.Topo.html\" title=\"struct petgraph::visit::Topo\">Topo</a>&lt;N, VM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;VM: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::traversal::Topo"]},{"text":"impl&lt;W, C&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.WalkerIter.html\" title=\"struct petgraph::visit::WalkerIter\">WalkerIter</a>&lt;W, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::traversal::WalkerIter"]},{"text":"impl&lt;G, F&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.NodeFiltered.html\" title=\"struct petgraph::visit::NodeFiltered\">NodeFiltered</a>&lt;G, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::filter::NodeFiltered"]},{"text":"impl&lt;'a, I, F&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.NodeFilteredNeighbors.html\" title=\"struct petgraph::visit::NodeFilteredNeighbors\">NodeFilteredNeighbors</a>&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::filter::NodeFilteredNeighbors"]},{"text":"impl&lt;'a, I, F&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.NodeFilteredNodes.html\" title=\"struct petgraph::visit::NodeFilteredNodes\">NodeFilteredNodes</a>&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::filter::NodeFilteredNodes"]},{"text":"impl&lt;'a, G, I, F&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.NodeFilteredEdgeReferences.html\" title=\"struct petgraph::visit::NodeFilteredEdgeReferences\">NodeFilteredEdgeReferences</a>&lt;'a, G, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::filter::NodeFilteredEdgeReferences"]},{"text":"impl&lt;'a, G, I, F&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.NodeFilteredEdges.html\" title=\"struct petgraph::visit::NodeFilteredEdges\">NodeFilteredEdges</a>&lt;'a, G, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::filter::NodeFilteredEdges"]},{"text":"impl&lt;G, F&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.EdgeFiltered.html\" title=\"struct petgraph::visit::EdgeFiltered\">EdgeFiltered</a>&lt;G, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::filter::EdgeFiltered"]},{"text":"impl&lt;'a, G, F&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.EdgeFilteredNeighbors.html\" title=\"struct petgraph::visit::EdgeFilteredNeighbors\">EdgeFilteredNeighbors</a>&lt;'a, G, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as <a class=\"trait\" href=\"petgraph/visit/trait.IntoEdges.html\" title=\"trait petgraph::visit::IntoEdges\">IntoEdges</a>&gt;::<a class=\"type\" href=\"petgraph/visit/trait.IntoEdges.html#associatedtype.Edges\" title=\"type petgraph::visit::IntoEdges::Edges\">Edges</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::filter::EdgeFilteredNeighbors"]},{"text":"impl&lt;'a, G, I, F&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.EdgeFilteredEdges.html\" title=\"struct petgraph::visit::EdgeFilteredEdges\">EdgeFilteredEdges</a>&lt;'a, G, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::filter::EdgeFilteredEdges"]},{"text":"impl&lt;'a, G, F&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.EdgeFilteredNeighborsDirected.html\" title=\"struct petgraph::visit::EdgeFilteredNeighborsDirected\">EdgeFilteredNeighborsDirected</a>&lt;'a, G, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as <a class=\"trait\" href=\"petgraph/visit/trait.IntoEdgesDirected.html\" title=\"trait petgraph::visit::IntoEdgesDirected\">IntoEdgesDirected</a>&gt;::<a class=\"type\" href=\"petgraph/visit/trait.IntoEdgesDirected.html#associatedtype.EdgesDirected\" title=\"type petgraph::visit::IntoEdgesDirected::EdgesDirected\">EdgesDirected</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as <a class=\"trait\" href=\"petgraph/visit/trait.GraphBase.html\" title=\"trait petgraph::visit::GraphBase\">GraphBase</a>&gt;::<a class=\"type\" href=\"petgraph/visit/trait.GraphBase.html#associatedtype.NodeId\" title=\"type petgraph::visit::GraphBase::NodeId\">NodeId</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::filter::EdgeFilteredNeighborsDirected"]},{"text":"impl&lt;G&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.Reversed.html\" title=\"struct petgraph::visit::Reversed\">Reversed</a>&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::reversed::Reversed"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.ReversedEdges.html\" title=\"struct petgraph::visit::ReversedEdges\">ReversedEdges</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::reversed::ReversedEdges"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.ReversedEdgeReference.html\" title=\"struct petgraph::visit::ReversedEdgeReference\">ReversedEdgeReference</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::reversed::ReversedEdgeReference"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.ReversedEdgeReferences.html\" title=\"struct petgraph::visit::ReversedEdgeReferences\">ReversedEdgeReferences</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::reversed::ReversedEdgeReferences"]},{"text":"impl&lt;N, E&gt; Freeze for <a class=\"enum\" href=\"petgraph/data/enum.Element.html\" title=\"enum petgraph::data::Element\">Element</a>&lt;N, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::data::Element"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"petgraph/data/struct.FilterElements.html\" title=\"struct petgraph::data::FilterElements\">FilterElements</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::data::FilterElements"]},{"text":"impl&lt;Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/adj/struct.EdgeIndex.html\" title=\"struct petgraph::adj::EdgeIndex\">EdgeIndex</a>&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::adj::EdgeIndex"]},{"text":"impl&lt;Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/adj/struct.OutgoingEdgeIndices.html\" title=\"struct petgraph::adj::OutgoingEdgeIndices\">OutgoingEdgeIndices</a>&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::adj::OutgoingEdgeIndices"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/adj/struct.Neighbors.html\" title=\"struct petgraph::adj::Neighbors\">Neighbors</a>&lt;'a, E, Ix&gt;","synthetic":true,"types":["petgraph::adj::Neighbors"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/adj/struct.EdgeReference.html\" title=\"struct petgraph::adj::EdgeReference\">EdgeReference</a>&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::adj::EdgeReference"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/adj/struct.EdgeIndices.html\" title=\"struct petgraph::adj::EdgeIndices\">EdgeIndices</a>&lt;'a, E, Ix&gt;","synthetic":true,"types":["petgraph::adj::EdgeIndices"]},{"text":"impl&lt;Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/adj/struct.NodeIndices.html\" title=\"struct petgraph::adj::NodeIndices\">NodeIndices</a>&lt;Ix&gt;","synthetic":true,"types":["petgraph::adj::NodeIndices"]},{"text":"impl&lt;E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/adj/struct.List.html\" title=\"struct petgraph::adj::List\">List</a>&lt;E, Ix&gt;","synthetic":true,"types":["petgraph::adj::List"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/adj/struct.EdgeReferences.html\" title=\"struct petgraph::adj::EdgeReferences\">EdgeReferences</a>&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::adj::EdgeReferences"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/adj/struct.OutgoingEdgeReferences.html\" title=\"struct petgraph::adj::OutgoingEdgeReferences\">OutgoingEdgeReferences</a>&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::adj::OutgoingEdgeReferences"]},{"text":"impl&lt;NodeId, EdgeWeight&gt; Freeze for <a class=\"struct\" href=\"petgraph/algo/bellman_ford/struct.Paths.html\" title=\"struct petgraph::algo::bellman_ford::Paths\">Paths</a>&lt;NodeId, EdgeWeight&gt;","synthetic":true,"types":["petgraph::algo::bellman_ford::Paths"]},{"text":"impl&lt;N&gt; Freeze for <a class=\"struct\" href=\"petgraph/algo/dominators/struct.Dominators.html\" title=\"struct petgraph::algo::dominators::Dominators\">Dominators</a>&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::algo::dominators::Dominators"]},{"text":"impl&lt;'a, N&gt; Freeze for <a class=\"struct\" href=\"petgraph/algo/dominators/struct.DominatorsIter.html\" title=\"struct petgraph::algo::dominators::DominatorsIter\">DominatorsIter</a>&lt;'a, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::algo::dominators::DominatorsIter"]},{"text":"impl&lt;'a, N&gt; Freeze for <a class=\"struct\" href=\"petgraph/algo/dominators/struct.DominatedByIter.html\" title=\"struct petgraph::algo::dominators::DominatedByIter\">DominatedByIter</a>&lt;'a, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::algo::dominators::DominatedByIter"]},{"text":"impl&lt;G&gt; Freeze for <a class=\"struct\" href=\"petgraph/algo/matching/struct.Matching.html\" title=\"struct petgraph::algo::matching::Matching\">Matching</a>&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::algo::matching::Matching"]},{"text":"impl&lt;'a, G&gt; Freeze for <a class=\"struct\" href=\"petgraph/algo/matching/struct.MatchedNodes.html\" title=\"struct petgraph::algo::matching::MatchedNodes\">MatchedNodes</a>&lt;'a, G&gt;","synthetic":true,"types":["petgraph::algo::matching::MatchedNodes"]},{"text":"impl&lt;'a, G&gt; Freeze for <a class=\"struct\" href=\"petgraph/algo/matching/struct.MatchedEdges.html\" title=\"struct petgraph::algo::matching::MatchedEdges\">MatchedEdges</a>&lt;'a, G&gt;","synthetic":true,"types":["petgraph::algo::matching::MatchedEdges"]},{"text":"impl&lt;N, VM&gt; Freeze for <a class=\"struct\" href=\"petgraph/algo/struct.DfsSpace.html\" title=\"struct petgraph::algo::DfsSpace\">DfsSpace</a>&lt;N, VM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;VM: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::algo::DfsSpace"]},{"text":"impl&lt;N&gt; Freeze for <a class=\"struct\" href=\"petgraph/algo/struct.TarjanScc.html\" title=\"struct petgraph::algo::TarjanScc\">TarjanScc</a>&lt;N&gt;","synthetic":true,"types":["petgraph::algo::TarjanScc"]},{"text":"impl&lt;G&gt; Freeze for <a class=\"struct\" href=\"petgraph/algo/struct.MinSpanningTree.html\" title=\"struct petgraph::algo::MinSpanningTree\">MinSpanningTree</a>&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as <a class=\"trait\" href=\"petgraph/visit/trait.IntoNodeReferences.html\" title=\"trait petgraph::visit::IntoNodeReferences\">IntoNodeReferences</a>&gt;::<a class=\"type\" href=\"petgraph/visit/trait.IntoNodeReferences.html#associatedtype.NodeReferences\" title=\"type petgraph::visit::IntoNodeReferences::NodeReferences\">NodeReferences</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::algo::MinSpanningTree"]},{"text":"impl&lt;N&gt; Freeze for <a class=\"struct\" href=\"petgraph/algo/struct.Cycle.html\" title=\"struct petgraph::algo::Cycle\">Cycle</a>&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::algo::Cycle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"petgraph/algo/struct.NegativeCycle.html\" title=\"struct petgraph::algo::NegativeCycle\">NegativeCycle</a>","synthetic":true,"types":["petgraph::algo::NegativeCycle"]},{"text":"impl&lt;N, E, Ty, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/csr/struct.Csr.html\" title=\"struct petgraph::csr::Csr\">Csr</a>&lt;N, E, Ty, Ix&gt;","synthetic":true,"types":["petgraph::csr::Csr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"petgraph/csr/struct.EdgesNotSorted.html\" title=\"struct petgraph::csr::EdgesNotSorted\">EdgesNotSorted</a>","synthetic":true,"types":["petgraph::csr::EdgesNotSorted"]},{"text":"impl&lt;'a, E, Ty, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/csr/struct.Edges.html\" title=\"struct petgraph::csr::Edges\">Edges</a>&lt;'a, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::csr::Edges"]},{"text":"impl&lt;'a, E, Ty, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/csr/struct.EdgeReference.html\" title=\"struct petgraph::csr::EdgeReference\">EdgeReference</a>&lt;'a, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::csr::EdgeReference"]},{"text":"impl&lt;'a, E, Ty, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/csr/struct.EdgeReferences.html\" title=\"struct petgraph::csr::EdgeReferences\">EdgeReferences</a>&lt;'a, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::csr::EdgeReferences"]},{"text":"impl&lt;'a, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/csr/struct.Neighbors.html\" title=\"struct petgraph::csr::Neighbors\">Neighbors</a>&lt;'a, Ix&gt;","synthetic":true,"types":["petgraph::csr::Neighbors"]},{"text":"impl&lt;Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/csr/struct.NodeIdentifiers.html\" title=\"struct petgraph::csr::NodeIdentifiers\">NodeIdentifiers</a>&lt;Ix&gt;","synthetic":true,"types":["petgraph::csr::NodeIdentifiers"]},{"text":"impl&lt;'a, N, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/csr/struct.NodeReferences.html\" title=\"struct petgraph::csr::NodeReferences\">NodeReferences</a>&lt;'a, N, Ix&gt;","synthetic":true,"types":["petgraph::csr::NodeReferences"]},{"text":"impl&lt;'a, G&gt; Freeze for <a class=\"struct\" href=\"petgraph/dot/struct.Dot.html\" title=\"struct petgraph::dot::Dot\">Dot</a>&lt;'a, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::dot::Dot"]},{"text":"impl Freeze for <a class=\"enum\" href=\"petgraph/dot/enum.Config.html\" title=\"enum petgraph::dot::Config\">Config</a>","synthetic":true,"types":["petgraph::dot::Config"]},{"text":"impl&lt;N, E, Ty, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/stable_graph/struct.StableGraph.html\" title=\"struct petgraph::stable_graph::StableGraph\">StableGraph</a>&lt;N, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::stable_graph::StableGraph"]},{"text":"impl&lt;'a, N, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/stable_graph/struct.NodeReferences.html\" title=\"struct petgraph::stable_graph::NodeReferences\">NodeReferences</a>&lt;'a, N, Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::stable_graph::NodeReferences"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/stable_graph/struct.EdgeReference.html\" title=\"struct petgraph::stable_graph::EdgeReference\">EdgeReference</a>&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::stable_graph::EdgeReference"]},{"text":"impl&lt;'a, E, Ty, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/stable_graph/struct.Edges.html\" title=\"struct petgraph::stable_graph::Edges\">Edges</a>&lt;'a, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::stable_graph::Edges"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/stable_graph/struct.EdgeReferences.html\" title=\"struct petgraph::stable_graph::EdgeReferences\">EdgeReferences</a>&lt;'a, E, Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::stable_graph::EdgeReferences"]},{"text":"impl&lt;'a, N, Ty, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/stable_graph/struct.Externals.html\" title=\"struct petgraph::stable_graph::Externals\">Externals</a>&lt;'a, N, Ty, Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::stable_graph::Externals"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/stable_graph/struct.Neighbors.html\" title=\"struct petgraph::stable_graph::Neighbors\">Neighbors</a>&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::stable_graph::Neighbors"]},{"text":"impl&lt;Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/stable_graph/struct.WalkNeighbors.html\" title=\"struct petgraph::stable_graph::WalkNeighbors\">WalkNeighbors</a>&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::stable_graph::WalkNeighbors"]},{"text":"impl&lt;'a, N, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/stable_graph/struct.NodeIndices.html\" title=\"struct petgraph::stable_graph::NodeIndices\">NodeIndices</a>&lt;'a, N, Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::stable_graph::NodeIndices"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/stable_graph/struct.EdgeIndices.html\" title=\"struct petgraph::stable_graph::EdgeIndices\">EdgeIndices</a>&lt;'a, E, Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::stable_graph::EdgeIndices"]},{"text":"impl&lt;Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.NodeIndex.html\" title=\"struct petgraph::graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::NodeIndex"]},{"text":"impl&lt;Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.EdgeIndex.html\" title=\"struct petgraph::graph::EdgeIndex\">EdgeIndex</a>&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::EdgeIndex"]},{"text":"impl&lt;N, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.Node.html\" title=\"struct petgraph::graph::Node\">Node</a>&lt;N, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::Node"]},{"text":"impl&lt;E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.Edge.html\" title=\"struct petgraph::graph::Edge\">Edge</a>&lt;E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::Edge"]},{"text":"impl&lt;N, E, Ty, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.Graph.html\" title=\"struct petgraph::graph::Graph\">Graph</a>&lt;N, E, Ty, Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::Graph"]},{"text":"impl&lt;'a, N, Ty, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.Externals.html\" title=\"struct petgraph::graph::Externals\">Externals</a>&lt;'a, N, Ty, Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::Externals"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.Neighbors.html\" title=\"struct petgraph::graph::Neighbors\">Neighbors</a>&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::Neighbors"]},{"text":"impl&lt;'a, E, Ty, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.Edges.html\" title=\"struct petgraph::graph::Edges\">Edges</a>&lt;'a, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::Edges"]},{"text":"impl&lt;'a, E, Ty, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.EdgesConnecting.html\" title=\"struct petgraph::graph::EdgesConnecting\">EdgesConnecting</a>&lt;'a, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::EdgesConnecting"]},{"text":"impl&lt;'a, N, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.NodeWeightsMut.html\" title=\"struct petgraph::graph::NodeWeightsMut\">NodeWeightsMut</a>&lt;'a, N, Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::NodeWeightsMut"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.EdgeWeightsMut.html\" title=\"struct petgraph::graph::EdgeWeightsMut\">EdgeWeightsMut</a>&lt;'a, E, Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::EdgeWeightsMut"]},{"text":"impl&lt;Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.WalkNeighbors.html\" title=\"struct petgraph::graph::WalkNeighbors\">WalkNeighbors</a>&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::WalkNeighbors"]},{"text":"impl&lt;Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.NodeIndices.html\" title=\"struct petgraph::graph::NodeIndices\">NodeIndices</a>&lt;Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::NodeIndices"]},{"text":"impl&lt;Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.EdgeIndices.html\" title=\"struct petgraph::graph::EdgeIndices\">EdgeIndices</a>&lt;Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::EdgeIndices"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.EdgeReference.html\" title=\"struct petgraph::graph::EdgeReference\">EdgeReference</a>&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::EdgeReference"]},{"text":"impl&lt;'a, N, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.NodeReferences.html\" title=\"struct petgraph::graph::NodeReferences\">NodeReferences</a>&lt;'a, N, Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::NodeReferences"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.EdgeReferences.html\" title=\"struct petgraph::graph::EdgeReferences\">EdgeReferences</a>&lt;'a, E, Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::EdgeReferences"]},{"text":"impl&lt;'a, G&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.Frozen.html\" title=\"struct petgraph::graph::Frozen\">Frozen</a>&lt;'a, G&gt;","synthetic":true,"types":["petgraph::graph_impl::Frozen"]},{"text":"impl&lt;N, E, Ty&gt; Freeze for <a class=\"struct\" href=\"petgraph/graphmap/struct.GraphMap.html\" title=\"struct petgraph::graphmap::GraphMap\">GraphMap</a>&lt;N, E, Ty&gt;","synthetic":true,"types":["petgraph::graphmap::GraphMap"]},{"text":"impl&lt;'a, N&gt; Freeze for <a class=\"struct\" href=\"petgraph/graphmap/struct.Nodes.html\" title=\"struct petgraph::graphmap::Nodes\">Nodes</a>&lt;'a, N&gt;","synthetic":true,"types":["petgraph::graphmap::Nodes"]},{"text":"impl&lt;'a, N, Ty&gt; Freeze for <a class=\"struct\" href=\"petgraph/graphmap/struct.Neighbors.html\" title=\"struct petgraph::graphmap::Neighbors\">Neighbors</a>&lt;'a, N, Ty&gt;","synthetic":true,"types":["petgraph::graphmap::Neighbors"]},{"text":"impl&lt;'a, N, Ty&gt; Freeze for <a class=\"struct\" href=\"petgraph/graphmap/struct.NeighborsDirected.html\" title=\"struct petgraph::graphmap::NeighborsDirected\">NeighborsDirected</a>&lt;'a, N, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graphmap::NeighborsDirected"]},{"text":"impl&lt;'a, N, E, Ty&gt; Freeze for <a class=\"struct\" href=\"petgraph/graphmap/struct.Edges.html\" title=\"struct petgraph::graphmap::Edges\">Edges</a>&lt;'a, N, E, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graphmap::Edges"]},{"text":"impl&lt;'a, N, E, Ty&gt; Freeze for <a class=\"struct\" href=\"petgraph/graphmap/struct.EdgesDirected.html\" title=\"struct petgraph::graphmap::EdgesDirected\">EdgesDirected</a>&lt;'a, N, E, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graphmap::EdgesDirected"]},{"text":"impl&lt;'a, N, E, Ty&gt; Freeze for <a class=\"struct\" href=\"petgraph/graphmap/struct.AllEdges.html\" title=\"struct petgraph::graphmap::AllEdges\">AllEdges</a>&lt;'a, N, E, Ty&gt;","synthetic":true,"types":["petgraph::graphmap::AllEdges"]},{"text":"impl&lt;'a, N, E, Ty&gt; Freeze for <a class=\"struct\" href=\"petgraph/graphmap/struct.AllEdgesMut.html\" title=\"struct petgraph::graphmap::AllEdgesMut\">AllEdgesMut</a>&lt;'a, N, E, Ty&gt;","synthetic":true,"types":["petgraph::graphmap::AllEdgesMut"]},{"text":"impl&lt;'b, T&gt; Freeze for <a class=\"struct\" href=\"petgraph/graphmap/struct.Ptr.html\" title=\"struct petgraph::graphmap::Ptr\">Ptr</a>&lt;'b, T&gt;","synthetic":true,"types":["petgraph::graphmap::Ptr"]},{"text":"impl&lt;'a, N, E, Ty&gt; Freeze for <a class=\"struct\" href=\"petgraph/graphmap/struct.NodeIdentifiers.html\" title=\"struct petgraph::graphmap::NodeIdentifiers\">NodeIdentifiers</a>&lt;'a, N, E, Ty&gt;","synthetic":true,"types":["petgraph::graphmap::NodeIdentifiers"]},{"text":"impl&lt;'a, N, E, Ty&gt; Freeze for <a class=\"struct\" href=\"petgraph/graphmap/struct.NodeReferences.html\" title=\"struct petgraph::graphmap::NodeReferences\">NodeReferences</a>&lt;'a, N, E, Ty&gt;","synthetic":true,"types":["petgraph::graphmap::NodeReferences"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.NotZero.html\" title=\"struct petgraph::matrix_graph::NotZero\">NotZero</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::matrix_graph::NotZero"]},{"text":"impl&lt;N, E, Ty, Null, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.MatrixGraph.html\" title=\"struct petgraph::matrix_graph::MatrixGraph\">MatrixGraph</a>&lt;N, E, Ty, Null, Ix&gt;","synthetic":true,"types":["petgraph::matrix_graph::MatrixGraph"]},{"text":"impl&lt;'a, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.NodeIdentifiers.html\" title=\"struct petgraph::matrix_graph::NodeIdentifiers\">NodeIdentifiers</a>&lt;'a, Ix&gt;","synthetic":true,"types":["petgraph::matrix_graph::NodeIdentifiers"]},{"text":"impl&lt;'a, N, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.NodeReferences.html\" title=\"struct petgraph::matrix_graph::NodeReferences\">NodeReferences</a>&lt;'a, N, Ix&gt;","synthetic":true,"types":["petgraph::matrix_graph::NodeReferences"]},{"text":"impl&lt;'a, Ty, Null, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.EdgeReferences.html\" title=\"struct petgraph::matrix_graph::EdgeReferences\">EdgeReferences</a>&lt;'a, Ty, Null, Ix&gt;","synthetic":true,"types":["petgraph::matrix_graph::EdgeReferences"]},{"text":"impl&lt;'a, Ty, Null, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.Neighbors.html\" title=\"struct petgraph::matrix_graph::Neighbors\">Neighbors</a>&lt;'a, Ty, Null, Ix&gt;","synthetic":true,"types":["petgraph::matrix_graph::Neighbors"]},{"text":"impl&lt;'a, Ty, Null, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.Edges.html\" title=\"struct petgraph::matrix_graph::Edges\">Edges</a>&lt;'a, Ty, Null, Ix&gt;","synthetic":true,"types":["petgraph::matrix_graph::Edges"]},{"text":"impl&lt;K&gt; Freeze for <a class=\"struct\" href=\"petgraph/unionfind/struct.UnionFind.html\" title=\"struct petgraph::unionfind::UnionFind\">UnionFind</a>&lt;K&gt;","synthetic":true,"types":["petgraph::unionfind::UnionFind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"petgraph/enum.Direction.html\" title=\"enum petgraph::Direction\">Direction</a>","synthetic":true,"types":["petgraph::Direction"]},{"text":"impl Freeze for <a class=\"enum\" href=\"petgraph/enum.Directed.html\" title=\"enum petgraph::Directed\">Directed</a>","synthetic":true,"types":["petgraph::Directed"]},{"text":"impl Freeze for <a class=\"enum\" href=\"petgraph/enum.Undirected.html\" title=\"enum petgraph::Undirected\">Undirected</a>","synthetic":true,"types":["petgraph::Undirected"]}];
implementors["proc_macro2"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/token_stream/struct.IntoIter.html\" title=\"struct proc_macro2::token_stream::IntoIter\">IntoIter</a>","synthetic":true,"types":["proc_macro2::token_stream::IntoIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.TokenStream.html\" title=\"struct proc_macro2::TokenStream\">TokenStream</a>","synthetic":true,"types":["proc_macro2::TokenStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.LexError.html\" title=\"struct proc_macro2::LexError\">LexError</a>","synthetic":true,"types":["proc_macro2::LexError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Span.html\" title=\"struct proc_macro2::Span\">Span</a>","synthetic":true,"types":["proc_macro2::Span"]},{"text":"impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.TokenTree.html\" title=\"enum proc_macro2::TokenTree\">TokenTree</a>","synthetic":true,"types":["proc_macro2::TokenTree"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Group.html\" title=\"struct proc_macro2::Group\">Group</a>","synthetic":true,"types":["proc_macro2::Group"]},{"text":"impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.Delimiter.html\" title=\"enum proc_macro2::Delimiter\">Delimiter</a>","synthetic":true,"types":["proc_macro2::Delimiter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Punct.html\" title=\"struct proc_macro2::Punct\">Punct</a>","synthetic":true,"types":["proc_macro2::Punct"]},{"text":"impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.Spacing.html\" title=\"enum proc_macro2::Spacing\">Spacing</a>","synthetic":true,"types":["proc_macro2::Spacing"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Ident.html\" title=\"struct proc_macro2::Ident\">Ident</a>","synthetic":true,"types":["proc_macro2::Ident"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Literal.html\" title=\"struct proc_macro2::Literal\">Literal</a>","synthetic":true,"types":["proc_macro2::Literal"]}];
implementors["quick_error"] = [{"text":"impl&lt;X, E&gt; Freeze for <a class=\"struct\" href=\"quick_error/struct.Context.html\" title=\"struct quick_error::Context\">Context</a>&lt;X, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":["quick_error::Context"]}];
implementors["radix_heap"] = [{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"radix_heap/struct.RadixHeapMap.html\" title=\"struct radix_heap::RadixHeapMap\">RadixHeapMap</a>&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["radix_heap::RadixHeapMap"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"radix_heap/struct.IntoIter.html\" title=\"struct radix_heap::IntoIter\">IntoIter</a>&lt;K, V&gt;","synthetic":true,"types":["radix_heap::IntoIter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"radix_heap/struct.Iter.html\" title=\"struct radix_heap::Iter\">Iter</a>&lt;'a, K, V&gt;","synthetic":true,"types":["radix_heap::Iter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"radix_heap/struct.Keys.html\" title=\"struct radix_heap::Keys\">Keys</a>&lt;'a, K, V&gt;","synthetic":true,"types":["radix_heap::Keys"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"radix_heap/struct.Values.html\" title=\"struct radix_heap::Values\">Values</a>&lt;'a, K, V&gt;","synthetic":true,"types":["radix_heap::Values"]}];
implementors["rayon"] = [{"text":"impl&lt;T, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.57.0/std/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"rayon/array/struct.IntoIter.html\" title=\"struct rayon::array::IntoIter\">IntoIter</a>&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::array::IntoIter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/binary_heap/struct.IntoIter.html\" title=\"struct rayon::collections::binary_heap::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["rayon::collections::binary_heap::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/binary_heap/struct.Iter.html\" title=\"struct rayon::collections::binary_heap::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::collections::binary_heap::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/binary_heap/struct.Drain.html\" title=\"struct rayon::collections::binary_heap::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::collections::binary_heap::Drain"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/btree_map/struct.IntoIter.html\" title=\"struct rayon::collections::btree_map::IntoIter\">IntoIter</a>&lt;K, V&gt;","synthetic":true,"types":["rayon::collections::btree_map::IntoIter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/btree_map/struct.Iter.html\" title=\"struct rayon::collections::btree_map::Iter\">Iter</a>&lt;'a, K, V&gt;","synthetic":true,"types":["rayon::collections::btree_map::Iter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/btree_map/struct.IterMut.html\" title=\"struct rayon::collections::btree_map::IterMut\">IterMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["rayon::collections::btree_map::IterMut"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/btree_set/struct.IntoIter.html\" title=\"struct rayon::collections::btree_set::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["rayon::collections::btree_set::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/btree_set/struct.Iter.html\" title=\"struct rayon::collections::btree_set::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::collections::btree_set::Iter"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/hash_map/struct.IntoIter.html\" title=\"struct rayon::collections::hash_map::IntoIter\">IntoIter</a>&lt;K, V&gt;","synthetic":true,"types":["rayon::collections::hash_map::IntoIter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/hash_map/struct.Iter.html\" title=\"struct rayon::collections::hash_map::Iter\">Iter</a>&lt;'a, K, V&gt;","synthetic":true,"types":["rayon::collections::hash_map::Iter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/hash_map/struct.IterMut.html\" title=\"struct rayon::collections::hash_map::IterMut\">IterMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["rayon::collections::hash_map::IterMut"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/hash_map/struct.Drain.html\" title=\"struct rayon::collections::hash_map::Drain\">Drain</a>&lt;'a, K, V&gt;","synthetic":true,"types":["rayon::collections::hash_map::Drain"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/hash_set/struct.IntoIter.html\" title=\"struct rayon::collections::hash_set::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["rayon::collections::hash_set::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/hash_set/struct.Iter.html\" title=\"struct rayon::collections::hash_set::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::collections::hash_set::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/hash_set/struct.Drain.html\" title=\"struct rayon::collections::hash_set::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::collections::hash_set::Drain"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/linked_list/struct.IntoIter.html\" title=\"struct rayon::collections::linked_list::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["rayon::collections::linked_list::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/linked_list/struct.Iter.html\" title=\"struct rayon::collections::linked_list::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::collections::linked_list::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/linked_list/struct.IterMut.html\" title=\"struct rayon::collections::linked_list::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::collections::linked_list::IterMut"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/vec_deque/struct.IntoIter.html\" title=\"struct rayon::collections::vec_deque::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["rayon::collections::vec_deque::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/vec_deque/struct.Iter.html\" title=\"struct rayon::collections::vec_deque::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::collections::vec_deque::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/vec_deque/struct.IterMut.html\" title=\"struct rayon::collections::vec_deque::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::collections::vec_deque::IterMut"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/vec_deque/struct.Drain.html\" title=\"struct rayon::collections::vec_deque::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::collections::vec_deque::Drain"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Chain.html\" title=\"struct rayon::iter::Chain\">Chain</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::chain::Chain"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Chunks.html\" title=\"struct rayon::iter::Chunks\">Chunks</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::chunks::Chunks"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Cloned.html\" title=\"struct rayon::iter::Cloned\">Cloned</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::cloned::Cloned"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Copied.html\" title=\"struct rayon::iter::Copied\">Copied</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::copied::Copied"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Empty.html\" title=\"struct rayon::iter::Empty\">Empty</a>&lt;T&gt;","synthetic":true,"types":["rayon::iter::empty::Empty"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Enumerate.html\" title=\"struct rayon::iter::Enumerate\">Enumerate</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::enumerate::Enumerate"]},{"text":"impl&lt;I, P&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Filter.html\" title=\"struct rayon::iter::Filter\">Filter</a>&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::filter::Filter"]},{"text":"impl&lt;I, P&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.FilterMap.html\" title=\"struct rayon::iter::FilterMap\">FilterMap</a>&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::filter_map::FilterMap"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.FlatMap.html\" title=\"struct rayon::iter::FlatMap\">FlatMap</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::flat_map::FlatMap"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.FlatMapIter.html\" title=\"struct rayon::iter::FlatMapIter\">FlatMapIter</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::flat_map_iter::FlatMapIter"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Flatten.html\" title=\"struct rayon::iter::Flatten\">Flatten</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::flatten::Flatten"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.FlattenIter.html\" title=\"struct rayon::iter::FlattenIter\">FlattenIter</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::flatten_iter::FlattenIter"]},{"text":"impl&lt;I, ID, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Fold.html\" title=\"struct rayon::iter::Fold\">Fold</a>&lt;I, ID, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;ID: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::fold::Fold"]},{"text":"impl&lt;I, U, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.FoldWith.html\" title=\"struct rayon::iter::FoldWith\">FoldWith</a>&lt;I, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::fold::FoldWith"]},{"text":"impl&lt;I, ID, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.FoldChunks.html\" title=\"struct rayon::iter::FoldChunks\">FoldChunks</a>&lt;I, ID, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;ID: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::fold_chunks::FoldChunks"]},{"text":"impl&lt;I, U, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.FoldChunksWith.html\" title=\"struct rayon::iter::FoldChunksWith\">FoldChunksWith</a>&lt;I, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::fold_chunks_with::FoldChunksWith"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Inspect.html\" title=\"struct rayon::iter::Inspect\">Inspect</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::inspect::Inspect"]},{"text":"impl&lt;I, J&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Interleave.html\" title=\"struct rayon::iter::Interleave\">Interleave</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::interleave::Interleave"]},{"text":"impl&lt;I, J&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.InterleaveShortest.html\" title=\"struct rayon::iter::InterleaveShortest\">InterleaveShortest</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::interleave_shortest::InterleaveShortest"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Intersperse.html\" title=\"struct rayon::iter::Intersperse\">Intersperse</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"rayon/iter/trait.ParallelIterator.html\" title=\"trait rayon::iter::ParallelIterator\">ParallelIterator</a>&gt;::<a class=\"type\" href=\"rayon/iter/trait.ParallelIterator.html#associatedtype.Item\" title=\"type rayon::iter::ParallelIterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::intersperse::Intersperse"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.MinLen.html\" title=\"struct rayon::iter::MinLen\">MinLen</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::len::MinLen"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.MaxLen.html\" title=\"struct rayon::iter::MaxLen\">MaxLen</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::len::MaxLen"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Map.html\" title=\"struct rayon::iter::Map\">Map</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::map::Map"]},{"text":"impl&lt;I, T, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.MapWith.html\" title=\"struct rayon::iter::MapWith\">MapWith</a>&lt;I, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::map_with::MapWith"]},{"text":"impl&lt;I, INIT, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.MapInit.html\" title=\"struct rayon::iter::MapInit\">MapInit</a>&lt;I, INIT, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;INIT: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::map_with::MapInit"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.MultiZip.html\" title=\"struct rayon::iter::MultiZip\">MultiZip</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::multizip::MultiZip"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Once.html\" title=\"struct rayon::iter::Once\">Once</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::once::Once"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.PanicFuse.html\" title=\"struct rayon::iter::PanicFuse\">PanicFuse</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::panic_fuse::PanicFuse"]},{"text":"impl&lt;Iter&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.IterBridge.html\" title=\"struct rayon::iter::IterBridge\">IterBridge</a>&lt;Iter&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Iter: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::par_bridge::IterBridge"]},{"text":"impl&lt;I, P&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Positions.html\" title=\"struct rayon::iter::Positions\">Positions</a>&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::positions::Positions"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Repeat.html\" title=\"struct rayon::iter::Repeat\">Repeat</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::repeat::Repeat"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.RepeatN.html\" title=\"struct rayon::iter::RepeatN\">RepeatN</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::repeat::RepeatN"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Rev.html\" title=\"struct rayon::iter::Rev\">Rev</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::rev::Rev"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Skip.html\" title=\"struct rayon::iter::Skip\">Skip</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::skip::Skip"]},{"text":"impl&lt;D, S&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Split.html\" title=\"struct rayon::iter::Split\">Split</a>&lt;D, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::splitter::Split"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.StepBy.html\" title=\"struct rayon::iter::StepBy\">StepBy</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::step_by::StepBy"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Take.html\" title=\"struct rayon::iter::Take\">Take</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::take::Take"]},{"text":"impl&lt;I, U, ID, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.TryFold.html\" title=\"struct rayon::iter::TryFold\">TryFold</a>&lt;I, U, ID, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;ID: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::try_fold::TryFold"]},{"text":"impl&lt;I, U, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.TryFoldWith.html\" title=\"struct rayon::iter::TryFoldWith\">TryFoldWith</a>&lt;I, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as Try&gt;::Output: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::try_fold::TryFoldWith"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Update.html\" title=\"struct rayon::iter::Update\">Update</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::update::Update"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.WhileSome.html\" title=\"struct rayon::iter::WhileSome\">WhileSome</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::while_some::WhileSome"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Zip.html\" title=\"struct rayon::iter::Zip\">Zip</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::zip::Zip"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.ZipEq.html\" title=\"struct rayon::iter::ZipEq\">ZipEq</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::zip_eq::ZipEq"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/option/struct.IntoIter.html\" title=\"struct rayon::option::IntoIter\">IntoIter</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::option::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/option/struct.Iter.html\" title=\"struct rayon::option::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::option::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/option/struct.IterMut.html\" title=\"struct rayon::option::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::option::IterMut"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/range/struct.Iter.html\" title=\"struct rayon::range::Iter\">Iter</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::range::Iter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/range_inclusive/struct.Iter.html\" title=\"struct rayon::range_inclusive::Iter\">Iter</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::range_inclusive::Iter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/result/struct.IntoIter.html\" title=\"struct rayon::result::IntoIter\">IntoIter</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::result::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/result/struct.Iter.html\" title=\"struct rayon::result::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::result::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/result/struct.IterMut.html\" title=\"struct rayon::result::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::result::IterMut"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.Chunks.html\" title=\"struct rayon::slice::Chunks\">Chunks</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::slice::chunks::Chunks"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.ChunksExact.html\" title=\"struct rayon::slice::ChunksExact\">ChunksExact</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::slice::chunks::ChunksExact"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.ChunksMut.html\" title=\"struct rayon::slice::ChunksMut\">ChunksMut</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::slice::chunks::ChunksMut"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.ChunksExactMut.html\" title=\"struct rayon::slice::ChunksExactMut\">ChunksExactMut</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::slice::chunks::ChunksExactMut"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.RChunks.html\" title=\"struct rayon::slice::RChunks\">RChunks</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::slice::rchunks::RChunks"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.RChunksExact.html\" title=\"struct rayon::slice::RChunksExact\">RChunksExact</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::slice::rchunks::RChunksExact"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.RChunksMut.html\" title=\"struct rayon::slice::RChunksMut\">RChunksMut</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::slice::rchunks::RChunksMut"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.RChunksExactMut.html\" title=\"struct rayon::slice::RChunksExactMut\">RChunksExactMut</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::slice::rchunks::RChunksExactMut"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.Iter.html\" title=\"struct rayon::slice::Iter\">Iter</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::slice::Iter"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.Windows.html\" title=\"struct rayon::slice::Windows\">Windows</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::slice::Windows"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.IterMut.html\" title=\"struct rayon::slice::IterMut\">IterMut</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::slice::IterMut"]},{"text":"impl&lt;'data, T, P&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.Split.html\" title=\"struct rayon::slice::Split\">Split</a>&lt;'data, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::slice::Split"]},{"text":"impl&lt;'data, T, P&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.SplitMut.html\" title=\"struct rayon::slice::SplitMut\">SplitMut</a>&lt;'data, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::slice::SplitMut"]},{"text":"impl&lt;'ch&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.Chars.html\" title=\"struct rayon::str::Chars\">Chars</a>&lt;'ch&gt;","synthetic":true,"types":["rayon::str::Chars"]},{"text":"impl&lt;'ch&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.CharIndices.html\" title=\"struct rayon::str::CharIndices\">CharIndices</a>&lt;'ch&gt;","synthetic":true,"types":["rayon::str::CharIndices"]},{"text":"impl&lt;'ch&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.Bytes.html\" title=\"struct rayon::str::Bytes\">Bytes</a>&lt;'ch&gt;","synthetic":true,"types":["rayon::str::Bytes"]},{"text":"impl&lt;'ch&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.EncodeUtf16.html\" title=\"struct rayon::str::EncodeUtf16\">EncodeUtf16</a>&lt;'ch&gt;","synthetic":true,"types":["rayon::str::EncodeUtf16"]},{"text":"impl&lt;'ch, P&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.Split.html\" title=\"struct rayon::str::Split\">Split</a>&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::str::Split"]},{"text":"impl&lt;'ch, P&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.SplitTerminator.html\" title=\"struct rayon::str::SplitTerminator\">SplitTerminator</a>&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::str::SplitTerminator"]},{"text":"impl&lt;'ch&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.Lines.html\" title=\"struct rayon::str::Lines\">Lines</a>&lt;'ch&gt;","synthetic":true,"types":["rayon::str::Lines"]},{"text":"impl&lt;'ch&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.SplitWhitespace.html\" title=\"struct rayon::str::SplitWhitespace\">SplitWhitespace</a>&lt;'ch&gt;","synthetic":true,"types":["rayon::str::SplitWhitespace"]},{"text":"impl&lt;'ch, P&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.Matches.html\" title=\"struct rayon::str::Matches\">Matches</a>&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::str::Matches"]},{"text":"impl&lt;'ch, P&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.MatchIndices.html\" title=\"struct rayon::str::MatchIndices\">MatchIndices</a>&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::str::MatchIndices"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"rayon/string/struct.Drain.html\" title=\"struct rayon::string::Drain\">Drain</a>&lt;'a&gt;","synthetic":true,"types":["rayon::string::Drain"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/vec/struct.IntoIter.html\" title=\"struct rayon::vec::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["rayon::vec::IntoIter"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/vec/struct.Drain.html\" title=\"struct rayon::vec::Drain\">Drain</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::vec::Drain"]}];
implementors["rayon_core"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"rayon_core/struct.BroadcastContext.html\" title=\"struct rayon_core::BroadcastContext\">BroadcastContext</a>&lt;'a&gt;","synthetic":true,"types":["rayon_core::broadcast::BroadcastContext"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"rayon_core/struct.ThreadBuilder.html\" title=\"struct rayon_core::ThreadBuilder\">ThreadBuilder</a>","synthetic":true,"types":["rayon_core::registry::ThreadBuilder"]},{"text":"impl&lt;'scope&gt; !Freeze for <a class=\"struct\" href=\"rayon_core/struct.Scope.html\" title=\"struct rayon_core::Scope\">Scope</a>&lt;'scope&gt;","synthetic":true,"types":["rayon_core::scope::Scope"]},{"text":"impl&lt;'scope&gt; !Freeze for <a class=\"struct\" href=\"rayon_core/struct.ScopeFifo.html\" title=\"struct rayon_core::ScopeFifo\">ScopeFifo</a>&lt;'scope&gt;","synthetic":true,"types":["rayon_core::scope::ScopeFifo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rayon_core/struct.ThreadPool.html\" title=\"struct rayon_core::ThreadPool\">ThreadPool</a>","synthetic":true,"types":["rayon_core::thread_pool::ThreadPool"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rayon_core/struct.ThreadPoolBuildError.html\" title=\"struct rayon_core::ThreadPoolBuildError\">ThreadPoolBuildError</a>","synthetic":true,"types":["rayon_core::ThreadPoolBuildError"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"rayon_core/struct.ThreadPoolBuilder.html\" title=\"struct rayon_core::ThreadPoolBuilder\">ThreadPoolBuilder</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon_core::ThreadPoolBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rayon_core/struct.Configuration.html\" title=\"struct rayon_core::Configuration\">Configuration</a>","synthetic":true,"types":["rayon_core::Configuration"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rayon_core/struct.FnContext.html\" title=\"struct rayon_core::FnContext\">FnContext</a>","synthetic":true,"types":["rayon_core::FnContext"]}];
implementors["regex"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.RegexBuilder.html\" title=\"struct regex::bytes::RegexBuilder\">RegexBuilder</a>","synthetic":true,"types":["regex::re_builder::bytes::RegexBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.RegexSetBuilder.html\" title=\"struct regex::bytes::RegexSetBuilder\">RegexSetBuilder</a>","synthetic":true,"types":["regex::re_builder::set_bytes::RegexSetBuilder"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Match.html\" title=\"struct regex::bytes::Match\">Match</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_bytes::Match"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Regex.html\" title=\"struct regex::bytes::Regex\">Regex</a>","synthetic":true,"types":["regex::re_bytes::Regex"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Matches.html\" title=\"struct regex::bytes::Matches\">Matches</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_bytes::Matches"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.CaptureMatches.html\" title=\"struct regex::bytes::CaptureMatches\">CaptureMatches</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_bytes::CaptureMatches"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Split.html\" title=\"struct regex::bytes::Split\">Split</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_bytes::Split"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SplitN.html\" title=\"struct regex::bytes::SplitN\">SplitN</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_bytes::SplitN"]},{"text":"impl&lt;'r&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.CaptureNames.html\" title=\"struct regex::bytes::CaptureNames\">CaptureNames</a>&lt;'r&gt;","synthetic":true,"types":["regex::re_bytes::CaptureNames"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.CaptureLocations.html\" title=\"struct regex::bytes::CaptureLocations\">CaptureLocations</a>","synthetic":true,"types":["regex::re_bytes::CaptureLocations"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Captures.html\" title=\"struct regex::bytes::Captures\">Captures</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_bytes::Captures"]},{"text":"impl&lt;'c, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SubCaptureMatches.html\" title=\"struct regex::bytes::SubCaptureMatches\">SubCaptureMatches</a>&lt;'c, 't&gt;","synthetic":true,"types":["regex::re_bytes::SubCaptureMatches"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.ReplacerRef.html\" title=\"struct regex::bytes::ReplacerRef\">ReplacerRef</a>&lt;'a, R&gt;","synthetic":true,"types":["regex::re_bytes::ReplacerRef"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.NoExpand.html\" title=\"struct regex::bytes::NoExpand\">NoExpand</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_bytes::NoExpand"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.RegexSet.html\" title=\"struct regex::bytes::RegexSet\">RegexSet</a>","synthetic":true,"types":["regex::re_set::bytes::RegexSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SetMatches.html\" title=\"struct regex::bytes::SetMatches\">SetMatches</a>","synthetic":true,"types":["regex::re_set::bytes::SetMatches"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SetMatchesIntoIter.html\" title=\"struct regex::bytes::SetMatchesIntoIter\">SetMatchesIntoIter</a>","synthetic":true,"types":["regex::re_set::bytes::SetMatchesIntoIter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SetMatchesIter.html\" title=\"struct regex::bytes::SetMatchesIter\">SetMatchesIter</a>&lt;'a&gt;","synthetic":true,"types":["regex::re_set::bytes::SetMatchesIter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex/enum.Error.html\" title=\"enum regex::Error\">Error</a>","synthetic":true,"types":["regex::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.RegexBuilder.html\" title=\"struct regex::RegexBuilder\">RegexBuilder</a>","synthetic":true,"types":["regex::re_builder::unicode::RegexBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.RegexSetBuilder.html\" title=\"struct regex::RegexSetBuilder\">RegexSetBuilder</a>","synthetic":true,"types":["regex::re_builder::set_unicode::RegexSetBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.RegexSet.html\" title=\"struct regex::RegexSet\">RegexSet</a>","synthetic":true,"types":["regex::re_set::unicode::RegexSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.SetMatches.html\" title=\"struct regex::SetMatches\">SetMatches</a>","synthetic":true,"types":["regex::re_set::unicode::SetMatches"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.SetMatchesIntoIter.html\" title=\"struct regex::SetMatchesIntoIter\">SetMatchesIntoIter</a>","synthetic":true,"types":["regex::re_set::unicode::SetMatchesIntoIter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"regex/struct.SetMatchesIter.html\" title=\"struct regex::SetMatchesIter\">SetMatchesIter</a>&lt;'a&gt;","synthetic":true,"types":["regex::re_set::unicode::SetMatchesIter"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/struct.Match.html\" title=\"struct regex::Match\">Match</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_unicode::Match"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.Regex.html\" title=\"struct regex::Regex\">Regex</a>","synthetic":true,"types":["regex::re_unicode::Regex"]},{"text":"impl&lt;'r&gt; Freeze for <a class=\"struct\" href=\"regex/struct.CaptureNames.html\" title=\"struct regex::CaptureNames\">CaptureNames</a>&lt;'r&gt;","synthetic":true,"types":["regex::re_unicode::CaptureNames"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.Split.html\" title=\"struct regex::Split\">Split</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_unicode::Split"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.SplitN.html\" title=\"struct regex::SplitN\">SplitN</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_unicode::SplitN"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.CaptureLocations.html\" title=\"struct regex::CaptureLocations\">CaptureLocations</a>","synthetic":true,"types":["regex::re_unicode::CaptureLocations"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/struct.Captures.html\" title=\"struct regex::Captures\">Captures</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_unicode::Captures"]},{"text":"impl&lt;'c, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.SubCaptureMatches.html\" title=\"struct regex::SubCaptureMatches\">SubCaptureMatches</a>&lt;'c, 't&gt;","synthetic":true,"types":["regex::re_unicode::SubCaptureMatches"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.CaptureMatches.html\" title=\"struct regex::CaptureMatches\">CaptureMatches</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_unicode::CaptureMatches"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.Matches.html\" title=\"struct regex::Matches\">Matches</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_unicode::Matches"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"regex/struct.ReplacerRef.html\" title=\"struct regex::ReplacerRef\">ReplacerRef</a>&lt;'a, R&gt;","synthetic":true,"types":["regex::re_unicode::ReplacerRef"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/struct.NoExpand.html\" title=\"struct regex::NoExpand\">NoExpand</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_unicode::NoExpand"]}];
implementors["regex_syntax"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/parse/struct.ParserBuilder.html\" title=\"struct regex_syntax::ast::parse::ParserBuilder\">ParserBuilder</a>","synthetic":true,"types":["regex_syntax::ast::parse::ParserBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"regex_syntax/ast/parse/struct.Parser.html\" title=\"struct regex_syntax::ast::parse::Parser\">Parser</a>","synthetic":true,"types":["regex_syntax::ast::parse::Parser"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/print/struct.Printer.html\" title=\"struct regex_syntax::ast::print::Printer\">Printer</a>","synthetic":true,"types":["regex_syntax::ast::print::Printer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Error.html\" title=\"struct regex_syntax::ast::Error\">Error</a>","synthetic":true,"types":["regex_syntax::ast::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ErrorKind.html\" title=\"enum regex_syntax::ast::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["regex_syntax::ast::ErrorKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Span.html\" title=\"struct regex_syntax::ast::Span\">Span</a>","synthetic":true,"types":["regex_syntax::ast::Span"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Position.html\" title=\"struct regex_syntax::ast::Position\">Position</a>","synthetic":true,"types":["regex_syntax::ast::Position"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.WithComments.html\" title=\"struct regex_syntax::ast::WithComments\">WithComments</a>","synthetic":true,"types":["regex_syntax::ast::WithComments"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Comment.html\" title=\"struct regex_syntax::ast::Comment\">Comment</a>","synthetic":true,"types":["regex_syntax::ast::Comment"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.Ast.html\" title=\"enum regex_syntax::ast::Ast\">Ast</a>","synthetic":true,"types":["regex_syntax::ast::Ast"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Alternation.html\" title=\"struct regex_syntax::ast::Alternation\">Alternation</a>","synthetic":true,"types":["regex_syntax::ast::Alternation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Concat.html\" title=\"struct regex_syntax::ast::Concat\">Concat</a>","synthetic":true,"types":["regex_syntax::ast::Concat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Literal.html\" title=\"struct regex_syntax::ast::Literal\">Literal</a>","synthetic":true,"types":["regex_syntax::ast::Literal"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.LiteralKind.html\" title=\"enum regex_syntax::ast::LiteralKind\">LiteralKind</a>","synthetic":true,"types":["regex_syntax::ast::LiteralKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.SpecialLiteralKind.html\" title=\"enum regex_syntax::ast::SpecialLiteralKind\">SpecialLiteralKind</a>","synthetic":true,"types":["regex_syntax::ast::SpecialLiteralKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.HexLiteralKind.html\" title=\"enum regex_syntax::ast::HexLiteralKind\">HexLiteralKind</a>","synthetic":true,"types":["regex_syntax::ast::HexLiteralKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.Class.html\" title=\"enum regex_syntax::ast::Class\">Class</a>","synthetic":true,"types":["regex_syntax::ast::Class"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassPerl.html\" title=\"struct regex_syntax::ast::ClassPerl\">ClassPerl</a>","synthetic":true,"types":["regex_syntax::ast::ClassPerl"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassPerlKind.html\" title=\"enum regex_syntax::ast::ClassPerlKind\">ClassPerlKind</a>","synthetic":true,"types":["regex_syntax::ast::ClassPerlKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassAscii.html\" title=\"struct regex_syntax::ast::ClassAscii\">ClassAscii</a>","synthetic":true,"types":["regex_syntax::ast::ClassAscii"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassAsciiKind.html\" title=\"enum regex_syntax::ast::ClassAsciiKind\">ClassAsciiKind</a>","synthetic":true,"types":["regex_syntax::ast::ClassAsciiKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassUnicode.html\" title=\"struct regex_syntax::ast::ClassUnicode\">ClassUnicode</a>","synthetic":true,"types":["regex_syntax::ast::ClassUnicode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassUnicodeKind.html\" title=\"enum regex_syntax::ast::ClassUnicodeKind\">ClassUnicodeKind</a>","synthetic":true,"types":["regex_syntax::ast::ClassUnicodeKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassUnicodeOpKind.html\" title=\"enum regex_syntax::ast::ClassUnicodeOpKind\">ClassUnicodeOpKind</a>","synthetic":true,"types":["regex_syntax::ast::ClassUnicodeOpKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassBracketed.html\" title=\"struct regex_syntax::ast::ClassBracketed\">ClassBracketed</a>","synthetic":true,"types":["regex_syntax::ast::ClassBracketed"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassSet.html\" title=\"enum regex_syntax::ast::ClassSet\">ClassSet</a>","synthetic":true,"types":["regex_syntax::ast::ClassSet"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassSetItem.html\" title=\"enum regex_syntax::ast::ClassSetItem\">ClassSetItem</a>","synthetic":true,"types":["regex_syntax::ast::ClassSetItem"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassSetRange.html\" title=\"struct regex_syntax::ast::ClassSetRange\">ClassSetRange</a>","synthetic":true,"types":["regex_syntax::ast::ClassSetRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassSetUnion.html\" title=\"struct regex_syntax::ast::ClassSetUnion\">ClassSetUnion</a>","synthetic":true,"types":["regex_syntax::ast::ClassSetUnion"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassSetBinaryOp.html\" title=\"struct regex_syntax::ast::ClassSetBinaryOp\">ClassSetBinaryOp</a>","synthetic":true,"types":["regex_syntax::ast::ClassSetBinaryOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassSetBinaryOpKind.html\" title=\"enum regex_syntax::ast::ClassSetBinaryOpKind\">ClassSetBinaryOpKind</a>","synthetic":true,"types":["regex_syntax::ast::ClassSetBinaryOpKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Assertion.html\" title=\"struct regex_syntax::ast::Assertion\">Assertion</a>","synthetic":true,"types":["regex_syntax::ast::Assertion"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.AssertionKind.html\" title=\"enum regex_syntax::ast::AssertionKind\">AssertionKind</a>","synthetic":true,"types":["regex_syntax::ast::AssertionKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Repetition.html\" title=\"struct regex_syntax::ast::Repetition\">Repetition</a>","synthetic":true,"types":["regex_syntax::ast::Repetition"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.RepetitionOp.html\" title=\"struct regex_syntax::ast::RepetitionOp\">RepetitionOp</a>","synthetic":true,"types":["regex_syntax::ast::RepetitionOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.RepetitionKind.html\" title=\"enum regex_syntax::ast::RepetitionKind\">RepetitionKind</a>","synthetic":true,"types":["regex_syntax::ast::RepetitionKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.RepetitionRange.html\" title=\"enum regex_syntax::ast::RepetitionRange\">RepetitionRange</a>","synthetic":true,"types":["regex_syntax::ast::RepetitionRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Group.html\" title=\"struct regex_syntax::ast::Group\">Group</a>","synthetic":true,"types":["regex_syntax::ast::Group"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.GroupKind.html\" title=\"enum regex_syntax::ast::GroupKind\">GroupKind</a>","synthetic":true,"types":["regex_syntax::ast::GroupKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.CaptureName.html\" title=\"struct regex_syntax::ast::CaptureName\">CaptureName</a>","synthetic":true,"types":["regex_syntax::ast::CaptureName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.SetFlags.html\" title=\"struct regex_syntax::ast::SetFlags\">SetFlags</a>","synthetic":true,"types":["regex_syntax::ast::SetFlags"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Flags.html\" title=\"struct regex_syntax::ast::Flags\">Flags</a>","synthetic":true,"types":["regex_syntax::ast::Flags"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.FlagsItem.html\" title=\"struct regex_syntax::ast::FlagsItem\">FlagsItem</a>","synthetic":true,"types":["regex_syntax::ast::FlagsItem"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.FlagsItemKind.html\" title=\"enum regex_syntax::ast::FlagsItemKind\">FlagsItemKind</a>","synthetic":true,"types":["regex_syntax::ast::FlagsItemKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.Flag.html\" title=\"enum regex_syntax::ast::Flag\">Flag</a>","synthetic":true,"types":["regex_syntax::ast::Flag"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/enum.Error.html\" title=\"enum regex_syntax::Error\">Error</a>","synthetic":true,"types":["regex_syntax::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/literal/struct.Literals.html\" title=\"struct regex_syntax::hir::literal::Literals\">Literals</a>","synthetic":true,"types":["regex_syntax::hir::literal::Literals"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/literal/struct.Literal.html\" title=\"struct regex_syntax::hir::literal::Literal\">Literal</a>","synthetic":true,"types":["regex_syntax::hir::literal::Literal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/print/struct.Printer.html\" title=\"struct regex_syntax::hir::print::Printer\">Printer</a>","synthetic":true,"types":["regex_syntax::hir::print::Printer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/translate/struct.TranslatorBuilder.html\" title=\"struct regex_syntax::hir::translate::TranslatorBuilder\">TranslatorBuilder</a>","synthetic":true,"types":["regex_syntax::hir::translate::TranslatorBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"regex_syntax/hir/translate/struct.Translator.html\" title=\"struct regex_syntax::hir::translate::Translator\">Translator</a>","synthetic":true,"types":["regex_syntax::hir::translate::Translator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.CaseFoldError.html\" title=\"struct regex_syntax::hir::CaseFoldError\">CaseFoldError</a>","synthetic":true,"types":["regex_syntax::unicode::CaseFoldError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.Error.html\" title=\"struct regex_syntax::hir::Error\">Error</a>","synthetic":true,"types":["regex_syntax::hir::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.ErrorKind.html\" title=\"enum regex_syntax::hir::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["regex_syntax::hir::ErrorKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.Hir.html\" title=\"struct regex_syntax::hir::Hir\">Hir</a>","synthetic":true,"types":["regex_syntax::hir::Hir"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.HirKind.html\" title=\"enum regex_syntax::hir::HirKind\">HirKind</a>","synthetic":true,"types":["regex_syntax::hir::HirKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.Literal.html\" title=\"enum regex_syntax::hir::Literal\">Literal</a>","synthetic":true,"types":["regex_syntax::hir::Literal"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.Class.html\" title=\"enum regex_syntax::hir::Class\">Class</a>","synthetic":true,"types":["regex_syntax::hir::Class"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassUnicode.html\" title=\"struct regex_syntax::hir::ClassUnicode\">ClassUnicode</a>","synthetic":true,"types":["regex_syntax::hir::ClassUnicode"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassUnicodeIter.html\" title=\"struct regex_syntax::hir::ClassUnicodeIter\">ClassUnicodeIter</a>&lt;'a&gt;","synthetic":true,"types":["regex_syntax::hir::ClassUnicodeIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassUnicodeRange.html\" title=\"struct regex_syntax::hir::ClassUnicodeRange\">ClassUnicodeRange</a>","synthetic":true,"types":["regex_syntax::hir::ClassUnicodeRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassBytes.html\" title=\"struct regex_syntax::hir::ClassBytes\">ClassBytes</a>","synthetic":true,"types":["regex_syntax::hir::ClassBytes"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassBytesIter.html\" title=\"struct regex_syntax::hir::ClassBytesIter\">ClassBytesIter</a>&lt;'a&gt;","synthetic":true,"types":["regex_syntax::hir::ClassBytesIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassBytesRange.html\" title=\"struct regex_syntax::hir::ClassBytesRange\">ClassBytesRange</a>","synthetic":true,"types":["regex_syntax::hir::ClassBytesRange"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.Anchor.html\" title=\"enum regex_syntax::hir::Anchor\">Anchor</a>","synthetic":true,"types":["regex_syntax::hir::Anchor"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.WordBoundary.html\" title=\"enum regex_syntax::hir::WordBoundary\">WordBoundary</a>","synthetic":true,"types":["regex_syntax::hir::WordBoundary"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.Group.html\" title=\"struct regex_syntax::hir::Group\">Group</a>","synthetic":true,"types":["regex_syntax::hir::Group"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.GroupKind.html\" title=\"enum regex_syntax::hir::GroupKind\">GroupKind</a>","synthetic":true,"types":["regex_syntax::hir::GroupKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.Repetition.html\" title=\"struct regex_syntax::hir::Repetition\">Repetition</a>","synthetic":true,"types":["regex_syntax::hir::Repetition"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.RepetitionKind.html\" title=\"enum regex_syntax::hir::RepetitionKind\">RepetitionKind</a>","synthetic":true,"types":["regex_syntax::hir::RepetitionKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.RepetitionRange.html\" title=\"enum regex_syntax::hir::RepetitionRange\">RepetitionRange</a>","synthetic":true,"types":["regex_syntax::hir::RepetitionRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/struct.ParserBuilder.html\" title=\"struct regex_syntax::ParserBuilder\">ParserBuilder</a>","synthetic":true,"types":["regex_syntax::parser::ParserBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"regex_syntax/struct.Parser.html\" title=\"struct regex_syntax::Parser\">Parser</a>","synthetic":true,"types":["regex_syntax::parser::Parser"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/struct.UnicodeWordError.html\" title=\"struct regex_syntax::UnicodeWordError\">UnicodeWordError</a>","synthetic":true,"types":["regex_syntax::unicode::UnicodeWordError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/utf8/enum.Utf8Sequence.html\" title=\"enum regex_syntax::utf8::Utf8Sequence\">Utf8Sequence</a>","synthetic":true,"types":["regex_syntax::utf8::Utf8Sequence"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/utf8/struct.Utf8Range.html\" title=\"struct regex_syntax::utf8::Utf8Range\">Utf8Range</a>","synthetic":true,"types":["regex_syntax::utf8::Utf8Range"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/utf8/struct.Utf8Sequences.html\" title=\"struct regex_syntax::utf8::Utf8Sequences\">Utf8Sequences</a>","synthetic":true,"types":["regex_syntax::utf8::Utf8Sequences"]}];
implementors["rustc_hash"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"rustc_hash/struct.FxHasher.html\" title=\"struct rustc_hash::FxHasher\">FxHasher</a>","synthetic":true,"types":["rustc_hash::FxHasher"]}];
implementors["same_file"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"same_file/struct.Handle.html\" title=\"struct same_file::Handle\">Handle</a>","synthetic":true,"types":["same_file::Handle"]}];
implementors["scopeguard"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"scopeguard/enum.Always.html\" title=\"enum scopeguard::Always\">Always</a>","synthetic":true,"types":["scopeguard::Always"]},{"text":"impl&lt;T, F, S&gt; Freeze for <a class=\"struct\" href=\"scopeguard/struct.ScopeGuard.html\" title=\"struct scopeguard::ScopeGuard\">ScopeGuard</a>&lt;T, F, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["scopeguard::ScopeGuard"]}];
implementors["signal_hook"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"signal_hook/iterator/backend/struct.Handle.html\" title=\"struct signal_hook::iterator::backend::Handle\">Handle</a>","synthetic":true,"types":["signal_hook::iterator::backend::Handle"]},{"text":"impl&lt;R, E&gt; Freeze for <a class=\"struct\" href=\"signal_hook/iterator/backend/struct.SignalDelivery.html\" title=\"struct signal_hook::iterator::backend::SignalDelivery\">SignalDelivery</a>&lt;R, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["signal_hook::iterator::backend::SignalDelivery"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"signal_hook/iterator/backend/struct.Pending.html\" title=\"struct signal_hook::iterator::backend::Pending\">Pending</a>&lt;E&gt;","synthetic":true,"types":["signal_hook::iterator::backend::Pending"]},{"text":"impl&lt;O&gt; Freeze for <a class=\"enum\" href=\"signal_hook/iterator/backend/enum.PollResult.html\" title=\"enum signal_hook::iterator::backend::PollResult\">PollResult</a>&lt;O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Freeze,&nbsp;</span>","synthetic":true,"types":["signal_hook::iterator::backend::PollResult"]},{"text":"impl&lt;SD, E&gt; Freeze for <a class=\"struct\" href=\"signal_hook/iterator/backend/struct.SignalIterator.html\" title=\"struct signal_hook::iterator::backend::SignalIterator\">SignalIterator</a>&lt;SD, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;SD: Freeze,&nbsp;</span>","synthetic":true,"types":["signal_hook::iterator::backend::SignalIterator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"signal_hook/iterator/exfiltrator/raw/struct.WithRawSiginfo.html\" title=\"struct signal_hook::iterator::exfiltrator::raw::WithRawSiginfo\">WithRawSiginfo</a>","synthetic":true,"types":["signal_hook::iterator::exfiltrator::raw::WithRawSiginfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"signal_hook/iterator/exfiltrator/struct.SignalOnly.html\" title=\"struct signal_hook::iterator::exfiltrator::SignalOnly\">SignalOnly</a>","synthetic":true,"types":["signal_hook::iterator::exfiltrator::SignalOnly"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"signal_hook/iterator/struct.SignalsInfo.html\" title=\"struct signal_hook::iterator::SignalsInfo\">SignalsInfo</a>&lt;E&gt;","synthetic":true,"types":["signal_hook::iterator::SignalsInfo"]},{"text":"impl&lt;'a, E&gt; Freeze for <a class=\"struct\" href=\"signal_hook/iterator/struct.Forever.html\" title=\"struct signal_hook::iterator::Forever\">Forever</a>&lt;'a, E&gt;","synthetic":true,"types":["signal_hook::iterator::Forever"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"signal_hook/low_level/channel/struct.Channel.html\" title=\"struct signal_hook::low_level::channel::Channel\">Channel</a>&lt;T&gt;","synthetic":true,"types":["signal_hook::low_level::channel::Channel"]}];
implementors["signal_hook_mio"] = [{"text":"impl&lt;E&nbsp;=&nbsp;<a class=\"struct\" href=\"signal_hook/iterator/exfiltrator/struct.SignalOnly.html\" title=\"struct signal_hook::iterator::exfiltrator::SignalOnly\">SignalOnly</a>&gt; !Freeze for <a class=\"struct\" href=\"signal_hook_mio/v0_8/struct.SignalsInfo.html\" title=\"struct signal_hook_mio::v0_8::SignalsInfo\">SignalsInfo</a>&lt;E&gt;","synthetic":true,"types":["signal_hook_mio::v0_8::SignalsInfo"]}];
implementors["signal_hook_registry"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"signal_hook_registry/struct.SigId.html\" title=\"struct signal_hook_registry::SigId\">SigId</a>","synthetic":true,"types":["signal_hook_registry::SigId"]}];
implementors["smallvec"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"smallvec/enum.CollectionAllocErr.html\" title=\"enum smallvec::CollectionAllocErr\">CollectionAllocErr</a>","synthetic":true,"types":["smallvec::CollectionAllocErr"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"smallvec/struct.Drain.html\" title=\"struct smallvec::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":true,"types":["smallvec::Drain"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"smallvec/struct.SmallVec.html\" title=\"struct smallvec::SmallVec\">SmallVec</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["smallvec::SmallVec"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"smallvec/struct.IntoIter.html\" title=\"struct smallvec::IntoIter\">IntoIter</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["smallvec::IntoIter"]}];
implementors["strsim"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"strsim/enum.StrSimError.html\" title=\"enum strsim::StrSimError\">StrSimError</a>","synthetic":true,"types":["strsim::StrSimError"]}];
implementors["strum"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"strum/enum.ParseError.html\" title=\"enum strum::ParseError\">ParseError</a>","synthetic":true,"types":["strum::ParseError"]}];
implementors["syn"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Underscore.html\" title=\"struct syn::token::Underscore\">Underscore</a>","synthetic":true,"types":["syn::token::Underscore"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Abstract.html\" title=\"struct syn::token::Abstract\">Abstract</a>","synthetic":true,"types":["syn::token::Abstract"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.As.html\" title=\"struct syn::token::As\">As</a>","synthetic":true,"types":["syn::token::As"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Async.html\" title=\"struct syn::token::Async\">Async</a>","synthetic":true,"types":["syn::token::Async"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Auto.html\" title=\"struct syn::token::Auto\">Auto</a>","synthetic":true,"types":["syn::token::Auto"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Await.html\" title=\"struct syn::token::Await\">Await</a>","synthetic":true,"types":["syn::token::Await"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Become.html\" title=\"struct syn::token::Become\">Become</a>","synthetic":true,"types":["syn::token::Become"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Box.html\" title=\"struct syn::token::Box\">Box</a>","synthetic":true,"types":["syn::token::Box"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Break.html\" title=\"struct syn::token::Break\">Break</a>","synthetic":true,"types":["syn::token::Break"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Const.html\" title=\"struct syn::token::Const\">Const</a>","synthetic":true,"types":["syn::token::Const"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Continue.html\" title=\"struct syn::token::Continue\">Continue</a>","synthetic":true,"types":["syn::token::Continue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Crate.html\" title=\"struct syn::token::Crate\">Crate</a>","synthetic":true,"types":["syn::token::Crate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Default.html\" title=\"struct syn::token::Default\">Default</a>","synthetic":true,"types":["syn::token::Default"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Do.html\" title=\"struct syn::token::Do\">Do</a>","synthetic":true,"types":["syn::token::Do"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dyn.html\" title=\"struct syn::token::Dyn\">Dyn</a>","synthetic":true,"types":["syn::token::Dyn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Else.html\" title=\"struct syn::token::Else\">Else</a>","synthetic":true,"types":["syn::token::Else"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Enum.html\" title=\"struct syn::token::Enum\">Enum</a>","synthetic":true,"types":["syn::token::Enum"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Extern.html\" title=\"struct syn::token::Extern\">Extern</a>","synthetic":true,"types":["syn::token::Extern"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Final.html\" title=\"struct syn::token::Final\">Final</a>","synthetic":true,"types":["syn::token::Final"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Fn.html\" title=\"struct syn::token::Fn\">Fn</a>","synthetic":true,"types":["syn::token::Fn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.For.html\" title=\"struct syn::token::For\">For</a>","synthetic":true,"types":["syn::token::For"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.If.html\" title=\"struct syn::token::If\">If</a>","synthetic":true,"types":["syn::token::If"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Impl.html\" title=\"struct syn::token::Impl\">Impl</a>","synthetic":true,"types":["syn::token::Impl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.In.html\" title=\"struct syn::token::In\">In</a>","synthetic":true,"types":["syn::token::In"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Let.html\" title=\"struct syn::token::Let\">Let</a>","synthetic":true,"types":["syn::token::Let"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Loop.html\" title=\"struct syn::token::Loop\">Loop</a>","synthetic":true,"types":["syn::token::Loop"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Macro.html\" title=\"struct syn::token::Macro\">Macro</a>","synthetic":true,"types":["syn::token::Macro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Match.html\" title=\"struct syn::token::Match\">Match</a>","synthetic":true,"types":["syn::token::Match"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Mod.html\" title=\"struct syn::token::Mod\">Mod</a>","synthetic":true,"types":["syn::token::Mod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Move.html\" title=\"struct syn::token::Move\">Move</a>","synthetic":true,"types":["syn::token::Move"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Mut.html\" title=\"struct syn::token::Mut\">Mut</a>","synthetic":true,"types":["syn::token::Mut"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Override.html\" title=\"struct syn::token::Override\">Override</a>","synthetic":true,"types":["syn::token::Override"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Priv.html\" title=\"struct syn::token::Priv\">Priv</a>","synthetic":true,"types":["syn::token::Priv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Pub.html\" title=\"struct syn::token::Pub\">Pub</a>","synthetic":true,"types":["syn::token::Pub"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Ref.html\" title=\"struct syn::token::Ref\">Ref</a>","synthetic":true,"types":["syn::token::Ref"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Return.html\" title=\"struct syn::token::Return\">Return</a>","synthetic":true,"types":["syn::token::Return"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.SelfType.html\" title=\"struct syn::token::SelfType\">SelfType</a>","synthetic":true,"types":["syn::token::SelfType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.SelfValue.html\" title=\"struct syn::token::SelfValue\">SelfValue</a>","synthetic":true,"types":["syn::token::SelfValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Static.html\" title=\"struct syn::token::Static\">Static</a>","synthetic":true,"types":["syn::token::Static"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Struct.html\" title=\"struct syn::token::Struct\">Struct</a>","synthetic":true,"types":["syn::token::Struct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Super.html\" title=\"struct syn::token::Super\">Super</a>","synthetic":true,"types":["syn::token::Super"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Trait.html\" title=\"struct syn::token::Trait\">Trait</a>","synthetic":true,"types":["syn::token::Trait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Try.html\" title=\"struct syn::token::Try\">Try</a>","synthetic":true,"types":["syn::token::Try"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Type.html\" title=\"struct syn::token::Type\">Type</a>","synthetic":true,"types":["syn::token::Type"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Typeof.html\" title=\"struct syn::token::Typeof\">Typeof</a>","synthetic":true,"types":["syn::token::Typeof"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Union.html\" title=\"struct syn::token::Union\">Union</a>","synthetic":true,"types":["syn::token::Union"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Unsafe.html\" title=\"struct syn::token::Unsafe\">Unsafe</a>","synthetic":true,"types":["syn::token::Unsafe"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Unsized.html\" title=\"struct syn::token::Unsized\">Unsized</a>","synthetic":true,"types":["syn::token::Unsized"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Use.html\" title=\"struct syn::token::Use\">Use</a>","synthetic":true,"types":["syn::token::Use"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Virtual.html\" title=\"struct syn::token::Virtual\">Virtual</a>","synthetic":true,"types":["syn::token::Virtual"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Where.html\" title=\"struct syn::token::Where\">Where</a>","synthetic":true,"types":["syn::token::Where"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.While.html\" title=\"struct syn::token::While\">While</a>","synthetic":true,"types":["syn::token::While"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Yield.html\" title=\"struct syn::token::Yield\">Yield</a>","synthetic":true,"types":["syn::token::Yield"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Add.html\" title=\"struct syn::token::Add\">Add</a>","synthetic":true,"types":["syn::token::Add"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.AddEq.html\" title=\"struct syn::token::AddEq\">AddEq</a>","synthetic":true,"types":["syn::token::AddEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.And.html\" title=\"struct syn::token::And\">And</a>","synthetic":true,"types":["syn::token::And"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.AndAnd.html\" title=\"struct syn::token::AndAnd\">AndAnd</a>","synthetic":true,"types":["syn::token::AndAnd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.AndEq.html\" title=\"struct syn::token::AndEq\">AndEq</a>","synthetic":true,"types":["syn::token::AndEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.At.html\" title=\"struct syn::token::At\">At</a>","synthetic":true,"types":["syn::token::At"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Bang.html\" title=\"struct syn::token::Bang\">Bang</a>","synthetic":true,"types":["syn::token::Bang"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Caret.html\" title=\"struct syn::token::Caret\">Caret</a>","synthetic":true,"types":["syn::token::Caret"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.CaretEq.html\" title=\"struct syn::token::CaretEq\">CaretEq</a>","synthetic":true,"types":["syn::token::CaretEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Colon.html\" title=\"struct syn::token::Colon\">Colon</a>","synthetic":true,"types":["syn::token::Colon"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Colon2.html\" title=\"struct syn::token::Colon2\">Colon2</a>","synthetic":true,"types":["syn::token::Colon2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Comma.html\" title=\"struct syn::token::Comma\">Comma</a>","synthetic":true,"types":["syn::token::Comma"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Div.html\" title=\"struct syn::token::Div\">Div</a>","synthetic":true,"types":["syn::token::Div"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.DivEq.html\" title=\"struct syn::token::DivEq\">DivEq</a>","synthetic":true,"types":["syn::token::DivEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dollar.html\" title=\"struct syn::token::Dollar\">Dollar</a>","synthetic":true,"types":["syn::token::Dollar"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dot.html\" title=\"struct syn::token::Dot\">Dot</a>","synthetic":true,"types":["syn::token::Dot"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dot2.html\" title=\"struct syn::token::Dot2\">Dot2</a>","synthetic":true,"types":["syn::token::Dot2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dot3.html\" title=\"struct syn::token::Dot3\">Dot3</a>","synthetic":true,"types":["syn::token::Dot3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.DotDotEq.html\" title=\"struct syn::token::DotDotEq\">DotDotEq</a>","synthetic":true,"types":["syn::token::DotDotEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Eq.html\" title=\"struct syn::token::Eq\">Eq</a>","synthetic":true,"types":["syn::token::Eq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.EqEq.html\" title=\"struct syn::token::EqEq\">EqEq</a>","synthetic":true,"types":["syn::token::EqEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Ge.html\" title=\"struct syn::token::Ge\">Ge</a>","synthetic":true,"types":["syn::token::Ge"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Gt.html\" title=\"struct syn::token::Gt\">Gt</a>","synthetic":true,"types":["syn::token::Gt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Le.html\" title=\"struct syn::token::Le\">Le</a>","synthetic":true,"types":["syn::token::Le"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Lt.html\" title=\"struct syn::token::Lt\">Lt</a>","synthetic":true,"types":["syn::token::Lt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.MulEq.html\" title=\"struct syn::token::MulEq\">MulEq</a>","synthetic":true,"types":["syn::token::MulEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Ne.html\" title=\"struct syn::token::Ne\">Ne</a>","synthetic":true,"types":["syn::token::Ne"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Or.html\" title=\"struct syn::token::Or\">Or</a>","synthetic":true,"types":["syn::token::Or"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.OrEq.html\" title=\"struct syn::token::OrEq\">OrEq</a>","synthetic":true,"types":["syn::token::OrEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.OrOr.html\" title=\"struct syn::token::OrOr\">OrOr</a>","synthetic":true,"types":["syn::token::OrOr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Pound.html\" title=\"struct syn::token::Pound\">Pound</a>","synthetic":true,"types":["syn::token::Pound"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Question.html\" title=\"struct syn::token::Question\">Question</a>","synthetic":true,"types":["syn::token::Question"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.RArrow.html\" title=\"struct syn::token::RArrow\">RArrow</a>","synthetic":true,"types":["syn::token::RArrow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.LArrow.html\" title=\"struct syn::token::LArrow\">LArrow</a>","synthetic":true,"types":["syn::token::LArrow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Rem.html\" title=\"struct syn::token::Rem\">Rem</a>","synthetic":true,"types":["syn::token::Rem"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.RemEq.html\" title=\"struct syn::token::RemEq\">RemEq</a>","synthetic":true,"types":["syn::token::RemEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.FatArrow.html\" title=\"struct syn::token::FatArrow\">FatArrow</a>","synthetic":true,"types":["syn::token::FatArrow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Semi.html\" title=\"struct syn::token::Semi\">Semi</a>","synthetic":true,"types":["syn::token::Semi"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Shl.html\" title=\"struct syn::token::Shl\">Shl</a>","synthetic":true,"types":["syn::token::Shl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.ShlEq.html\" title=\"struct syn::token::ShlEq\">ShlEq</a>","synthetic":true,"types":["syn::token::ShlEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Shr.html\" title=\"struct syn::token::Shr\">Shr</a>","synthetic":true,"types":["syn::token::Shr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.ShrEq.html\" title=\"struct syn::token::ShrEq\">ShrEq</a>","synthetic":true,"types":["syn::token::ShrEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Star.html\" title=\"struct syn::token::Star\">Star</a>","synthetic":true,"types":["syn::token::Star"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Sub.html\" title=\"struct syn::token::Sub\">Sub</a>","synthetic":true,"types":["syn::token::Sub"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.SubEq.html\" title=\"struct syn::token::SubEq\">SubEq</a>","synthetic":true,"types":["syn::token::SubEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Tilde.html\" title=\"struct syn::token::Tilde\">Tilde</a>","synthetic":true,"types":["syn::token::Tilde"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Brace.html\" title=\"struct syn::token::Brace\">Brace</a>","synthetic":true,"types":["syn::token::Brace"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Bracket.html\" title=\"struct syn::token::Bracket\">Bracket</a>","synthetic":true,"types":["syn::token::Bracket"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Paren.html\" title=\"struct syn::token::Paren\">Paren</a>","synthetic":true,"types":["syn::token::Paren"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Group.html\" title=\"struct syn::token::Group\">Group</a>","synthetic":true,"types":["syn::token::Group"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Attribute.html\" title=\"struct syn::Attribute\">Attribute</a>","synthetic":true,"types":["syn::attr::Attribute"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.AttrStyle.html\" title=\"enum syn::AttrStyle\">AttrStyle</a>","synthetic":true,"types":["syn::attr::AttrStyle"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Meta.html\" title=\"enum syn::Meta\">Meta</a>","synthetic":true,"types":["syn::attr::Meta"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.MetaList.html\" title=\"struct syn::MetaList\">MetaList</a>","synthetic":true,"types":["syn::attr::MetaList"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.MetaNameValue.html\" title=\"struct syn::MetaNameValue\">MetaNameValue</a>","synthetic":true,"types":["syn::attr::MetaNameValue"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.NestedMeta.html\" title=\"enum syn::NestedMeta\">NestedMeta</a>","synthetic":true,"types":["syn::attr::NestedMeta"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Variant.html\" title=\"struct syn::Variant\">Variant</a>","synthetic":true,"types":["syn::data::Variant"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Fields.html\" title=\"enum syn::Fields\">Fields</a>","synthetic":true,"types":["syn::data::Fields"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldsNamed.html\" title=\"struct syn::FieldsNamed\">FieldsNamed</a>","synthetic":true,"types":["syn::data::FieldsNamed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldsUnnamed.html\" title=\"struct syn::FieldsUnnamed\">FieldsUnnamed</a>","synthetic":true,"types":["syn::data::FieldsUnnamed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Field.html\" title=\"struct syn::Field\">Field</a>","synthetic":true,"types":["syn::data::Field"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Visibility.html\" title=\"enum syn::Visibility\">Visibility</a>","synthetic":true,"types":["syn::data::Visibility"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.VisPublic.html\" title=\"struct syn::VisPublic\">VisPublic</a>","synthetic":true,"types":["syn::data::VisPublic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.VisCrate.html\" title=\"struct syn::VisCrate\">VisCrate</a>","synthetic":true,"types":["syn::data::VisCrate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.VisRestricted.html\" title=\"struct syn::VisRestricted\">VisRestricted</a>","synthetic":true,"types":["syn::data::VisRestricted"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Expr.html\" title=\"enum syn::Expr\">Expr</a>","synthetic":true,"types":["syn::expr::Expr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprArray.html\" title=\"struct syn::ExprArray\">ExprArray</a>","synthetic":true,"types":["syn::expr::ExprArray"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAssign.html\" title=\"struct syn::ExprAssign\">ExprAssign</a>","synthetic":true,"types":["syn::expr::ExprAssign"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAssignOp.html\" title=\"struct syn::ExprAssignOp\">ExprAssignOp</a>","synthetic":true,"types":["syn::expr::ExprAssignOp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAsync.html\" title=\"struct syn::ExprAsync\">ExprAsync</a>","synthetic":true,"types":["syn::expr::ExprAsync"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAwait.html\" title=\"struct syn::ExprAwait\">ExprAwait</a>","synthetic":true,"types":["syn::expr::ExprAwait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBinary.html\" title=\"struct syn::ExprBinary\">ExprBinary</a>","synthetic":true,"types":["syn::expr::ExprBinary"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBlock.html\" title=\"struct syn::ExprBlock\">ExprBlock</a>","synthetic":true,"types":["syn::expr::ExprBlock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBox.html\" title=\"struct syn::ExprBox\">ExprBox</a>","synthetic":true,"types":["syn::expr::ExprBox"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBreak.html\" title=\"struct syn::ExprBreak\">ExprBreak</a>","synthetic":true,"types":["syn::expr::ExprBreak"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprCall.html\" title=\"struct syn::ExprCall\">ExprCall</a>","synthetic":true,"types":["syn::expr::ExprCall"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprCast.html\" title=\"struct syn::ExprCast\">ExprCast</a>","synthetic":true,"types":["syn::expr::ExprCast"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprClosure.html\" title=\"struct syn::ExprClosure\">ExprClosure</a>","synthetic":true,"types":["syn::expr::ExprClosure"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprContinue.html\" title=\"struct syn::ExprContinue\">ExprContinue</a>","synthetic":true,"types":["syn::expr::ExprContinue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprField.html\" title=\"struct syn::ExprField\">ExprField</a>","synthetic":true,"types":["syn::expr::ExprField"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprForLoop.html\" title=\"struct syn::ExprForLoop\">ExprForLoop</a>","synthetic":true,"types":["syn::expr::ExprForLoop"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprGroup.html\" title=\"struct syn::ExprGroup\">ExprGroup</a>","synthetic":true,"types":["syn::expr::ExprGroup"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprIf.html\" title=\"struct syn::ExprIf\">ExprIf</a>","synthetic":true,"types":["syn::expr::ExprIf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprIndex.html\" title=\"struct syn::ExprIndex\">ExprIndex</a>","synthetic":true,"types":["syn::expr::ExprIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprLet.html\" title=\"struct syn::ExprLet\">ExprLet</a>","synthetic":true,"types":["syn::expr::ExprLet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprLit.html\" title=\"struct syn::ExprLit\">ExprLit</a>","synthetic":true,"types":["syn::expr::ExprLit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprLoop.html\" title=\"struct syn::ExprLoop\">ExprLoop</a>","synthetic":true,"types":["syn::expr::ExprLoop"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprMacro.html\" title=\"struct syn::ExprMacro\">ExprMacro</a>","synthetic":true,"types":["syn::expr::ExprMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprMatch.html\" title=\"struct syn::ExprMatch\">ExprMatch</a>","synthetic":true,"types":["syn::expr::ExprMatch"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprMethodCall.html\" title=\"struct syn::ExprMethodCall\">ExprMethodCall</a>","synthetic":true,"types":["syn::expr::ExprMethodCall"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprParen.html\" title=\"struct syn::ExprParen\">ExprParen</a>","synthetic":true,"types":["syn::expr::ExprParen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprPath.html\" title=\"struct syn::ExprPath\">ExprPath</a>","synthetic":true,"types":["syn::expr::ExprPath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprRange.html\" title=\"struct syn::ExprRange\">ExprRange</a>","synthetic":true,"types":["syn::expr::ExprRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprReference.html\" title=\"struct syn::ExprReference\">ExprReference</a>","synthetic":true,"types":["syn::expr::ExprReference"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprRepeat.html\" title=\"struct syn::ExprRepeat\">ExprRepeat</a>","synthetic":true,"types":["syn::expr::ExprRepeat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprReturn.html\" title=\"struct syn::ExprReturn\">ExprReturn</a>","synthetic":true,"types":["syn::expr::ExprReturn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprStruct.html\" title=\"struct syn::ExprStruct\">ExprStruct</a>","synthetic":true,"types":["syn::expr::ExprStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprTry.html\" title=\"struct syn::ExprTry\">ExprTry</a>","synthetic":true,"types":["syn::expr::ExprTry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprTryBlock.html\" title=\"struct syn::ExprTryBlock\">ExprTryBlock</a>","synthetic":true,"types":["syn::expr::ExprTryBlock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprTuple.html\" title=\"struct syn::ExprTuple\">ExprTuple</a>","synthetic":true,"types":["syn::expr::ExprTuple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprType.html\" title=\"struct syn::ExprType\">ExprType</a>","synthetic":true,"types":["syn::expr::ExprType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprUnary.html\" title=\"struct syn::ExprUnary\">ExprUnary</a>","synthetic":true,"types":["syn::expr::ExprUnary"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprUnsafe.html\" title=\"struct syn::ExprUnsafe\">ExprUnsafe</a>","synthetic":true,"types":["syn::expr::ExprUnsafe"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprWhile.html\" title=\"struct syn::ExprWhile\">ExprWhile</a>","synthetic":true,"types":["syn::expr::ExprWhile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprYield.html\" title=\"struct syn::ExprYield\">ExprYield</a>","synthetic":true,"types":["syn::expr::ExprYield"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Member.html\" title=\"enum syn::Member\">Member</a>","synthetic":true,"types":["syn::expr::Member"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Index.html\" title=\"struct syn::Index\">Index</a>","synthetic":true,"types":["syn::expr::Index"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.MethodTurbofish.html\" title=\"struct syn::MethodTurbofish\">MethodTurbofish</a>","synthetic":true,"types":["syn::expr::MethodTurbofish"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.GenericMethodArgument.html\" title=\"enum syn::GenericMethodArgument\">GenericMethodArgument</a>","synthetic":true,"types":["syn::expr::GenericMethodArgument"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldValue.html\" title=\"struct syn::FieldValue\">FieldValue</a>","synthetic":true,"types":["syn::expr::FieldValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Label.html\" title=\"struct syn::Label\">Label</a>","synthetic":true,"types":["syn::expr::Label"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Arm.html\" title=\"struct syn::Arm\">Arm</a>","synthetic":true,"types":["syn::expr::Arm"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.RangeLimits.html\" title=\"enum syn::RangeLimits\">RangeLimits</a>","synthetic":true,"types":["syn::expr::RangeLimits"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Generics.html\" title=\"struct syn::Generics\">Generics</a>","synthetic":true,"types":["syn::generics::Generics"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.GenericParam.html\" title=\"enum syn::GenericParam\">GenericParam</a>","synthetic":true,"types":["syn::generics::GenericParam"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeParam.html\" title=\"struct syn::TypeParam\">TypeParam</a>","synthetic":true,"types":["syn::generics::TypeParam"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LifetimeDef.html\" title=\"struct syn::LifetimeDef\">LifetimeDef</a>","synthetic":true,"types":["syn::generics::LifetimeDef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ConstParam.html\" title=\"struct syn::ConstParam\">ConstParam</a>","synthetic":true,"types":["syn::generics::ConstParam"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/struct.ImplGenerics.html\" title=\"struct syn::ImplGenerics\">ImplGenerics</a>&lt;'a&gt;","synthetic":true,"types":["syn::generics::ImplGenerics"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/struct.TypeGenerics.html\" title=\"struct syn::TypeGenerics\">TypeGenerics</a>&lt;'a&gt;","synthetic":true,"types":["syn::generics::TypeGenerics"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/struct.Turbofish.html\" title=\"struct syn::Turbofish\">Turbofish</a>&lt;'a&gt;","synthetic":true,"types":["syn::generics::Turbofish"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.BoundLifetimes.html\" title=\"struct syn::BoundLifetimes\">BoundLifetimes</a>","synthetic":true,"types":["syn::generics::BoundLifetimes"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.TypeParamBound.html\" title=\"enum syn::TypeParamBound\">TypeParamBound</a>","synthetic":true,"types":["syn::generics::TypeParamBound"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitBound.html\" title=\"struct syn::TraitBound\">TraitBound</a>","synthetic":true,"types":["syn::generics::TraitBound"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.TraitBoundModifier.html\" title=\"enum syn::TraitBoundModifier\">TraitBoundModifier</a>","synthetic":true,"types":["syn::generics::TraitBoundModifier"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.WhereClause.html\" title=\"struct syn::WhereClause\">WhereClause</a>","synthetic":true,"types":["syn::generics::WhereClause"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.WherePredicate.html\" title=\"enum syn::WherePredicate\">WherePredicate</a>","synthetic":true,"types":["syn::generics::WherePredicate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PredicateType.html\" title=\"struct syn::PredicateType\">PredicateType</a>","synthetic":true,"types":["syn::generics::PredicateType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PredicateLifetime.html\" title=\"struct syn::PredicateLifetime\">PredicateLifetime</a>","synthetic":true,"types":["syn::generics::PredicateLifetime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PredicateEq.html\" title=\"struct syn::PredicateEq\">PredicateEq</a>","synthetic":true,"types":["syn::generics::PredicateEq"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Item.html\" title=\"enum syn::Item\">Item</a>","synthetic":true,"types":["syn::item::Item"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemConst.html\" title=\"struct syn::ItemConst\">ItemConst</a>","synthetic":true,"types":["syn::item::ItemConst"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemEnum.html\" title=\"struct syn::ItemEnum\">ItemEnum</a>","synthetic":true,"types":["syn::item::ItemEnum"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemExternCrate.html\" title=\"struct syn::ItemExternCrate\">ItemExternCrate</a>","synthetic":true,"types":["syn::item::ItemExternCrate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemFn.html\" title=\"struct syn::ItemFn\">ItemFn</a>","synthetic":true,"types":["syn::item::ItemFn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemForeignMod.html\" title=\"struct syn::ItemForeignMod\">ItemForeignMod</a>","synthetic":true,"types":["syn::item::ItemForeignMod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemImpl.html\" title=\"struct syn::ItemImpl\">ItemImpl</a>","synthetic":true,"types":["syn::item::ItemImpl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemMacro.html\" title=\"struct syn::ItemMacro\">ItemMacro</a>","synthetic":true,"types":["syn::item::ItemMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemMacro2.html\" title=\"struct syn::ItemMacro2\">ItemMacro2</a>","synthetic":true,"types":["syn::item::ItemMacro2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemMod.html\" title=\"struct syn::ItemMod\">ItemMod</a>","synthetic":true,"types":["syn::item::ItemMod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemStatic.html\" title=\"struct syn::ItemStatic\">ItemStatic</a>","synthetic":true,"types":["syn::item::ItemStatic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemStruct.html\" title=\"struct syn::ItemStruct\">ItemStruct</a>","synthetic":true,"types":["syn::item::ItemStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemTrait.html\" title=\"struct syn::ItemTrait\">ItemTrait</a>","synthetic":true,"types":["syn::item::ItemTrait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemTraitAlias.html\" title=\"struct syn::ItemTraitAlias\">ItemTraitAlias</a>","synthetic":true,"types":["syn::item::ItemTraitAlias"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemType.html\" title=\"struct syn::ItemType\">ItemType</a>","synthetic":true,"types":["syn::item::ItemType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemUnion.html\" title=\"struct syn::ItemUnion\">ItemUnion</a>","synthetic":true,"types":["syn::item::ItemUnion"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemUse.html\" title=\"struct syn::ItemUse\">ItemUse</a>","synthetic":true,"types":["syn::item::ItemUse"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.UseTree.html\" title=\"enum syn::UseTree\">UseTree</a>","synthetic":true,"types":["syn::item::UseTree"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UsePath.html\" title=\"struct syn::UsePath\">UsePath</a>","synthetic":true,"types":["syn::item::UsePath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UseName.html\" title=\"struct syn::UseName\">UseName</a>","synthetic":true,"types":["syn::item::UseName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UseRename.html\" title=\"struct syn::UseRename\">UseRename</a>","synthetic":true,"types":["syn::item::UseRename"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UseGlob.html\" title=\"struct syn::UseGlob\">UseGlob</a>","synthetic":true,"types":["syn::item::UseGlob"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UseGroup.html\" title=\"struct syn::UseGroup\">UseGroup</a>","synthetic":true,"types":["syn::item::UseGroup"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.ForeignItem.html\" title=\"enum syn::ForeignItem\">ForeignItem</a>","synthetic":true,"types":["syn::item::ForeignItem"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ForeignItemFn.html\" title=\"struct syn::ForeignItemFn\">ForeignItemFn</a>","synthetic":true,"types":["syn::item::ForeignItemFn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ForeignItemStatic.html\" title=\"struct syn::ForeignItemStatic\">ForeignItemStatic</a>","synthetic":true,"types":["syn::item::ForeignItemStatic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ForeignItemType.html\" title=\"struct syn::ForeignItemType\">ForeignItemType</a>","synthetic":true,"types":["syn::item::ForeignItemType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ForeignItemMacro.html\" title=\"struct syn::ForeignItemMacro\">ForeignItemMacro</a>","synthetic":true,"types":["syn::item::ForeignItemMacro"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.TraitItem.html\" title=\"enum syn::TraitItem\">TraitItem</a>","synthetic":true,"types":["syn::item::TraitItem"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitItemConst.html\" title=\"struct syn::TraitItemConst\">TraitItemConst</a>","synthetic":true,"types":["syn::item::TraitItemConst"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitItemMethod.html\" title=\"struct syn::TraitItemMethod\">TraitItemMethod</a>","synthetic":true,"types":["syn::item::TraitItemMethod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitItemType.html\" title=\"struct syn::TraitItemType\">TraitItemType</a>","synthetic":true,"types":["syn::item::TraitItemType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitItemMacro.html\" title=\"struct syn::TraitItemMacro\">TraitItemMacro</a>","synthetic":true,"types":["syn::item::TraitItemMacro"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.ImplItem.html\" title=\"enum syn::ImplItem\">ImplItem</a>","synthetic":true,"types":["syn::item::ImplItem"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ImplItemConst.html\" title=\"struct syn::ImplItemConst\">ImplItemConst</a>","synthetic":true,"types":["syn::item::ImplItemConst"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ImplItemMethod.html\" title=\"struct syn::ImplItemMethod\">ImplItemMethod</a>","synthetic":true,"types":["syn::item::ImplItemMethod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ImplItemType.html\" title=\"struct syn::ImplItemType\">ImplItemType</a>","synthetic":true,"types":["syn::item::ImplItemType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ImplItemMacro.html\" title=\"struct syn::ImplItemMacro\">ImplItemMacro</a>","synthetic":true,"types":["syn::item::ImplItemMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Signature.html\" title=\"struct syn::Signature\">Signature</a>","synthetic":true,"types":["syn::item::Signature"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.FnArg.html\" title=\"enum syn::FnArg\">FnArg</a>","synthetic":true,"types":["syn::item::FnArg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Receiver.html\" title=\"struct syn::Receiver\">Receiver</a>","synthetic":true,"types":["syn::item::Receiver"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.File.html\" title=\"struct syn::File\">File</a>","synthetic":true,"types":["syn::file::File"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Lifetime.html\" title=\"struct syn::Lifetime\">Lifetime</a>","synthetic":true,"types":["syn::lifetime::Lifetime"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Lit.html\" title=\"enum syn::Lit\">Lit</a>","synthetic":true,"types":["syn::lit::Lit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitStr.html\" title=\"struct syn::LitStr\">LitStr</a>","synthetic":true,"types":["syn::lit::LitStr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitByteStr.html\" title=\"struct syn::LitByteStr\">LitByteStr</a>","synthetic":true,"types":["syn::lit::LitByteStr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitByte.html\" title=\"struct syn::LitByte\">LitByte</a>","synthetic":true,"types":["syn::lit::LitByte"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitChar.html\" title=\"struct syn::LitChar\">LitChar</a>","synthetic":true,"types":["syn::lit::LitChar"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitInt.html\" title=\"struct syn::LitInt\">LitInt</a>","synthetic":true,"types":["syn::lit::LitInt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitFloat.html\" title=\"struct syn::LitFloat\">LitFloat</a>","synthetic":true,"types":["syn::lit::LitFloat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitBool.html\" title=\"struct syn::LitBool\">LitBool</a>","synthetic":true,"types":["syn::lit::LitBool"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.StrStyle.html\" title=\"enum syn::StrStyle\">StrStyle</a>","synthetic":true,"types":["syn::lit::StrStyle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Macro.html\" title=\"struct syn::Macro\">Macro</a>","synthetic":true,"types":["syn::mac::Macro"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.MacroDelimiter.html\" title=\"enum syn::MacroDelimiter\">MacroDelimiter</a>","synthetic":true,"types":["syn::mac::MacroDelimiter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DeriveInput.html\" title=\"struct syn::DeriveInput\">DeriveInput</a>","synthetic":true,"types":["syn::derive::DeriveInput"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Data.html\" title=\"enum syn::Data\">Data</a>","synthetic":true,"types":["syn::derive::Data"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DataStruct.html\" title=\"struct syn::DataStruct\">DataStruct</a>","synthetic":true,"types":["syn::derive::DataStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DataEnum.html\" title=\"struct syn::DataEnum\">DataEnum</a>","synthetic":true,"types":["syn::derive::DataEnum"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DataUnion.html\" title=\"struct syn::DataUnion\">DataUnion</a>","synthetic":true,"types":["syn::derive::DataUnion"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.BinOp.html\" title=\"enum syn::BinOp\">BinOp</a>","synthetic":true,"types":["syn::op::BinOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.UnOp.html\" title=\"enum syn::UnOp\">UnOp</a>","synthetic":true,"types":["syn::op::UnOp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Block.html\" title=\"struct syn::Block\">Block</a>","synthetic":true,"types":["syn::stmt::Block"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Stmt.html\" title=\"enum syn::Stmt\">Stmt</a>","synthetic":true,"types":["syn::stmt::Stmt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Local.html\" title=\"struct syn::Local\">Local</a>","synthetic":true,"types":["syn::stmt::Local"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Type.html\" title=\"enum syn::Type\">Type</a>","synthetic":true,"types":["syn::ty::Type"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeArray.html\" title=\"struct syn::TypeArray\">TypeArray</a>","synthetic":true,"types":["syn::ty::TypeArray"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeBareFn.html\" title=\"struct syn::TypeBareFn\">TypeBareFn</a>","synthetic":true,"types":["syn::ty::TypeBareFn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeGroup.html\" title=\"struct syn::TypeGroup\">TypeGroup</a>","synthetic":true,"types":["syn::ty::TypeGroup"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeImplTrait.html\" title=\"struct syn::TypeImplTrait\">TypeImplTrait</a>","synthetic":true,"types":["syn::ty::TypeImplTrait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeInfer.html\" title=\"struct syn::TypeInfer\">TypeInfer</a>","synthetic":true,"types":["syn::ty::TypeInfer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeMacro.html\" title=\"struct syn::TypeMacro\">TypeMacro</a>","synthetic":true,"types":["syn::ty::TypeMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeNever.html\" title=\"struct syn::TypeNever\">TypeNever</a>","synthetic":true,"types":["syn::ty::TypeNever"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeParen.html\" title=\"struct syn::TypeParen\">TypeParen</a>","synthetic":true,"types":["syn::ty::TypeParen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypePath.html\" title=\"struct syn::TypePath\">TypePath</a>","synthetic":true,"types":["syn::ty::TypePath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypePtr.html\" title=\"struct syn::TypePtr\">TypePtr</a>","synthetic":true,"types":["syn::ty::TypePtr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeReference.html\" title=\"struct syn::TypeReference\">TypeReference</a>","synthetic":true,"types":["syn::ty::TypeReference"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeSlice.html\" title=\"struct syn::TypeSlice\">TypeSlice</a>","synthetic":true,"types":["syn::ty::TypeSlice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeTraitObject.html\" title=\"struct syn::TypeTraitObject\">TypeTraitObject</a>","synthetic":true,"types":["syn::ty::TypeTraitObject"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeTuple.html\" title=\"struct syn::TypeTuple\">TypeTuple</a>","synthetic":true,"types":["syn::ty::TypeTuple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Abi.html\" title=\"struct syn::Abi\">Abi</a>","synthetic":true,"types":["syn::ty::Abi"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.BareFnArg.html\" title=\"struct syn::BareFnArg\">BareFnArg</a>","synthetic":true,"types":["syn::ty::BareFnArg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Variadic.html\" title=\"struct syn::Variadic\">Variadic</a>","synthetic":true,"types":["syn::ty::Variadic"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.ReturnType.html\" title=\"enum syn::ReturnType\">ReturnType</a>","synthetic":true,"types":["syn::ty::ReturnType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Pat.html\" title=\"enum syn::Pat\">Pat</a>","synthetic":true,"types":["syn::pat::Pat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatBox.html\" title=\"struct syn::PatBox\">PatBox</a>","synthetic":true,"types":["syn::pat::PatBox"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatIdent.html\" title=\"struct syn::PatIdent\">PatIdent</a>","synthetic":true,"types":["syn::pat::PatIdent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatLit.html\" title=\"struct syn::PatLit\">PatLit</a>","synthetic":true,"types":["syn::pat::PatLit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatMacro.html\" title=\"struct syn::PatMacro\">PatMacro</a>","synthetic":true,"types":["syn::pat::PatMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatOr.html\" title=\"struct syn::PatOr\">PatOr</a>","synthetic":true,"types":["syn::pat::PatOr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatPath.html\" title=\"struct syn::PatPath\">PatPath</a>","synthetic":true,"types":["syn::pat::PatPath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatRange.html\" title=\"struct syn::PatRange\">PatRange</a>","synthetic":true,"types":["syn::pat::PatRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatReference.html\" title=\"struct syn::PatReference\">PatReference</a>","synthetic":true,"types":["syn::pat::PatReference"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatRest.html\" title=\"struct syn::PatRest\">PatRest</a>","synthetic":true,"types":["syn::pat::PatRest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatSlice.html\" title=\"struct syn::PatSlice\">PatSlice</a>","synthetic":true,"types":["syn::pat::PatSlice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatStruct.html\" title=\"struct syn::PatStruct\">PatStruct</a>","synthetic":true,"types":["syn::pat::PatStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatTuple.html\" title=\"struct syn::PatTuple\">PatTuple</a>","synthetic":true,"types":["syn::pat::PatTuple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatTupleStruct.html\" title=\"struct syn::PatTupleStruct\">PatTupleStruct</a>","synthetic":true,"types":["syn::pat::PatTupleStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatType.html\" title=\"struct syn::PatType\">PatType</a>","synthetic":true,"types":["syn::pat::PatType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatWild.html\" title=\"struct syn::PatWild\">PatWild</a>","synthetic":true,"types":["syn::pat::PatWild"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldPat.html\" title=\"struct syn::FieldPat\">FieldPat</a>","synthetic":true,"types":["syn::pat::FieldPat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Path.html\" title=\"struct syn::Path\">Path</a>","synthetic":true,"types":["syn::path::Path"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PathSegment.html\" title=\"struct syn::PathSegment\">PathSegment</a>","synthetic":true,"types":["syn::path::PathSegment"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.PathArguments.html\" title=\"enum syn::PathArguments\">PathArguments</a>","synthetic":true,"types":["syn::path::PathArguments"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.GenericArgument.html\" title=\"enum syn::GenericArgument\">GenericArgument</a>","synthetic":true,"types":["syn::path::GenericArgument"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.AngleBracketedGenericArguments.html\" title=\"struct syn::AngleBracketedGenericArguments\">AngleBracketedGenericArguments</a>","synthetic":true,"types":["syn::path::AngleBracketedGenericArguments"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Binding.html\" title=\"struct syn::Binding\">Binding</a>","synthetic":true,"types":["syn::path::Binding"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Constraint.html\" title=\"struct syn::Constraint\">Constraint</a>","synthetic":true,"types":["syn::path::Constraint"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ParenthesizedGenericArguments.html\" title=\"struct syn::ParenthesizedGenericArguments\">ParenthesizedGenericArguments</a>","synthetic":true,"types":["syn::path::ParenthesizedGenericArguments"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.QSelf.html\" title=\"struct syn::QSelf\">QSelf</a>","synthetic":true,"types":["syn::path::QSelf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/buffer/struct.TokenBuffer.html\" title=\"struct syn::buffer::TokenBuffer\">TokenBuffer</a>","synthetic":true,"types":["syn::buffer::TokenBuffer"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/buffer/struct.Cursor.html\" title=\"struct syn::buffer::Cursor\">Cursor</a>&lt;'a&gt;","synthetic":true,"types":["syn::buffer::Cursor"]},{"text":"impl&lt;T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.Punctuated.html\" title=\"struct syn::punctuated::Punctuated\">Punctuated</a>&lt;T, P&gt;","synthetic":true,"types":["syn::punctuated::Punctuated"]},{"text":"impl&lt;'a, T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.Pairs.html\" title=\"struct syn::punctuated::Pairs\">Pairs</a>&lt;'a, T, P&gt;","synthetic":true,"types":["syn::punctuated::Pairs"]},{"text":"impl&lt;'a, T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.PairsMut.html\" title=\"struct syn::punctuated::PairsMut\">PairsMut</a>&lt;'a, T, P&gt;","synthetic":true,"types":["syn::punctuated::PairsMut"]},{"text":"impl&lt;T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.IntoPairs.html\" title=\"struct syn::punctuated::IntoPairs\">IntoPairs</a>&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["syn::punctuated::IntoPairs"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.IntoIter.html\" title=\"struct syn::punctuated::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["syn::punctuated::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.Iter.html\" title=\"struct syn::punctuated::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["syn::punctuated::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.IterMut.html\" title=\"struct syn::punctuated::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["syn::punctuated::IterMut"]},{"text":"impl&lt;T, P&gt; Freeze for <a class=\"enum\" href=\"syn/punctuated/enum.Pair.html\" title=\"enum syn::punctuated::Pair\">Pair</a>&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["syn::punctuated::Pair"]},{"text":"impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"syn/parse/struct.Lookahead1.html\" title=\"struct syn::parse::Lookahead1\">Lookahead1</a>&lt;'a&gt;","synthetic":true,"types":["syn::lookahead::Lookahead1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/parse/struct.Error.html\" title=\"struct syn::parse::Error\">Error</a>","synthetic":true,"types":["syn::error::Error"]},{"text":"impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"syn/parse/struct.ParseBuffer.html\" title=\"struct syn::parse::ParseBuffer\">ParseBuffer</a>&lt;'a&gt;","synthetic":true,"types":["syn::parse::ParseBuffer"]},{"text":"impl&lt;'c, 'a&gt; Freeze for <a class=\"struct\" href=\"syn/parse/struct.StepCursor.html\" title=\"struct syn::parse::StepCursor\">StepCursor</a>&lt;'c, 'a&gt;","synthetic":true,"types":["syn::parse::StepCursor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/parse/struct.Nothing.html\" title=\"struct syn::parse::Nothing\">Nothing</a>","synthetic":true,"types":["syn::parse::Nothing"]}];
implementors["termcolor"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"termcolor/enum.ColorChoice.html\" title=\"enum termcolor::ColorChoice\">ColorChoice</a>","synthetic":true,"types":["termcolor::ColorChoice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"termcolor/struct.StandardStream.html\" title=\"struct termcolor::StandardStream\">StandardStream</a>","synthetic":true,"types":["termcolor::StandardStream"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"termcolor/struct.StandardStreamLock.html\" title=\"struct termcolor::StandardStreamLock\">StandardStreamLock</a>&lt;'a&gt;","synthetic":true,"types":["termcolor::StandardStreamLock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"termcolor/struct.BufferedStandardStream.html\" title=\"struct termcolor::BufferedStandardStream\">BufferedStandardStream</a>","synthetic":true,"types":["termcolor::BufferedStandardStream"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"termcolor/struct.BufferWriter.html\" title=\"struct termcolor::BufferWriter\">BufferWriter</a>","synthetic":true,"types":["termcolor::BufferWriter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"termcolor/struct.Buffer.html\" title=\"struct termcolor::Buffer\">Buffer</a>","synthetic":true,"types":["termcolor::Buffer"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"termcolor/struct.NoColor.html\" title=\"struct termcolor::NoColor\">NoColor</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["termcolor::NoColor"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"termcolor/struct.Ansi.html\" title=\"struct termcolor::Ansi\">Ansi</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["termcolor::Ansi"]},{"text":"impl Freeze for <a class=\"struct\" href=\"termcolor/struct.ColorSpec.html\" title=\"struct termcolor::ColorSpec\">ColorSpec</a>","synthetic":true,"types":["termcolor::ColorSpec"]},{"text":"impl Freeze for <a class=\"enum\" href=\"termcolor/enum.Color.html\" title=\"enum termcolor::Color\">Color</a>","synthetic":true,"types":["termcolor::Color"]},{"text":"impl Freeze for <a class=\"struct\" href=\"termcolor/struct.ParseColorError.html\" title=\"struct termcolor::ParseColorError\">ParseColorError</a>","synthetic":true,"types":["termcolor::ParseColorError"]}];
implementors["terminal_size"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"terminal_size/struct.Width.html\" title=\"struct terminal_size::Width\">Width</a>","synthetic":true,"types":["terminal_size::Width"]},{"text":"impl Freeze for <a class=\"struct\" href=\"terminal_size/struct.Height.html\" title=\"struct terminal_size::Height\">Height</a>","synthetic":true,"types":["terminal_size::Height"]}];
implementors["textwrap"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"textwrap/enum.WordSeparator.html\" title=\"enum textwrap::WordSeparator\">WordSeparator</a>","synthetic":true,"types":["textwrap::word_separators::WordSeparator"]},{"text":"impl Freeze for <a class=\"enum\" href=\"textwrap/word_splitters/enum.WordSplitter.html\" title=\"enum textwrap::word_splitters::WordSplitter\">WordSplitter</a>","synthetic":true,"types":["textwrap::word_splitters::WordSplitter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"textwrap/wrap_algorithms/enum.WrapAlgorithm.html\" title=\"enum textwrap::wrap_algorithms::WrapAlgorithm\">WrapAlgorithm</a>","synthetic":true,"types":["textwrap::wrap_algorithms::WrapAlgorithm"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"textwrap/core/struct.Word.html\" title=\"struct textwrap::core::Word\">Word</a>&lt;'a&gt;","synthetic":true,"types":["textwrap::core::Word"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"textwrap/struct.Options.html\" title=\"struct textwrap::Options\">Options</a>&lt;'a&gt;","synthetic":true,"types":["textwrap::Options"]}];
implementors["tree_sitter"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"tree_sitter/struct.Language.html\" title=\"struct tree_sitter::Language\">Language</a>","synthetic":true,"types":["tree_sitter::Language"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tree_sitter/struct.Tree.html\" title=\"struct tree_sitter::Tree\">Tree</a>","synthetic":true,"types":["tree_sitter::Tree"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tree_sitter/struct.Point.html\" title=\"struct tree_sitter::Point\">Point</a>","synthetic":true,"types":["tree_sitter::Point"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tree_sitter/struct.Range.html\" title=\"struct tree_sitter::Range\">Range</a>","synthetic":true,"types":["tree_sitter::Range"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tree_sitter/struct.InputEdit.html\" title=\"struct tree_sitter::InputEdit\">InputEdit</a>","synthetic":true,"types":["tree_sitter::InputEdit"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tree_sitter/struct.Node.html\" title=\"struct tree_sitter::Node\">Node</a>&lt;'a&gt;","synthetic":true,"types":["tree_sitter::Node"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tree_sitter/struct.Parser.html\" title=\"struct tree_sitter::Parser\">Parser</a>","synthetic":true,"types":["tree_sitter::Parser"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tree_sitter/enum.LogType.html\" title=\"enum tree_sitter::LogType\">LogType</a>","synthetic":true,"types":["tree_sitter::LogType"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tree_sitter/struct.TreeCursor.html\" title=\"struct tree_sitter::TreeCursor\">TreeCursor</a>&lt;'a&gt;","synthetic":true,"types":["tree_sitter::TreeCursor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tree_sitter/struct.Query.html\" title=\"struct tree_sitter::Query\">Query</a>","synthetic":true,"types":["tree_sitter::Query"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tree_sitter/enum.CaptureQuantifier.html\" title=\"enum tree_sitter::CaptureQuantifier\">CaptureQuantifier</a>","synthetic":true,"types":["tree_sitter::CaptureQuantifier"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tree_sitter/struct.QueryCursor.html\" title=\"struct tree_sitter::QueryCursor\">QueryCursor</a>","synthetic":true,"types":["tree_sitter::QueryCursor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tree_sitter/struct.QueryProperty.html\" title=\"struct tree_sitter::QueryProperty\">QueryProperty</a>","synthetic":true,"types":["tree_sitter::QueryProperty"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tree_sitter/enum.QueryPredicateArg.html\" title=\"enum tree_sitter::QueryPredicateArg\">QueryPredicateArg</a>","synthetic":true,"types":["tree_sitter::QueryPredicateArg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tree_sitter/struct.QueryPredicate.html\" title=\"struct tree_sitter::QueryPredicate\">QueryPredicate</a>","synthetic":true,"types":["tree_sitter::QueryPredicate"]},{"text":"impl&lt;'cursor, 'tree&gt; Freeze for <a class=\"struct\" href=\"tree_sitter/struct.QueryMatch.html\" title=\"struct tree_sitter::QueryMatch\">QueryMatch</a>&lt;'cursor, 'tree&gt;","synthetic":true,"types":["tree_sitter::QueryMatch"]},{"text":"impl&lt;'a, 'tree, T&gt; Freeze for <a class=\"struct\" href=\"tree_sitter/struct.QueryMatches.html\" title=\"struct tree_sitter::QueryMatches\">QueryMatches</a>&lt;'a, 'tree, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tree_sitter::QueryMatches"]},{"text":"impl&lt;'a, 'tree, T&gt; Freeze for <a class=\"struct\" href=\"tree_sitter/struct.QueryCaptures.html\" title=\"struct tree_sitter::QueryCaptures\">QueryCaptures</a>&lt;'a, 'tree, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tree_sitter::QueryCaptures"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tree_sitter/struct.QueryCapture.html\" title=\"struct tree_sitter::QueryCapture\">QueryCapture</a>&lt;'a&gt;","synthetic":true,"types":["tree_sitter::QueryCapture"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tree_sitter/struct.LanguageError.html\" title=\"struct tree_sitter::LanguageError\">LanguageError</a>","synthetic":true,"types":["tree_sitter::LanguageError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tree_sitter/struct.IncludedRangesError.html\" title=\"struct tree_sitter::IncludedRangesError\">IncludedRangesError</a>","synthetic":true,"types":["tree_sitter::IncludedRangesError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tree_sitter/struct.QueryError.html\" title=\"struct tree_sitter::QueryError\">QueryError</a>","synthetic":true,"types":["tree_sitter::QueryError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tree_sitter/enum.QueryErrorKind.html\" title=\"enum tree_sitter::QueryErrorKind\">QueryErrorKind</a>","synthetic":true,"types":["tree_sitter::QueryErrorKind"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tree_sitter/struct.LossyUtf8.html\" title=\"struct tree_sitter::LossyUtf8\">LossyUtf8</a>&lt;'a&gt;","synthetic":true,"types":["tree_sitter::LossyUtf8"]}];
implementors["typed_arena"] = [{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"typed_arena/struct.Arena.html\" title=\"struct typed_arena::Arena\">Arena</a>&lt;T&gt;","synthetic":true,"types":["typed_arena::Arena"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"typed_arena/struct.IterMut.html\" title=\"struct typed_arena::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["typed_arena::IterMut"]}];
implementors["walkdir"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"walkdir/struct.DirEntry.html\" title=\"struct walkdir::DirEntry\">DirEntry</a>","synthetic":true,"types":["walkdir::dent::DirEntry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"walkdir/struct.Error.html\" title=\"struct walkdir::Error\">Error</a>","synthetic":true,"types":["walkdir::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"walkdir/struct.WalkDir.html\" title=\"struct walkdir::WalkDir\">WalkDir</a>","synthetic":true,"types":["walkdir::WalkDir"]},{"text":"impl Freeze for <a class=\"struct\" href=\"walkdir/struct.IntoIter.html\" title=\"struct walkdir::IntoIter\">IntoIter</a>","synthetic":true,"types":["walkdir::IntoIter"]},{"text":"impl&lt;I, P&gt; Freeze for <a class=\"struct\" href=\"walkdir/struct.FilterEntry.html\" title=\"struct walkdir::FilterEntry\">FilterEntry</a>&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["walkdir::FilterEntry"]}];
implementors["wu_diff"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"wu_diff/enum.DiffResult.html\" title=\"enum wu_diff::DiffResult\">DiffResult</a>","synthetic":true,"types":["wu_diff::DiffResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"wu_diff/struct.DiffElement.html\" title=\"struct wu_diff::DiffElement\">DiffElement</a>","synthetic":true,"types":["wu_diff::DiffElement"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()